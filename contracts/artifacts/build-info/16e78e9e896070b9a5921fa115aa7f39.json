{
	"id": "16e78e9e896070b9a5921fa115aa7f39",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PadiTokenStable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title  Padi Token (PADI) — 1:1 CUSD‑backed, pausable, fee‑on‑mint/redeem\n/// @notice Mint and redeem at exactly 1 CUSD per PADI, minus a small protocol fee.\n/// @dev    Fees accrue to a designated treasury; owner can update fees & treasury.\ncontract PadiToken is ERC20, Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    /// @notice Celo Stable USD (CUSD) token on Celo Mainnet\n    IERC20 public immutable cusd;\n\n    /// @notice Address that receives protocol fees\n    address public treasury;\n\n    /// @dev Basis points denominator (100.00%)\n    uint16 public constant MAX_BPS = 10_000;\n\n    /// @notice Fee on mint, in basis points (e.g. 2 = 0.02%)\n    uint16 public mintFeeBps;\n\n    /// @notice Fee on redeem, in basis points\n    uint16 public redeemFeeBps;\n\n    /// @notice Maximum PADI that can ever exist (1 billion * 10⁻¹⁸)\n    uint256 public constant MAX_SUPPLY = 1_000_000_000 * 10**18;\n\n    /// @dev Emitted when PADI are minted: `to` receives `netAmount`, `fee` goes to `treasury`\n    event Minted(address indexed to, uint256 netAmount, uint256 fee);\n\n    /// @dev Emitted when PADI are redeemed: `from` burns `amount`, `netCUSD` returned, `fee` sent to `treasury`\n    event Redeemed(address indexed from, uint256 amount, uint256 netCUSD, uint256 fee);\n\n    /// @dev Emitted when fees are updated\n    event FeesUpdated(uint16 newMintFeeBps, uint16 newRedeemFeeBps);\n\n    /// @dev Emitted when treasury address is changed\n    event TreasuryUpdated(address newTreasury);\n\n    /// @param _cusdAddress  The deployed CUSD token address\n    /// @param _treasury     The address to collect fees\n    /// @param _mintFeeBps   Initial mint fee (bps)\n    /// @param _redeemFeeBps Initial redeem fee (bps)\n    constructor(\n        address _cusdAddress,\n        address _treasury,\n        uint16 _mintFeeBps,\n        uint16 _redeemFeeBps\n    ) ERC20(\"Padi Token\", \"PADI\")Ownable(msg.sender) {\n        \n        require(_cusdAddress != address(0), \"Invalid CUSD address\");\n        require(_treasury != address(0), \"Invalid treasury\");\n        require(_mintFeeBps <= MAX_BPS, \"Mint fee too high\");\n        require(_redeemFeeBps <= MAX_BPS, \"Redeem fee too high\");\n\n        cusd = IERC20(_cusdAddress);\n        treasury = _treasury;\n        mintFeeBps = _mintFeeBps;\n        redeemFeeBps = _redeemFeeBps;\n    }\n\n    /// @notice Update the mint & redeem fees (only owner)\n    function setFees(uint16 _mintFeeBps, uint16 _redeemFeeBps) external onlyOwner {\n        require(_mintFeeBps <= MAX_BPS, \"Mint fee too high\");\n        require(_redeemFeeBps <= MAX_BPS, \"Redeem fee too high\");\n        mintFeeBps = _mintFeeBps;\n        redeemFeeBps = _redeemFeeBps;\n        emit FeesUpdated(_mintFeeBps, _redeemFeeBps);\n    }\n\n    /// @notice Change the treasury address (only owner)\n    function setTreasury(address _treasury) external onlyOwner {\n        require(_treasury != address(0), \"Invalid treasury\");\n        treasury = _treasury;\n        emit TreasuryUpdated(_treasury);\n    }\n\n    /// @notice Lock CUSD and mint PADI, after deducting mint fee\n    /// @param amount The gross amount of CUSD to deposit\n    function mint(uint256 amount)\n        external\n        whenNotPaused\n        nonReentrant\n    {\n        require(amount > 0, \"Amount must be > 0\");\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\");\n\n        // Pull in collateral\n        cusd.safeTransferFrom(msg.sender, address(this), amount);\n\n        // Calculate fee & net mint\n        uint256 fee = (amount * mintFeeBps) / MAX_BPS;\n        uint256 net = amount - fee;\n\n        // Mint net to user, fee to treasury\n        _mint(msg.sender, net);\n        if (fee > 0) {\n            _mint(treasury, fee);\n        }\n\n        emit Minted(msg.sender, net, fee);\n    }\n\n    /// @notice Burn PADI and redeem CUSD, after deducting redeem fee\n    /// @param amount The gross amount of PADI to burn\n    function redeem(uint256 amount)\n        external\n        whenNotPaused\n        nonReentrant\n    {\n        require(amount > 0, \"Amount must be > 0\");\n\n        // Calculate fee & net payout\n        uint256 fee = (amount * redeemFeeBps) / MAX_BPS;\n        uint256 net = amount - fee;\n\n        // Burn total amount from user\n        _burn(msg.sender, amount);\n\n        // Transfer net CUSD back, fee to treasury\n        cusd.safeTransfer(msg.sender, net);\n        if (fee > 0) {\n            cusd.safeTransfer(treasury, fee);\n        }\n\n        emit Redeemed(msg.sender, amount, net, fee);\n    }\n\n    /// @notice Pause minting & redemption in an emergency (only owner)\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// @notice Unpause minting & redemption (only owner)\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // /// @dev Prevent transfers while paused\n    // function _beforeTokenTransfer(\n    //     address from,\n    //     address to,\n    //     uint256 amount\n    // ) internal override {\n    //     super._beforeTokenTransfer(from, to, amount);\n    //     require(!paused(), \"Token transfer while paused\");\n    // }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 392,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 493,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 570,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 576,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 578,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 580,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 582,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/PadiTokenStable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PadiTokenStable.sol": {
				"PadiToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cusdAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_mintFeeBps",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_redeemFeeBps",
									"type": "uint16"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "newMintFeeBps",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "newRedeemFeeBps",
									"type": "uint16"
								}
							],
							"name": "FeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "netAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "netCUSD",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "Redeemed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_BPS",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cusd",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintFeeBps",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redeemFeeBps",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_mintFeeBps",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_redeemFeeBps",
									"type": "uint16"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Fees accrue to a designated treasury; owner can update fees & treasury.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"FeesUpdated(uint16,uint16)": {
								"details": "Emitted when fees are updated"
							},
							"Minted(address,uint256,uint256)": {
								"details": "Emitted when PADI are minted: `to` receives `netAmount`, `fee` goes to `treasury`"
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Redeemed(address,uint256,uint256,uint256)": {
								"details": "Emitted when PADI are redeemed: `from` burns `amount`, `netCUSD` returned, `fee` sent to `treasury`"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"TreasuryUpdated(address)": {
								"details": "Emitted when treasury address is changed"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"_cusdAddress": "The deployed CUSD token address",
									"_mintFeeBps": "Initial mint fee (bps)",
									"_redeemFeeBps": "Initial redeem fee (bps)",
									"_treasury": "The address to collect fees"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"mint(uint256)": {
								"params": {
									"amount": "The gross amount of CUSD to deposit"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"redeem(uint256)": {
								"params": {
									"amount": "The gross amount of PADI to burn"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"MAX_BPS": {
								"details": "Basis points denominator (100.00%)"
							}
						},
						"title": "Padi Token (PADI) — 1:1 CUSD‑backed, pausable, fee‑on‑mint/redeem",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PadiTokenStable.sol\":607:5446  contract PadiToken is ERC20, Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/PadiTokenStable.sol\":2104:2699  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PadiTokenStable.sol\":2272:2282  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5061646920546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5041444900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PadiTokenStable.sol\":2335:2336  0 */\n  0x00\n    /* \"contracts/PadiTokenStable.sol\":2311:2337  _cusdAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PadiTokenStable.sol\":2311:2323  _cusdAddress */\n  dup5\n    /* \"contracts/PadiTokenStable.sol\":2311:2337  _cusdAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PadiTokenStable.sol\":2303:2362  require(_cusdAddress != address(0), \"Invalid CUSD address\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"contracts/PadiTokenStable.sol\":2401:2402  0 */\n  0x00\n    /* \"contracts/PadiTokenStable.sol\":2380:2403  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PadiTokenStable.sol\":2380:2389  _treasury */\n  dup4\n    /* \"contracts/PadiTokenStable.sol\":2380:2403  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PadiTokenStable.sol\":2372:2424  require(_treasury != address(0), \"Invalid treasury\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"contracts/PadiTokenStable.sol\":969:975  10_000 */\n  0x2710\n    /* \"contracts/PadiTokenStable.sol\":2442:2464  _mintFeeBps <= MAX_BPS */\n  0xffff\n  and\n    /* \"contracts/PadiTokenStable.sol\":2442:2453  _mintFeeBps */\n  dup3\n    /* \"contracts/PadiTokenStable.sol\":2442:2464  _mintFeeBps <= MAX_BPS */\n  0xffff\n  and\n  gt\n  iszero\n    /* \"contracts/PadiTokenStable.sol\":2434:2486  require(_mintFeeBps <= MAX_BPS, \"Mint fee too high\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"contracts/PadiTokenStable.sol\":969:975  10_000 */\n  0x2710\n    /* \"contracts/PadiTokenStable.sol\":2504:2528  _redeemFeeBps <= MAX_BPS */\n  0xffff\n  and\n    /* \"contracts/PadiTokenStable.sol\":2504:2517  _redeemFeeBps */\n  dup2\n    /* \"contracts/PadiTokenStable.sol\":2504:2528  _redeemFeeBps <= MAX_BPS */\n  0xffff\n  and\n  gt\n  iszero\n    /* \"contracts/PadiTokenStable.sol\":2496:2552  require(_redeemFeeBps <= MAX_BPS, \"Redeem fee too high\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_32\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_31:\n    /* \"contracts/PadiTokenStable.sol\":2577:2589  _cusdAddress */\n  dup4\n    /* \"contracts/PadiTokenStable.sol\":2563:2590  cusd = IERC20(_cusdAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/PadiTokenStable.sol\":2611:2620  _treasury */\n  dup3\n    /* \"contracts/PadiTokenStable.sol\":2600:2608  treasury */\n  0x07\n  0x00\n    /* \"contracts/PadiTokenStable.sol\":2600:2620  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PadiTokenStable.sol\":2643:2654  _mintFeeBps */\n  dup2\n    /* \"contracts/PadiTokenStable.sol\":2630:2640  mintFeeBps */\n  0x07\n  0x14\n    /* \"contracts/PadiTokenStable.sol\":2630:2654  mintFeeBps = _mintFeeBps */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PadiTokenStable.sol\":2679:2692  _redeemFeeBps */\n  dup1\n    /* \"contracts/PadiTokenStable.sol\":2664:2676  redeemFeeBps */\n  0x07\n  0x16\n    /* \"contracts/PadiTokenStable.sol\":2664:2692  redeemFeeBps = _redeemFeeBps */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PadiTokenStable.sol\":2104:2699  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/PadiTokenStable.sol\":607:5446  contract PadiToken is ERC20, Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_37:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_39:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_40:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_82\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_39\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_41:\n    /* \"#utility.yul\":641:665   */\n  tag_84\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_40\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_85:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_42:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_87\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_41\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:934   */\ntag_43:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:927   */\n  0xffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:928   */\n  and\n    /* \"#utility.yul\":899:928   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:934   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":940:1060   */\ntag_44:\n    /* \"#utility.yul\":1012:1035   */\n  tag_90\n    /* \"#utility.yul\":1029:1034   */\n  dup2\n    /* \"#utility.yul\":1012:1035   */\n  tag_43\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1005:1010   */\n  dup2\n    /* \"#utility.yul\":1002:1036   */\n  eq\n    /* \"#utility.yul\":992:1054   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1047:1048   */\n  dup1\n    /* \"#utility.yul\":1040:1052   */\n  revert\n    /* \"#utility.yul\":992:1054   */\ntag_91:\n    /* \"#utility.yul\":940:1060   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1066:1207   */\ntag_45:\n    /* \"#utility.yul\":1122:1127   */\n  0x00\n    /* \"#utility.yul\":1153:1159   */\n  dup2\n    /* \"#utility.yul\":1147:1160   */\n  mload\n    /* \"#utility.yul\":1138:1160   */\n  swap1\n  pop\n    /* \"#utility.yul\":1169:1201   */\n  tag_93\n    /* \"#utility.yul\":1195:1200   */\n  dup2\n    /* \"#utility.yul\":1169:1201   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1066:1207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1213:2029   */\ntag_3:\n    /* \"#utility.yul\":1308:1314   */\n  0x00\n    /* \"#utility.yul\":1316:1322   */\n  dup1\n    /* \"#utility.yul\":1324:1330   */\n  0x00\n    /* \"#utility.yul\":1332:1338   */\n  dup1\n    /* \"#utility.yul\":1381:1384   */\n  0x80\n    /* \"#utility.yul\":1369:1378   */\n  dup6\n    /* \"#utility.yul\":1360:1367   */\n  dup8\n    /* \"#utility.yul\":1356:1379   */\n  sub\n    /* \"#utility.yul\":1352:1385   */\n  slt\n    /* \"#utility.yul\":1349:1469   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1388:1467   */\n  tag_96\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1349:1469   */\ntag_95:\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1533:1597   */\n  tag_97\n    /* \"#utility.yul\":1589:1596   */\n  dup8\n    /* \"#utility.yul\":1580:1586   */\n  dup3\n    /* \"#utility.yul\":1569:1578   */\n  dup9\n    /* \"#utility.yul\":1565:1587   */\n  add\n    /* \"#utility.yul\":1533:1597   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1523:1597   */\n  swap5\n  pop\n    /* \"#utility.yul\":1479:1607   */\n  pop\n    /* \"#utility.yul\":1646:1648   */\n  0x20\n    /* \"#utility.yul\":1672:1736   */\n  tag_98\n    /* \"#utility.yul\":1728:1735   */\n  dup8\n    /* \"#utility.yul\":1719:1725   */\n  dup3\n    /* \"#utility.yul\":1708:1717   */\n  dup9\n    /* \"#utility.yul\":1704:1726   */\n  add\n    /* \"#utility.yul\":1672:1736   */\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1662:1736   */\n  swap4\n  pop\n    /* \"#utility.yul\":1617:1746   */\n  pop\n    /* \"#utility.yul\":1785:1787   */\n  0x40\n    /* \"#utility.yul\":1811:1874   */\n  tag_99\n    /* \"#utility.yul\":1866:1873   */\n  dup8\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1846:1855   */\n  dup9\n    /* \"#utility.yul\":1842:1864   */\n  add\n    /* \"#utility.yul\":1811:1874   */\n  tag_45\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1801:1874   */\n  swap3\n  pop\n    /* \"#utility.yul\":1756:1884   */\n  pop\n    /* \"#utility.yul\":1923:1925   */\n  0x60\n    /* \"#utility.yul\":1949:2012   */\n  tag_100\n    /* \"#utility.yul\":2004:2011   */\n  dup8\n    /* \"#utility.yul\":1995:2001   */\n  dup3\n    /* \"#utility.yul\":1984:1993   */\n  dup9\n    /* \"#utility.yul\":1980:2002   */\n  add\n    /* \"#utility.yul\":1949:2012   */\n  tag_45\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1939:2012   */\n  swap2\n  pop\n    /* \"#utility.yul\":1894:2022   */\n  pop\n    /* \"#utility.yul\":1213:2029   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2035:2134   */\ntag_46:\n    /* \"#utility.yul\":2087:2093   */\n  0x00\n    /* \"#utility.yul\":2121:2126   */\n  dup2\n    /* \"#utility.yul\":2115:2127   */\n  mload\n    /* \"#utility.yul\":2105:2127   */\n  swap1\n  pop\n    /* \"#utility.yul\":2035:2134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2140:2320   */\ntag_47:\n    /* \"#utility.yul\":2188:2265   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2185:2186   */\n  0x00\n    /* \"#utility.yul\":2178:2266   */\n  mstore\n    /* \"#utility.yul\":2285:2289   */\n  0x41\n    /* \"#utility.yul\":2282:2283   */\n  0x04\n    /* \"#utility.yul\":2275:2290   */\n  mstore\n    /* \"#utility.yul\":2309:2313   */\n  0x24\n    /* \"#utility.yul\":2306:2307   */\n  0x00\n    /* \"#utility.yul\":2299:2314   */\n  revert\n    /* \"#utility.yul\":2326:2506   */\ntag_48:\n    /* \"#utility.yul\":2374:2451   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2371:2372   */\n  0x00\n    /* \"#utility.yul\":2364:2452   */\n  mstore\n    /* \"#utility.yul\":2471:2475   */\n  0x22\n    /* \"#utility.yul\":2468:2469   */\n  0x04\n    /* \"#utility.yul\":2461:2476   */\n  mstore\n    /* \"#utility.yul\":2495:2499   */\n  0x24\n    /* \"#utility.yul\":2492:2493   */\n  0x00\n    /* \"#utility.yul\":2485:2500   */\n  revert\n    /* \"#utility.yul\":2512:2832   */\ntag_49:\n    /* \"#utility.yul\":2556:2562   */\n  0x00\n    /* \"#utility.yul\":2593:2594   */\n  0x02\n    /* \"#utility.yul\":2587:2591   */\n  dup3\n    /* \"#utility.yul\":2583:2595   */\n  div\n    /* \"#utility.yul\":2573:2595   */\n  swap1\n  pop\n    /* \"#utility.yul\":2640:2641   */\n  0x01\n    /* \"#utility.yul\":2634:2638   */\n  dup3\n    /* \"#utility.yul\":2630:2642   */\n  and\n    /* \"#utility.yul\":2661:2679   */\n  dup1\n    /* \"#utility.yul\":2651:2732   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2717:2721   */\n  0x7f\n    /* \"#utility.yul\":2709:2715   */\n  dup3\n    /* \"#utility.yul\":2705:2722   */\n  and\n    /* \"#utility.yul\":2695:2722   */\n  swap2\n  pop\n    /* \"#utility.yul\":2651:2732   */\ntag_105:\n    /* \"#utility.yul\":2779:2781   */\n  0x20\n    /* \"#utility.yul\":2771:2777   */\n  dup3\n    /* \"#utility.yul\":2768:2782   */\n  lt\n    /* \"#utility.yul\":2748:2766   */\n  dup2\n    /* \"#utility.yul\":2745:2783   */\n  sub\n    /* \"#utility.yul\":2742:2826   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2798:2816   */\n  tag_107\n  tag_48\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2742:2826   */\ntag_106:\n    /* \"#utility.yul\":2563:2832   */\n  pop\n    /* \"#utility.yul\":2512:2832   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2838:2979   */\ntag_50:\n    /* \"#utility.yul\":2887:2891   */\n  0x00\n    /* \"#utility.yul\":2910:2913   */\n  dup2\n    /* \"#utility.yul\":2902:2913   */\n  swap1\n  pop\n    /* \"#utility.yul\":2933:2936   */\n  dup2\n    /* \"#utility.yul\":2930:2931   */\n  0x00\n    /* \"#utility.yul\":2923:2937   */\n  mstore\n    /* \"#utility.yul\":2967:2971   */\n  0x20\n    /* \"#utility.yul\":2964:2965   */\n  0x00\n    /* \"#utility.yul\":2954:2972   */\n  keccak256\n    /* \"#utility.yul\":2946:2972   */\n  swap1\n  pop\n    /* \"#utility.yul\":2838:2979   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2985:3078   */\ntag_51:\n    /* \"#utility.yul\":3022:3028   */\n  0x00\n    /* \"#utility.yul\":3069:3071   */\n  0x20\n    /* \"#utility.yul\":3064:3066   */\n  0x1f\n    /* \"#utility.yul\":3057:3062   */\n  dup4\n    /* \"#utility.yul\":3053:3067   */\n  add\n    /* \"#utility.yul\":3049:3072   */\n  div\n    /* \"#utility.yul\":3039:3072   */\n  swap1\n  pop\n    /* \"#utility.yul\":2985:3078   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3084:3191   */\ntag_52:\n    /* \"#utility.yul\":3128:3136   */\n  0x00\n    /* \"#utility.yul\":3178:3183   */\n  dup3\n    /* \"#utility.yul\":3172:3176   */\n  dup3\n    /* \"#utility.yul\":3168:3184   */\n  shl\n    /* \"#utility.yul\":3147:3184   */\n  swap1\n  pop\n    /* \"#utility.yul\":3084:3191   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3197:3590   */\ntag_53:\n    /* \"#utility.yul\":3266:3272   */\n  0x00\n    /* \"#utility.yul\":3316:3317   */\n  0x08\n    /* \"#utility.yul\":3304:3314   */\n  dup4\n    /* \"#utility.yul\":3300:3318   */\n  mul\n    /* \"#utility.yul\":3339:3436   */\n  tag_112\n    /* \"#utility.yul\":3369:3435   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3358:3367   */\n  dup3\n    /* \"#utility.yul\":3339:3436   */\n  tag_52\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3457:3496   */\n  tag_113\n    /* \"#utility.yul\":3487:3495   */\n  dup7\n    /* \"#utility.yul\":3476:3485   */\n  dup4\n    /* \"#utility.yul\":3457:3496   */\n  tag_52\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3445:3496   */\n  swap6\n  pop\n    /* \"#utility.yul\":3529:3533   */\n  dup1\n    /* \"#utility.yul\":3525:3534   */\n  not\n    /* \"#utility.yul\":3518:3523   */\n  dup5\n    /* \"#utility.yul\":3514:3535   */\n  and\n    /* \"#utility.yul\":3505:3535   */\n  swap4\n  pop\n    /* \"#utility.yul\":3578:3582   */\n  dup1\n    /* \"#utility.yul\":3568:3576   */\n  dup7\n    /* \"#utility.yul\":3564:3583   */\n  and\n    /* \"#utility.yul\":3557:3562   */\n  dup5\n    /* \"#utility.yul\":3554:3584   */\n  or\n    /* \"#utility.yul\":3544:3584   */\n  swap3\n  pop\n    /* \"#utility.yul\":3273:3590   */\n  pop\n  pop\n    /* \"#utility.yul\":3197:3590   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3596:3673   */\ntag_54:\n    /* \"#utility.yul\":3633:3640   */\n  0x00\n    /* \"#utility.yul\":3662:3667   */\n  dup2\n    /* \"#utility.yul\":3651:3667   */\n  swap1\n  pop\n    /* \"#utility.yul\":3596:3673   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3679:3739   */\ntag_55:\n    /* \"#utility.yul\":3707:3710   */\n  0x00\n    /* \"#utility.yul\":3728:3733   */\n  dup2\n    /* \"#utility.yul\":3721:3733   */\n  swap1\n  pop\n    /* \"#utility.yul\":3679:3739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3745:3887   */\ntag_56:\n    /* \"#utility.yul\":3795:3804   */\n  0x00\n    /* \"#utility.yul\":3828:3881   */\n  tag_117\n    /* \"#utility.yul\":3846:3880   */\n  tag_118\n    /* \"#utility.yul\":3855:3879   */\n  tag_119\n    /* \"#utility.yul\":3873:3878   */\n  dup5\n    /* \"#utility.yul\":3855:3879   */\n  tag_54\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3846:3880   */\n  tag_55\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3828:3881   */\n  tag_54\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3815:3881   */\n  swap1\n  pop\n    /* \"#utility.yul\":3745:3887   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3893:3968   */\ntag_57:\n    /* \"#utility.yul\":3936:3939   */\n  0x00\n    /* \"#utility.yul\":3957:3962   */\n  dup2\n    /* \"#utility.yul\":3950:3962   */\n  swap1\n  pop\n    /* \"#utility.yul\":3893:3968   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3974:4243   */\ntag_58:\n    /* \"#utility.yul\":4084:4123   */\n  tag_122\n    /* \"#utility.yul\":4115:4122   */\n  dup4\n    /* \"#utility.yul\":4084:4123   */\n  tag_56\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4145:4236   */\n  tag_123\n    /* \"#utility.yul\":4194:4235   */\n  tag_124\n    /* \"#utility.yul\":4218:4234   */\n  dup3\n    /* \"#utility.yul\":4194:4235   */\n  tag_57\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4186:4192   */\n  dup5\n    /* \"#utility.yul\":4179:4183   */\n  dup5\n    /* \"#utility.yul\":4173:4184   */\n  sload\n    /* \"#utility.yul\":4145:4236   */\n  tag_53\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4139:4143   */\n  dup3\n    /* \"#utility.yul\":4132:4237   */\n  sstore\n    /* \"#utility.yul\":4050:4243   */\n  pop\n    /* \"#utility.yul\":3974:4243   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4249:4322   */\ntag_59:\n    /* \"#utility.yul\":4294:4297   */\n  0x00\n    /* \"#utility.yul\":4249:4322   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4328:4517   */\ntag_60:\n    /* \"#utility.yul\":4405:4437   */\n  tag_127\n  tag_59\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4446:4511   */\n  tag_128\n    /* \"#utility.yul\":4504:4510   */\n  dup2\n    /* \"#utility.yul\":4496:4502   */\n  dup5\n    /* \"#utility.yul\":4490:4494   */\n  dup5\n    /* \"#utility.yul\":4446:4511   */\n  tag_58\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4381:4517   */\n  pop\n    /* \"#utility.yul\":4328:4517   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4523:4709   */\ntag_61:\n    /* \"#utility.yul\":4583:4703   */\ntag_130:\n    /* \"#utility.yul\":4600:4603   */\n  dup2\n    /* \"#utility.yul\":4593:4598   */\n  dup2\n    /* \"#utility.yul\":4590:4604   */\n  lt\n    /* \"#utility.yul\":4583:4703   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4654:4693   */\n  tag_133\n    /* \"#utility.yul\":4691:4692   */\n  0x00\n    /* \"#utility.yul\":4684:4689   */\n  dup3\n    /* \"#utility.yul\":4654:4693   */\n  tag_60\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4627:4628   */\n  0x01\n    /* \"#utility.yul\":4620:4625   */\n  dup2\n    /* \"#utility.yul\":4616:4629   */\n  add\n    /* \"#utility.yul\":4607:4629   */\n  swap1\n  pop\n    /* \"#utility.yul\":4583:4703   */\n  jump(tag_130)\ntag_132:\n    /* \"#utility.yul\":4523:4709   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4715:5258   */\ntag_62:\n    /* \"#utility.yul\":4816:4818   */\n  0x1f\n    /* \"#utility.yul\":4811:4814   */\n  dup3\n    /* \"#utility.yul\":4808:4819   */\n  gt\n    /* \"#utility.yul\":4805:5251   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4850:4888   */\n  tag_136\n    /* \"#utility.yul\":4882:4887   */\n  dup2\n    /* \"#utility.yul\":4850:4888   */\n  tag_50\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4934:4963   */\n  tag_137\n    /* \"#utility.yul\":4952:4962   */\n  dup5\n    /* \"#utility.yul\":4934:4963   */\n  tag_51\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4924:4932   */\n  dup2\n    /* \"#utility.yul\":4920:4964   */\n  add\n    /* \"#utility.yul\":5117:5119   */\n  0x20\n    /* \"#utility.yul\":5105:5115   */\n  dup6\n    /* \"#utility.yul\":5102:5120   */\n  lt\n    /* \"#utility.yul\":5099:5148   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5138:5146   */\n  dup2\n    /* \"#utility.yul\":5123:5146   */\n  swap1\n  pop\n    /* \"#utility.yul\":5099:5148   */\ntag_138:\n    /* \"#utility.yul\":5161:5241   */\n  tag_139\n    /* \"#utility.yul\":5217:5239   */\n  tag_140\n    /* \"#utility.yul\":5235:5238   */\n  dup6\n    /* \"#utility.yul\":5217:5239   */\n  tag_51\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5207:5215   */\n  dup4\n    /* \"#utility.yul\":5203:5240   */\n  add\n    /* \"#utility.yul\":5190:5201   */\n  dup3\n    /* \"#utility.yul\":5161:5241   */\n  tag_61\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4820:5251   */\n  pop\n  pop\n    /* \"#utility.yul\":4805:5251   */\ntag_135:\n    /* \"#utility.yul\":4715:5258   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5264:5381   */\ntag_63:\n    /* \"#utility.yul\":5318:5326   */\n  0x00\n    /* \"#utility.yul\":5368:5373   */\n  dup3\n    /* \"#utility.yul\":5362:5366   */\n  dup3\n    /* \"#utility.yul\":5358:5374   */\n  shr\n    /* \"#utility.yul\":5337:5374   */\n  swap1\n  pop\n    /* \"#utility.yul\":5264:5381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5387:5556   */\ntag_64:\n    /* \"#utility.yul\":5431:5437   */\n  0x00\n    /* \"#utility.yul\":5464:5515   */\n  tag_143\n    /* \"#utility.yul\":5512:5513   */\n  0x00\n    /* \"#utility.yul\":5508:5514   */\n  not\n    /* \"#utility.yul\":5500:5505   */\n  dup5\n    /* \"#utility.yul\":5497:5498   */\n  0x08\n    /* \"#utility.yul\":5493:5506   */\n  mul\n    /* \"#utility.yul\":5464:5515   */\n  tag_63\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5460:5516   */\n  not\n    /* \"#utility.yul\":5545:5549   */\n  dup1\n    /* \"#utility.yul\":5539:5543   */\n  dup4\n    /* \"#utility.yul\":5535:5550   */\n  and\n    /* \"#utility.yul\":5525:5550   */\n  swap2\n  pop\n    /* \"#utility.yul\":5438:5556   */\n  pop\n    /* \"#utility.yul\":5387:5556   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5561:5856   */\ntag_65:\n    /* \"#utility.yul\":5637:5641   */\n  0x00\n    /* \"#utility.yul\":5783:5812   */\n  tag_145\n    /* \"#utility.yul\":5808:5811   */\n  dup4\n    /* \"#utility.yul\":5802:5806   */\n  dup4\n    /* \"#utility.yul\":5783:5812   */\n  tag_64\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5775:5812   */\n  swap2\n  pop\n    /* \"#utility.yul\":5845:5848   */\n  dup3\n    /* \"#utility.yul\":5842:5843   */\n  0x02\n    /* \"#utility.yul\":5838:5849   */\n  mul\n    /* \"#utility.yul\":5832:5836   */\n  dup3\n    /* \"#utility.yul\":5829:5850   */\n  or\n    /* \"#utility.yul\":5821:5850   */\n  swap1\n  pop\n    /* \"#utility.yul\":5561:5856   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5861:7256   */\ntag_11:\n    /* \"#utility.yul\":5978:6015   */\n  tag_147\n    /* \"#utility.yul\":6011:6014   */\n  dup3\n    /* \"#utility.yul\":5978:6015   */\n  tag_46\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6080:6098   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6072:6078   */\n  dup2\n    /* \"#utility.yul\":6069:6099   */\n  gt\n    /* \"#utility.yul\":6066:6122   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6102:6120   */\n  tag_149\n  tag_47\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6066:6122   */\ntag_148:\n    /* \"#utility.yul\":6146:6184   */\n  tag_150\n    /* \"#utility.yul\":6178:6182   */\n  dup3\n    /* \"#utility.yul\":6172:6183   */\n  sload\n    /* \"#utility.yul\":6146:6184   */\n  tag_49\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6231:6298   */\n  tag_151\n    /* \"#utility.yul\":6291:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6289   */\n  dup3\n    /* \"#utility.yul\":6277:6281   */\n  dup6\n    /* \"#utility.yul\":6231:6298   */\n  tag_62\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6325:6326   */\n  0x00\n    /* \"#utility.yul\":6349:6353   */\n  0x20\n    /* \"#utility.yul\":6336:6353   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6383   */\n  0x1f\n    /* \"#utility.yul\":6373:6379   */\n  dup4\n    /* \"#utility.yul\":6370:6384   */\n  gt\n    /* \"#utility.yul\":6398:6399   */\n  0x01\n    /* \"#utility.yul\":6393:7011   */\n  dup2\n  eq\n  tag_153\n  jumpi\n    /* \"#utility.yul\":7055:7056   */\n  0x00\n    /* \"#utility.yul\":7072:7078   */\n  dup5\n    /* \"#utility.yul\":7069:7146   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7121:7130   */\n  dup3\n    /* \"#utility.yul\":7116:7119   */\n  dup8\n    /* \"#utility.yul\":7112:7131   */\n  add\n    /* \"#utility.yul\":7106:7132   */\n  mload\n    /* \"#utility.yul\":7097:7132   */\n  swap1\n  pop\n    /* \"#utility.yul\":7069:7146   */\ntag_154:\n    /* \"#utility.yul\":7172:7239   */\n  tag_155\n    /* \"#utility.yul\":7232:7238   */\n  dup6\n    /* \"#utility.yul\":7225:7230   */\n  dup3\n    /* \"#utility.yul\":7172:7239   */\n  tag_65\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7166:7170   */\n  dup7\n    /* \"#utility.yul\":7159:7240   */\n  sstore\n    /* \"#utility.yul\":7028:7250   */\n  pop\n    /* \"#utility.yul\":6363:7250   */\n  jump(tag_152)\n    /* \"#utility.yul\":6393:7011   */\ntag_153:\n    /* \"#utility.yul\":6445:6449   */\n  0x1f\n    /* \"#utility.yul\":6441:6450   */\n  not\n    /* \"#utility.yul\":6433:6439   */\n  dup5\n    /* \"#utility.yul\":6429:6451   */\n  and\n    /* \"#utility.yul\":6479:6516   */\n  tag_156\n    /* \"#utility.yul\":6511:6515   */\n  dup7\n    /* \"#utility.yul\":6479:6516   */\n  tag_50\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6538:6539   */\n  0x00\n    /* \"#utility.yul\":6552:6760   */\ntag_157:\n    /* \"#utility.yul\":6566:6573   */\n  dup3\n    /* \"#utility.yul\":6563:6564   */\n  dup2\n    /* \"#utility.yul\":6560:6574   */\n  lt\n    /* \"#utility.yul\":6552:6760   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":6645:6654   */\n  dup5\n    /* \"#utility.yul\":6640:6643   */\n  dup10\n    /* \"#utility.yul\":6636:6655   */\n  add\n    /* \"#utility.yul\":6630:6656   */\n  mload\n    /* \"#utility.yul\":6622:6628   */\n  dup3\n    /* \"#utility.yul\":6615:6657   */\n  sstore\n    /* \"#utility.yul\":6696:6697   */\n  0x01\n    /* \"#utility.yul\":6688:6694   */\n  dup3\n    /* \"#utility.yul\":6684:6698   */\n  add\n    /* \"#utility.yul\":6674:6698   */\n  swap2\n  pop\n    /* \"#utility.yul\":6743:6745   */\n  0x20\n    /* \"#utility.yul\":6732:6741   */\n  dup6\n    /* \"#utility.yul\":6728:6746   */\n  add\n    /* \"#utility.yul\":6715:6746   */\n  swap5\n  pop\n    /* \"#utility.yul\":6589:6593   */\n  0x20\n    /* \"#utility.yul\":6586:6587   */\n  dup2\n    /* \"#utility.yul\":6582:6594   */\n  add\n    /* \"#utility.yul\":6577:6594   */\n  swap1\n  pop\n    /* \"#utility.yul\":6552:6760   */\n  jump(tag_157)\ntag_159:\n    /* \"#utility.yul\":6788:6794   */\n  dup7\n    /* \"#utility.yul\":6779:6786   */\n  dup4\n    /* \"#utility.yul\":6776:6795   */\n  lt\n    /* \"#utility.yul\":6773:6952   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6846:6855   */\n  dup5\n    /* \"#utility.yul\":6841:6844   */\n  dup10\n    /* \"#utility.yul\":6837:6856   */\n  add\n    /* \"#utility.yul\":6831:6857   */\n  mload\n    /* \"#utility.yul\":6889:6937   */\n  tag_161\n    /* \"#utility.yul\":6931:6935   */\n  0x1f\n    /* \"#utility.yul\":6923:6929   */\n  dup10\n    /* \"#utility.yul\":6919:6936   */\n  and\n    /* \"#utility.yul\":6908:6917   */\n  dup3\n    /* \"#utility.yul\":6889:6937   */\n  tag_64\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6881:6887   */\n  dup4\n    /* \"#utility.yul\":6874:6938   */\n  sstore\n    /* \"#utility.yul\":6796:6952   */\n  pop\n    /* \"#utility.yul\":6773:6952   */\ntag_160:\n    /* \"#utility.yul\":6998:6999   */\n  0x01\n    /* \"#utility.yul\":6994:6995   */\n  0x02\n    /* \"#utility.yul\":6986:6992   */\n  dup9\n    /* \"#utility.yul\":6982:6996   */\n  mul\n    /* \"#utility.yul\":6978:7000   */\n  add\n    /* \"#utility.yul\":6972:6976   */\n  dup9\n    /* \"#utility.yul\":6965:7001   */\n  sstore\n    /* \"#utility.yul\":6400:7011   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6363:7250   */\ntag_152:\n  pop\n    /* \"#utility.yul\":5953:7256   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5861:7256   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7380   */\ntag_66:\n    /* \"#utility.yul\":7349:7373   */\n  tag_163\n    /* \"#utility.yul\":7367:7372   */\n  dup2\n    /* \"#utility.yul\":7349:7373   */\n  tag_40\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7344:7347   */\n  dup3\n    /* \"#utility.yul\":7337:7374   */\n  mstore\n    /* \"#utility.yul\":7262:7380   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7386:7608   */\ntag_16:\n    /* \"#utility.yul\":7479:7483   */\n  0x00\n    /* \"#utility.yul\":7517:7519   */\n  0x20\n    /* \"#utility.yul\":7506:7515   */\n  dup3\n    /* \"#utility.yul\":7502:7520   */\n  add\n    /* \"#utility.yul\":7494:7520   */\n  swap1\n  pop\n    /* \"#utility.yul\":7530:7601   */\n  tag_165\n    /* \"#utility.yul\":7598:7599   */\n  0x00\n    /* \"#utility.yul\":7587:7596   */\n  dup4\n    /* \"#utility.yul\":7583:7600   */\n  add\n    /* \"#utility.yul\":7574:7580   */\n  dup5\n    /* \"#utility.yul\":7530:7601   */\n  tag_66\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7386:7608   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7614:7783   */\ntag_67:\n    /* \"#utility.yul\":7698:7709   */\n  0x00\n    /* \"#utility.yul\":7732:7738   */\n  dup3\n    /* \"#utility.yul\":7727:7730   */\n  dup3\n    /* \"#utility.yul\":7720:7739   */\n  mstore\n    /* \"#utility.yul\":7772:7776   */\n  0x20\n    /* \"#utility.yul\":7767:7770   */\n  dup3\n    /* \"#utility.yul\":7763:7777   */\n  add\n    /* \"#utility.yul\":7748:7777   */\n  swap1\n  pop\n    /* \"#utility.yul\":7614:7783   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7789:7959   */\ntag_68:\n    /* \"#utility.yul\":7929:7951   */\n  0x496e76616c696420435553442061646472657373000000000000000000000000\n    /* \"#utility.yul\":7925:7926   */\n  0x00\n    /* \"#utility.yul\":7917:7923   */\n  dup3\n    /* \"#utility.yul\":7913:7927   */\n  add\n    /* \"#utility.yul\":7906:7952   */\n  mstore\n    /* \"#utility.yul\":7789:7959   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7965:8331   */\ntag_69:\n    /* \"#utility.yul\":8107:8110   */\n  0x00\n    /* \"#utility.yul\":8128:8195   */\n  tag_169\n    /* \"#utility.yul\":8192:8194   */\n  0x14\n    /* \"#utility.yul\":8187:8190   */\n  dup4\n    /* \"#utility.yul\":8128:8195   */\n  tag_67\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8121:8195   */\n  swap2\n  pop\n    /* \"#utility.yul\":8204:8297   */\n  tag_170\n    /* \"#utility.yul\":8293:8296   */\n  dup3\n    /* \"#utility.yul\":8204:8297   */\n  tag_68\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8322:8324   */\n  0x20\n    /* \"#utility.yul\":8317:8320   */\n  dup3\n    /* \"#utility.yul\":8313:8325   */\n  add\n    /* \"#utility.yul\":8306:8325   */\n  swap1\n  pop\n    /* \"#utility.yul\":7965:8331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8337:8756   */\ntag_24:\n    /* \"#utility.yul\":8503:8507   */\n  0x00\n    /* \"#utility.yul\":8541:8543   */\n  0x20\n    /* \"#utility.yul\":8530:8539   */\n  dup3\n    /* \"#utility.yul\":8526:8544   */\n  add\n    /* \"#utility.yul\":8518:8544   */\n  swap1\n  pop\n    /* \"#utility.yul\":8590:8599   */\n  dup2\n    /* \"#utility.yul\":8584:8588   */\n  dup2\n    /* \"#utility.yul\":8580:8600   */\n  sub\n    /* \"#utility.yul\":8576:8577   */\n  0x00\n    /* \"#utility.yul\":8565:8574   */\n  dup4\n    /* \"#utility.yul\":8561:8578   */\n  add\n    /* \"#utility.yul\":8554:8601   */\n  mstore\n    /* \"#utility.yul\":8618:8749   */\n  tag_172\n    /* \"#utility.yul\":8744:8748   */\n  dup2\n    /* \"#utility.yul\":8618:8749   */\n  tag_69\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8610:8749   */\n  swap1\n  pop\n    /* \"#utility.yul\":8337:8756   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8762:8928   */\ntag_70:\n    /* \"#utility.yul\":8902:8920   */\n  0x496e76616c696420747265617375727900000000000000000000000000000000\n    /* \"#utility.yul\":8898:8899   */\n  0x00\n    /* \"#utility.yul\":8890:8896   */\n  dup3\n    /* \"#utility.yul\":8886:8900   */\n  add\n    /* \"#utility.yul\":8879:8921   */\n  mstore\n    /* \"#utility.yul\":8762:8928   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8934:9300   */\ntag_71:\n    /* \"#utility.yul\":9076:9079   */\n  0x00\n    /* \"#utility.yul\":9097:9164   */\n  tag_175\n    /* \"#utility.yul\":9161:9163   */\n  0x10\n    /* \"#utility.yul\":9156:9159   */\n  dup4\n    /* \"#utility.yul\":9097:9164   */\n  tag_67\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":9090:9164   */\n  swap2\n  pop\n    /* \"#utility.yul\":9173:9266   */\n  tag_176\n    /* \"#utility.yul\":9262:9265   */\n  dup3\n    /* \"#utility.yul\":9173:9266   */\n  tag_70\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":9291:9293   */\n  0x20\n    /* \"#utility.yul\":9286:9289   */\n  dup3\n    /* \"#utility.yul\":9282:9294   */\n  add\n    /* \"#utility.yul\":9275:9294   */\n  swap1\n  pop\n    /* \"#utility.yul\":8934:9300   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9306:9725   */\ntag_27:\n    /* \"#utility.yul\":9472:9476   */\n  0x00\n    /* \"#utility.yul\":9510:9512   */\n  0x20\n    /* \"#utility.yul\":9499:9508   */\n  dup3\n    /* \"#utility.yul\":9495:9513   */\n  add\n    /* \"#utility.yul\":9487:9513   */\n  swap1\n  pop\n    /* \"#utility.yul\":9559:9568   */\n  dup2\n    /* \"#utility.yul\":9553:9557   */\n  dup2\n    /* \"#utility.yul\":9549:9569   */\n  sub\n    /* \"#utility.yul\":9545:9546   */\n  0x00\n    /* \"#utility.yul\":9534:9543   */\n  dup4\n    /* \"#utility.yul\":9530:9547   */\n  add\n    /* \"#utility.yul\":9523:9570   */\n  mstore\n    /* \"#utility.yul\":9587:9718   */\n  tag_178\n    /* \"#utility.yul\":9713:9717   */\n  dup2\n    /* \"#utility.yul\":9587:9718   */\n  tag_71\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":9579:9718   */\n  swap1\n  pop\n    /* \"#utility.yul\":9306:9725   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9731:9898   */\ntag_72:\n    /* \"#utility.yul\":9871:9890   */\n  0x4d696e742066656520746f6f2068696768000000000000000000000000000000\n    /* \"#utility.yul\":9867:9868   */\n  0x00\n    /* \"#utility.yul\":9859:9865   */\n  dup3\n    /* \"#utility.yul\":9855:9869   */\n  add\n    /* \"#utility.yul\":9848:9891   */\n  mstore\n    /* \"#utility.yul\":9731:9898   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9904:10270   */\ntag_73:\n    /* \"#utility.yul\":10046:10049   */\n  0x00\n    /* \"#utility.yul\":10067:10134   */\n  tag_181\n    /* \"#utility.yul\":10131:10133   */\n  0x11\n    /* \"#utility.yul\":10126:10129   */\n  dup4\n    /* \"#utility.yul\":10067:10134   */\n  tag_67\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":10060:10134   */\n  swap2\n  pop\n    /* \"#utility.yul\":10143:10236   */\n  tag_182\n    /* \"#utility.yul\":10232:10235   */\n  dup3\n    /* \"#utility.yul\":10143:10236   */\n  tag_72\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":10261:10263   */\n  0x20\n    /* \"#utility.yul\":10256:10259   */\n  dup3\n    /* \"#utility.yul\":10252:10264   */\n  add\n    /* \"#utility.yul\":10245:10264   */\n  swap1\n  pop\n    /* \"#utility.yul\":9904:10270   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10276:10695   */\ntag_30:\n    /* \"#utility.yul\":10442:10446   */\n  0x00\n    /* \"#utility.yul\":10480:10482   */\n  0x20\n    /* \"#utility.yul\":10469:10478   */\n  dup3\n    /* \"#utility.yul\":10465:10483   */\n  add\n    /* \"#utility.yul\":10457:10483   */\n  swap1\n  pop\n    /* \"#utility.yul\":10529:10538   */\n  dup2\n    /* \"#utility.yul\":10523:10527   */\n  dup2\n    /* \"#utility.yul\":10519:10539   */\n  sub\n    /* \"#utility.yul\":10515:10516   */\n  0x00\n    /* \"#utility.yul\":10504:10513   */\n  dup4\n    /* \"#utility.yul\":10500:10517   */\n  add\n    /* \"#utility.yul\":10493:10540   */\n  mstore\n    /* \"#utility.yul\":10557:10688   */\n  tag_184\n    /* \"#utility.yul\":10683:10687   */\n  dup2\n    /* \"#utility.yul\":10557:10688   */\n  tag_73\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":10549:10688   */\n  swap1\n  pop\n    /* \"#utility.yul\":10276:10695   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10701:10870   */\ntag_74:\n    /* \"#utility.yul\":10841:10862   */\n  0x52656465656d2066656520746f6f206869676800000000000000000000000000\n    /* \"#utility.yul\":10837:10838   */\n  0x00\n    /* \"#utility.yul\":10829:10835   */\n  dup3\n    /* \"#utility.yul\":10825:10839   */\n  add\n    /* \"#utility.yul\":10818:10863   */\n  mstore\n    /* \"#utility.yul\":10701:10870   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10876:11242   */\ntag_75:\n    /* \"#utility.yul\":11018:11021   */\n  0x00\n    /* \"#utility.yul\":11039:11106   */\n  tag_187\n    /* \"#utility.yul\":11103:11105   */\n  0x13\n    /* \"#utility.yul\":11098:11101   */\n  dup4\n    /* \"#utility.yul\":11039:11106   */\n  tag_67\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":11032:11106   */\n  swap2\n  pop\n    /* \"#utility.yul\":11115:11208   */\n  tag_188\n    /* \"#utility.yul\":11204:11207   */\n  dup3\n    /* \"#utility.yul\":11115:11208   */\n  tag_74\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":11233:11235   */\n  0x20\n    /* \"#utility.yul\":11228:11231   */\n  dup3\n    /* \"#utility.yul\":11224:11236   */\n  add\n    /* \"#utility.yul\":11217:11236   */\n  swap1\n  pop\n    /* \"#utility.yul\":10876:11242   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11248:11667   */\ntag_33:\n    /* \"#utility.yul\":11414:11418   */\n  0x00\n    /* \"#utility.yul\":11452:11454   */\n  0x20\n    /* \"#utility.yul\":11441:11450   */\n  dup3\n    /* \"#utility.yul\":11437:11455   */\n  add\n    /* \"#utility.yul\":11429:11455   */\n  swap1\n  pop\n    /* \"#utility.yul\":11501:11510   */\n  dup2\n    /* \"#utility.yul\":11495:11499   */\n  dup2\n    /* \"#utility.yul\":11491:11511   */\n  sub\n    /* \"#utility.yul\":11487:11488   */\n  0x00\n    /* \"#utility.yul\":11476:11485   */\n  dup4\n    /* \"#utility.yul\":11472:11489   */\n  add\n    /* \"#utility.yul\":11465:11512   */\n  mstore\n    /* \"#utility.yul\":11529:11660   */\n  tag_190\n    /* \"#utility.yul\":11655:11659   */\n  dup2\n    /* \"#utility.yul\":11529:11660   */\n  tag_75\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":11521:11660   */\n  swap1\n  pop\n    /* \"#utility.yul\":11248:11667   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/PadiTokenStable.sol\":607:5446  contract PadiToken is ERC20, Ownable, Pausable, ReentrancyGuard {... */\ntag_34:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x9cb0b993ce3cc460071d556c01bf4adf48941df3146d18de5e970d113760be43\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/PadiTokenStable.sol\":607:5446  contract PadiToken is ERC20, Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfd967f47\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xa0712d68\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x97c8bcc1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9ef833d4\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x313ce567\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x09f6442c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0c577bdc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":1122:1148  uint16 public redeemFeeBps */\n    tag_5:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":771:799  IERC20 public immutable cusd */\n    tag_6:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":1230:1289  uint256 public constant MAX_SUPPLY = 1_000_000_000 * 10**18 */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":5062:5127  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":858:881  address public treasury */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/PadiTokenStable.sol\":4937:4998  function pause() external onlyOwner {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":1044:1068  uint16 public mintFeeBps */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":2764:3103  function setFees(uint16 _mintFeeBps, uint16 _redeemFeeBps) external onlyOwner {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/PadiTokenStable.sol\":3495:4138  function mint(uint256 amount)... */\n    tag_21:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":4269:4859  function redeem(uint256 amount)... */\n    tag_23:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PadiTokenStable.sol\":3166:3365  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_25:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/PadiTokenStable.sol\":936:975  uint16 public constant MAX_BPS = 10_000 */\n    tag_27:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_124\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":1122:1148  uint16 public redeemFeeBps */\n    tag_43:\n      0x07\n      0x16\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":771:799  IERC20 public immutable cusd */\n    tag_47:\n      immutable(\"0x9cb0b993ce3cc460071d556c01bf4adf48941df3146d18de5e970d113760be43\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":1230:1289  uint256 public constant MAX_SUPPLY = 1_000_000_000 * 10**18 */\n    tag_64:\n        /* \"contracts/PadiTokenStable.sol\":1267:1289  1_000_000_000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/PadiTokenStable.sol\":1230:1289  uint256 public constant MAX_SUPPLY = 1_000_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":5062:5127  function unpause() external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/PadiTokenStable.sol\":5110:5120  _unpause() */\n      tag_146\n        /* \"contracts/PadiTokenStable.sol\":5110:5118  _unpause */\n      tag_147\n        /* \"contracts/PadiTokenStable.sol\":5110:5120  _unpause() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/PadiTokenStable.sol\":5062:5127  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":858:881  address public treasury */\n    tag_72:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":4937:4998  function pause() external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/PadiTokenStable.sol\":4983:4991  _pause() */\n      tag_158\n        /* \"contracts/PadiTokenStable.sol\":4983:4989  _pause */\n      tag_159\n        /* \"contracts/PadiTokenStable.sol\":4983:4991  _pause() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/PadiTokenStable.sol\":4937:4998  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_124\n      jump\t// in\n    tag_162:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_124\n      jump\t// in\n    tag_163:\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n    tag_165:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":1044:1068  uint16 public mintFeeBps */\n    tag_91:\n      0x07\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":2764:3103  function setFees(uint16 _mintFeeBps, uint16 _redeemFeeBps) external onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/PadiTokenStable.sol\":969:975  10_000 */\n      0x2710\n        /* \"contracts/PadiTokenStable.sol\":2860:2882  _mintFeeBps <= MAX_BPS */\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":2860:2871  _mintFeeBps */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":2860:2882  _mintFeeBps <= MAX_BPS */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/PadiTokenStable.sol\":2852:2904  require(_mintFeeBps <= MAX_BPS, \"Mint fee too high\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/PadiTokenStable.sol\":969:975  10_000 */\n      0x2710\n        /* \"contracts/PadiTokenStable.sol\":2922:2946  _redeemFeeBps <= MAX_BPS */\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":2922:2935  _redeemFeeBps */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":2922:2946  _redeemFeeBps <= MAX_BPS */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/PadiTokenStable.sol\":2914:2970  require(_redeemFeeBps <= MAX_BPS, \"Redeem fee too high\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/PadiTokenStable.sol\":2993:3004  _mintFeeBps */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":2980:2990  mintFeeBps */\n      0x07\n      0x14\n        /* \"contracts/PadiTokenStable.sol\":2980:3004  mintFeeBps = _mintFeeBps */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PadiTokenStable.sol\":3029:3042  _redeemFeeBps */\n      dup1\n        /* \"contracts/PadiTokenStable.sol\":3014:3026  redeemFeeBps */\n      0x07\n      0x16\n        /* \"contracts/PadiTokenStable.sol\":3014:3042  redeemFeeBps = _redeemFeeBps */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PadiTokenStable.sol\":3057:3096  FeesUpdated(_mintFeeBps, _redeemFeeBps) */\n      0x2ac80c14c28700f7b5e36f947d572149fe2e3947bac32c3a8c098f3e03722c11\n        /* \"contracts/PadiTokenStable.sol\":3069:3080  _mintFeeBps */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":3082:3095  _redeemFeeBps */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":3057:3096  FeesUpdated(_mintFeeBps, _redeemFeeBps) */\n      mload(0x40)\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PadiTokenStable.sol\":2764:3103  function setFees(uint16 _mintFeeBps, uint16 _redeemFeeBps) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":3495:4138  function mint(uint256 amount)... */\n    tag_100:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_179\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_180\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_182\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/PadiTokenStable.sol\":3616:3617  0 */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":3607:3613  amount */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":3607:3617  amount > 0 */\n      gt\n        /* \"contracts/PadiTokenStable.sol\":3599:3640  require(amount > 0, \"Amount must be > 0\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/PadiTokenStable.sol\":1267:1289  1_000_000_000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/PadiTokenStable.sol\":3674:3680  amount */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":3658:3671  totalSupply() */\n      tag_188\n        /* \"contracts/PadiTokenStable.sol\":3658:3669  totalSupply */\n      tag_51\n        /* \"contracts/PadiTokenStable.sol\":3658:3671  totalSupply() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/PadiTokenStable.sol\":3658:3680  totalSupply() + amount */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/PadiTokenStable.sol\":3658:3694  totalSupply() + amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/PadiTokenStable.sol\":3650:3717  require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/PadiTokenStable.sol\":3758:3814  cusd.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_194\n        /* \"contracts/PadiTokenStable.sol\":3780:3790  msg.sender */\n      caller\n        /* \"contracts/PadiTokenStable.sol\":3800:3804  this */\n      address\n        /* \"contracts/PadiTokenStable.sol\":3807:3813  amount */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":3758:3762  cusd */\n      immutable(\"0x9cb0b993ce3cc460071d556c01bf4adf48941df3146d18de5e970d113760be43\")\n        /* \"contracts/PadiTokenStable.sol\":3758:3779  cusd.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"contracts/PadiTokenStable.sol\":3758:3814  cusd.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/PadiTokenStable.sol\":3861:3872  uint256 fee */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":969:975  10_000 */\n      0x2710\n        /* \"contracts/PadiTokenStable.sol\":3875:3906  (amount * mintFeeBps) / MAX_BPS */\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":3885:3895  mintFeeBps */\n      0x07\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":3876:3895  amount * mintFeeBps */\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":3876:3882  amount */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":3876:3895  amount * mintFeeBps */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/PadiTokenStable.sol\":3875:3906  (amount * mintFeeBps) / MAX_BPS */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/PadiTokenStable.sol\":3861:3906  uint256 fee = (amount * mintFeeBps) / MAX_BPS */\n      swap1\n      pop\n        /* \"contracts/PadiTokenStable.sol\":3916:3927  uint256 net */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":3939:3942  fee */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":3930:3936  amount */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":3930:3942  amount - fee */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/PadiTokenStable.sol\":3916:3942  uint256 net = amount - fee */\n      swap1\n      pop\n        /* \"contracts/PadiTokenStable.sol\":3998:4020  _mint(msg.sender, net) */\n      tag_202\n        /* \"contracts/PadiTokenStable.sol\":4004:4014  msg.sender */\n      caller\n        /* \"contracts/PadiTokenStable.sol\":4016:4019  net */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":3998:4003  _mint */\n      tag_203\n        /* \"contracts/PadiTokenStable.sol\":3998:4020  _mint(msg.sender, net) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/PadiTokenStable.sol\":4040:4041  0 */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":4034:4037  fee */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":4034:4041  fee > 0 */\n      gt\n        /* \"contracts/PadiTokenStable.sol\":4030:4088  if (fee > 0) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/PadiTokenStable.sol\":4057:4077  _mint(treasury, fee) */\n      tag_205\n        /* \"contracts/PadiTokenStable.sol\":4063:4071  treasury */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":4073:4076  fee */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":4057:4062  _mint */\n      tag_203\n        /* \"contracts/PadiTokenStable.sol\":4057:4077  _mint(treasury, fee) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/PadiTokenStable.sol\":4030:4088  if (fee > 0) {... */\n    tag_204:\n        /* \"contracts/PadiTokenStable.sol\":4110:4120  msg.sender */\n      caller\n        /* \"contracts/PadiTokenStable.sol\":4103:4131  Minted(msg.sender, net, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff\n        /* \"contracts/PadiTokenStable.sol\":4122:4125  net */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":4127:4130  fee */\n      dup5\n        /* \"contracts/PadiTokenStable.sol\":4103:4131  Minted(msg.sender, net, fee) */\n      mload(0x40)\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PadiTokenStable.sol\":3589:4138  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_208\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_209\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/PadiTokenStable.sol\":3495:4138  function mint(uint256 amount)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":4269:4859  function redeem(uint256 amount)... */\n    tag_107:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_214\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_180\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_216\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/PadiTokenStable.sol\":4392:4393  0 */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":4383:4389  amount */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":4383:4393  amount > 0 */\n      gt\n        /* \"contracts/PadiTokenStable.sol\":4375:4416  require(amount > 0, \"Amount must be > 0\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_187\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/PadiTokenStable.sol\":4465:4476  uint256 fee */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":969:975  10_000 */\n      0x2710\n        /* \"contracts/PadiTokenStable.sol\":4479:4512  (amount * redeemFeeBps) / MAX_BPS */\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":4489:4501  redeemFeeBps */\n      0x07\n      0x16\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":4480:4501  amount * redeemFeeBps */\n      0xffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":4480:4486  amount */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":4480:4501  amount * redeemFeeBps */\n      tag_220\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_220:\n        /* \"contracts/PadiTokenStable.sol\":4479:4512  (amount * redeemFeeBps) / MAX_BPS */\n      tag_221\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_221:\n        /* \"contracts/PadiTokenStable.sol\":4465:4512  uint256 fee = (amount * redeemFeeBps) / MAX_BPS */\n      swap1\n      pop\n        /* \"contracts/PadiTokenStable.sol\":4522:4533  uint256 net */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":4545:4548  fee */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":4536:4542  amount */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":4536:4548  amount - fee */\n      tag_222\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_222:\n        /* \"contracts/PadiTokenStable.sol\":4522:4548  uint256 net = amount - fee */\n      swap1\n      pop\n        /* \"contracts/PadiTokenStable.sol\":4598:4623  _burn(msg.sender, amount) */\n      tag_223\n        /* \"contracts/PadiTokenStable.sol\":4604:4614  msg.sender */\n      caller\n        /* \"contracts/PadiTokenStable.sol\":4616:4622  amount */\n      dup5\n        /* \"contracts/PadiTokenStable.sol\":4598:4603  _burn */\n      tag_224\n        /* \"contracts/PadiTokenStable.sol\":4598:4623  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/PadiTokenStable.sol\":4685:4719  cusd.safeTransfer(msg.sender, net) */\n      tag_225\n        /* \"contracts/PadiTokenStable.sol\":4703:4713  msg.sender */\n      caller\n        /* \"contracts/PadiTokenStable.sol\":4715:4718  net */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":4685:4689  cusd */\n      immutable(\"0x9cb0b993ce3cc460071d556c01bf4adf48941df3146d18de5e970d113760be43\")\n        /* \"contracts/PadiTokenStable.sol\":4685:4702  cusd.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_226\n      swap1\n        /* \"contracts/PadiTokenStable.sol\":4685:4719  cusd.safeTransfer(msg.sender, net) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"contracts/PadiTokenStable.sol\":4739:4740  0 */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":4733:4736  fee */\n      dup3\n        /* \"contracts/PadiTokenStable.sol\":4733:4740  fee > 0 */\n      gt\n        /* \"contracts/PadiTokenStable.sol\":4729:4799  if (fee > 0) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/PadiTokenStable.sol\":4756:4788  cusd.safeTransfer(treasury, fee) */\n      tag_228\n        /* \"contracts/PadiTokenStable.sol\":4774:4782  treasury */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":4784:4787  fee */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":4756:4760  cusd */\n      immutable(\"0x9cb0b993ce3cc460071d556c01bf4adf48941df3146d18de5e970d113760be43\")\n        /* \"contracts/PadiTokenStable.sol\":4756:4773  cusd.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_226\n      swap1\n        /* \"contracts/PadiTokenStable.sol\":4756:4788  cusd.safeTransfer(treasury, fee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/PadiTokenStable.sol\":4729:4799  if (fee > 0) {... */\n    tag_227:\n        /* \"contracts/PadiTokenStable.sol\":4823:4833  msg.sender */\n      caller\n        /* \"contracts/PadiTokenStable.sol\":4814:4852  Redeemed(msg.sender, amount, net, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x484c40561359f3e3b8be9101897f8680aa82fbe1df9fd9038e0dbc6284032646\n        /* \"contracts/PadiTokenStable.sol\":4835:4841  amount */\n      dup5\n        /* \"contracts/PadiTokenStable.sol\":4843:4846  net */\n      dup4\n        /* \"contracts/PadiTokenStable.sol\":4848:4851  fee */\n      dup6\n        /* \"contracts/PadiTokenStable.sol\":4814:4852  Redeemed(msg.sender, amount, net, fee) */\n      mload(0x40)\n      tag_229\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PadiTokenStable.sol\":4365:4859  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_231\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_209\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/PadiTokenStable.sol\":4269:4859  function redeem(uint256 amount)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":3166:3365  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/PadiTokenStable.sol\":3264:3265  0 */\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":3243:3266  _treasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PadiTokenStable.sol\":3243:3252  _treasury */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":3243:3266  _treasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PadiTokenStable.sol\":3235:3287  require(_treasury != address(0), \"Invalid treasury\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/PadiTokenStable.sol\":3308:3317  _treasury */\n      dup1\n        /* \"contracts/PadiTokenStable.sol\":3297:3305  treasury */\n      0x07\n      0x00\n        /* \"contracts/PadiTokenStable.sol\":3297:3317  treasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PadiTokenStable.sol\":3332:3358  TreasuryUpdated(_treasury) */\n      0x7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1\n        /* \"contracts/PadiTokenStable.sol\":3348:3357  _treasury */\n      dup2\n        /* \"contracts/PadiTokenStable.sol\":3332:3358  TreasuryUpdated(_treasury) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PadiTokenStable.sol\":3166:3365  function setTreasury(address _treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PadiTokenStable.sol\":936:975  uint16 public constant MAX_BPS = 10_000 */\n    tag_120:\n        /* \"contracts/PadiTokenStable.sol\":969:975  10_000 */\n      0x2710\n        /* \"contracts/PadiTokenStable.sol\":936:975  uint16 public constant MAX_BPS = 10_000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_271\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_272\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_278\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_180\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_280\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_283\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_69\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_293\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_307\n      swap3\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_315\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_318\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_318:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_319)\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_323)\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_326\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_69\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_333)\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_336:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_337:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_338:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_339:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_340:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_391\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_336\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":711:782   */\n      tag_392\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_337\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_393\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_338\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":881:910   */\n      tag_394\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_339\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_35:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_396\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_340\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_342:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_344:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_345:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_402\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_344\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_346:\n        /* \"#utility.yul\":1876:1900   */\n      tag_404\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_345\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_405:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_347:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_407\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_346\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_348:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_349:\n        /* \"#utility.yul\":2232:2256   */\n      tag_410\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_348\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_411:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_350:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_413\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_349\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_38:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_416\n      tag_342\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2525:2644   */\n    tag_415:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_417\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_347\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_418\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_350\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_351:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_352:\n        /* \"#utility.yul\":3089:3110   */\n      tag_421\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_351\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_41:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_423\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_352\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3428   */\n    tag_353:\n        /* \"#utility.yul\":3375:3382   */\n      0x00\n        /* \"#utility.yul\":3415:3421   */\n      0xffff\n        /* \"#utility.yul\":3408:3413   */\n      dup3\n        /* \"#utility.yul\":3404:3422   */\n      and\n        /* \"#utility.yul\":3393:3422   */\n      swap1\n      pop\n        /* \"#utility.yul\":3339:3428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3434:3549   */\n    tag_354:\n        /* \"#utility.yul\":3519:3542   */\n      tag_426\n        /* \"#utility.yul\":3536:3541   */\n      dup2\n        /* \"#utility.yul\":3519:3542   */\n      tag_353\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3514:3517   */\n      dup3\n        /* \"#utility.yul\":3507:3543   */\n      mstore\n        /* \"#utility.yul\":3434:3549   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3555:3773   */\n    tag_45:\n        /* \"#utility.yul\":3646:3650   */\n      0x00\n        /* \"#utility.yul\":3684:3686   */\n      0x20\n        /* \"#utility.yul\":3673:3682   */\n      dup3\n        /* \"#utility.yul\":3669:3687   */\n      add\n        /* \"#utility.yul\":3661:3687   */\n      swap1\n      pop\n        /* \"#utility.yul\":3697:3766   */\n      tag_428\n        /* \"#utility.yul\":3763:3764   */\n      0x00\n        /* \"#utility.yul\":3752:3761   */\n      dup4\n        /* \"#utility.yul\":3748:3765   */\n      add\n        /* \"#utility.yul\":3739:3745   */\n      dup5\n        /* \"#utility.yul\":3697:3766   */\n      tag_354\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3555:3773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3779:3839   */\n    tag_355:\n        /* \"#utility.yul\":3807:3810   */\n      0x00\n        /* \"#utility.yul\":3828:3833   */\n      dup2\n        /* \"#utility.yul\":3821:3833   */\n      swap1\n      pop\n        /* \"#utility.yul\":3779:3839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3845:3987   */\n    tag_356:\n        /* \"#utility.yul\":3895:3904   */\n      0x00\n        /* \"#utility.yul\":3928:3981   */\n      tag_431\n        /* \"#utility.yul\":3946:3980   */\n      tag_432\n        /* \"#utility.yul\":3955:3979   */\n      tag_433\n        /* \"#utility.yul\":3973:3978   */\n      dup5\n        /* \"#utility.yul\":3955:3979   */\n      tag_344\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3946:3980   */\n      tag_355\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3928:3981   */\n      tag_344\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3915:3981   */\n      swap1\n      pop\n        /* \"#utility.yul\":3845:3987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3993:4119   */\n    tag_357:\n        /* \"#utility.yul\":4043:4052   */\n      0x00\n        /* \"#utility.yul\":4076:4113   */\n      tag_435\n        /* \"#utility.yul\":4107:4112   */\n      dup3\n        /* \"#utility.yul\":4076:4113   */\n      tag_356\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4063:4113   */\n      swap1\n      pop\n        /* \"#utility.yul\":3993:4119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4125:4266   */\n    tag_358:\n        /* \"#utility.yul\":4190:4199   */\n      0x00\n        /* \"#utility.yul\":4223:4260   */\n      tag_437\n        /* \"#utility.yul\":4254:4259   */\n      dup3\n        /* \"#utility.yul\":4223:4260   */\n      tag_357\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4210:4260   */\n      swap1\n      pop\n        /* \"#utility.yul\":4125:4266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:4433   */\n    tag_359:\n        /* \"#utility.yul\":4374:4426   */\n      tag_439\n        /* \"#utility.yul\":4420:4425   */\n      dup2\n        /* \"#utility.yul\":4374:4426   */\n      tag_358\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4369:4372   */\n      dup3\n        /* \"#utility.yul\":4362:4427   */\n      mstore\n        /* \"#utility.yul\":4272:4433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4439:4691   */\n    tag_49:\n        /* \"#utility.yul\":4547:4551   */\n      0x00\n        /* \"#utility.yul\":4585:4587   */\n      0x20\n        /* \"#utility.yul\":4574:4583   */\n      dup3\n        /* \"#utility.yul\":4570:4588   */\n      add\n        /* \"#utility.yul\":4562:4588   */\n      swap1\n      pop\n        /* \"#utility.yul\":4598:4684   */\n      tag_441\n        /* \"#utility.yul\":4681:4682   */\n      0x00\n        /* \"#utility.yul\":4670:4679   */\n      dup4\n        /* \"#utility.yul\":4666:4683   */\n      add\n        /* \"#utility.yul\":4657:4663   */\n      dup5\n        /* \"#utility.yul\":4598:4684   */\n      tag_359\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4439:4691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4697:4815   */\n    tag_360:\n        /* \"#utility.yul\":4784:4808   */\n      tag_443\n        /* \"#utility.yul\":4802:4807   */\n      dup2\n        /* \"#utility.yul\":4784:4808   */\n      tag_348\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4779:4782   */\n      dup3\n        /* \"#utility.yul\":4772:4809   */\n      mstore\n        /* \"#utility.yul\":4697:4815   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4821:5043   */\n    tag_53:\n        /* \"#utility.yul\":4914:4918   */\n      0x00\n        /* \"#utility.yul\":4952:4954   */\n      0x20\n        /* \"#utility.yul\":4941:4950   */\n      dup3\n        /* \"#utility.yul\":4937:4955   */\n      add\n        /* \"#utility.yul\":4929:4955   */\n      swap1\n      pop\n        /* \"#utility.yul\":4965:5036   */\n      tag_445\n        /* \"#utility.yul\":5033:5034   */\n      0x00\n        /* \"#utility.yul\":5022:5031   */\n      dup4\n        /* \"#utility.yul\":5018:5035   */\n      add\n        /* \"#utility.yul\":5009:5015   */\n      dup5\n        /* \"#utility.yul\":4965:5036   */\n      tag_360\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4821:5043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5049:5668   */\n    tag_56:\n        /* \"#utility.yul\":5126:5132   */\n      0x00\n        /* \"#utility.yul\":5134:5140   */\n      dup1\n        /* \"#utility.yul\":5142:5148   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x60\n        /* \"#utility.yul\":5179:5188   */\n      dup5\n        /* \"#utility.yul\":5170:5177   */\n      dup7\n        /* \"#utility.yul\":5166:5189   */\n      sub\n        /* \"#utility.yul\":5162:5194   */\n      slt\n        /* \"#utility.yul\":5159:5278   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":5197:5276   */\n      tag_448\n      tag_342\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5159:5278   */\n    tag_447:\n        /* \"#utility.yul\":5317:5318   */\n      0x00\n        /* \"#utility.yul\":5342:5395   */\n      tag_449\n        /* \"#utility.yul\":5387:5394   */\n      dup7\n        /* \"#utility.yul\":5378:5384   */\n      dup3\n        /* \"#utility.yul\":5367:5376   */\n      dup8\n        /* \"#utility.yul\":5363:5385   */\n      add\n        /* \"#utility.yul\":5342:5395   */\n      tag_347\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5332:5395   */\n      swap4\n      pop\n        /* \"#utility.yul\":5288:5405   */\n      pop\n        /* \"#utility.yul\":5444:5446   */\n      0x20\n        /* \"#utility.yul\":5470:5523   */\n      tag_450\n        /* \"#utility.yul\":5515:5522   */\n      dup7\n        /* \"#utility.yul\":5506:5512   */\n      dup3\n        /* \"#utility.yul\":5495:5504   */\n      dup8\n        /* \"#utility.yul\":5491:5513   */\n      add\n        /* \"#utility.yul\":5470:5523   */\n      tag_347\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5460:5523   */\n      swap3\n      pop\n        /* \"#utility.yul\":5415:5533   */\n      pop\n        /* \"#utility.yul\":5572:5574   */\n      0x40\n        /* \"#utility.yul\":5598:5651   */\n      tag_451\n        /* \"#utility.yul\":5643:5650   */\n      dup7\n        /* \"#utility.yul\":5634:5640   */\n      dup3\n        /* \"#utility.yul\":5623:5632   */\n      dup8\n        /* \"#utility.yul\":5619:5641   */\n      add\n        /* \"#utility.yul\":5598:5651   */\n      tag_350\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5588:5651   */\n      swap2\n      pop\n        /* \"#utility.yul\":5543:5661   */\n      pop\n        /* \"#utility.yul\":5049:5668   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5674:5760   */\n    tag_361:\n        /* \"#utility.yul\":5709:5716   */\n      0x00\n        /* \"#utility.yul\":5749:5753   */\n      0xff\n        /* \"#utility.yul\":5742:5747   */\n      dup3\n        /* \"#utility.yul\":5738:5754   */\n      and\n        /* \"#utility.yul\":5727:5754   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:5760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5766:5878   */\n    tag_362:\n        /* \"#utility.yul\":5849:5871   */\n      tag_454\n        /* \"#utility.yul\":5865:5870   */\n      dup2\n        /* \"#utility.yul\":5849:5871   */\n      tag_361\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5844:5847   */\n      dup3\n        /* \"#utility.yul\":5837:5872   */\n      mstore\n        /* \"#utility.yul\":5766:5878   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5884:6098   */\n    tag_62:\n        /* \"#utility.yul\":5973:5977   */\n      0x00\n        /* \"#utility.yul\":6011:6013   */\n      0x20\n        /* \"#utility.yul\":6000:6009   */\n      dup3\n        /* \"#utility.yul\":5996:6014   */\n      add\n        /* \"#utility.yul\":5988:6014   */\n      swap1\n      pop\n        /* \"#utility.yul\":6024:6091   */\n      tag_456\n        /* \"#utility.yul\":6088:6089   */\n      0x00\n        /* \"#utility.yul\":6077:6086   */\n      dup4\n        /* \"#utility.yul\":6073:6090   */\n      add\n        /* \"#utility.yul\":6064:6070   */\n      dup5\n        /* \"#utility.yul\":6024:6091   */\n      tag_362\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5884:6098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6222   */\n    tag_363:\n        /* \"#utility.yul\":6191:6215   */\n      tag_458\n        /* \"#utility.yul\":6209:6214   */\n      dup2\n        /* \"#utility.yul\":6191:6215   */\n      tag_345\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6186:6189   */\n      dup3\n        /* \"#utility.yul\":6179:6216   */\n      mstore\n        /* \"#utility.yul\":6104:6222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6228:6450   */\n    tag_74:\n        /* \"#utility.yul\":6321:6325   */\n      0x00\n        /* \"#utility.yul\":6359:6361   */\n      0x20\n        /* \"#utility.yul\":6348:6357   */\n      dup3\n        /* \"#utility.yul\":6344:6362   */\n      add\n        /* \"#utility.yul\":6336:6362   */\n      swap1\n      pop\n        /* \"#utility.yul\":6372:6443   */\n      tag_460\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6429:6438   */\n      dup4\n        /* \"#utility.yul\":6425:6442   */\n      add\n        /* \"#utility.yul\":6416:6422   */\n      dup5\n        /* \"#utility.yul\":6372:6443   */\n      tag_363\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6228:6450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6456:6785   */\n    tag_77:\n        /* \"#utility.yul\":6515:6521   */\n      0x00\n        /* \"#utility.yul\":6564:6566   */\n      0x20\n        /* \"#utility.yul\":6552:6561   */\n      dup3\n        /* \"#utility.yul\":6543:6550   */\n      dup5\n        /* \"#utility.yul\":6539:6562   */\n      sub\n        /* \"#utility.yul\":6535:6567   */\n      slt\n        /* \"#utility.yul\":6532:6651   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6570:6649   */\n      tag_463\n      tag_342\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6532:6651   */\n    tag_462:\n        /* \"#utility.yul\":6690:6691   */\n      0x00\n        /* \"#utility.yul\":6715:6768   */\n      tag_464\n        /* \"#utility.yul\":6760:6767   */\n      dup5\n        /* \"#utility.yul\":6751:6757   */\n      dup3\n        /* \"#utility.yul\":6740:6749   */\n      dup6\n        /* \"#utility.yul\":6736:6758   */\n      add\n        /* \"#utility.yul\":6715:6768   */\n      tag_347\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6705:6768   */\n      swap2\n      pop\n        /* \"#utility.yul\":6661:6778   */\n      pop\n        /* \"#utility.yul\":6456:6785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6791:6911   */\n    tag_364:\n        /* \"#utility.yul\":6863:6886   */\n      tag_466\n        /* \"#utility.yul\":6880:6885   */\n      dup2\n        /* \"#utility.yul\":6863:6886   */\n      tag_353\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6856:6861   */\n      dup2\n        /* \"#utility.yul\":6853:6887   */\n      eq\n        /* \"#utility.yul\":6843:6905   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":6901:6902   */\n      0x00\n        /* \"#utility.yul\":6898:6899   */\n      dup1\n        /* \"#utility.yul\":6891:6903   */\n      revert\n        /* \"#utility.yul\":6843:6905   */\n    tag_467:\n        /* \"#utility.yul\":6791:6911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7054   */\n    tag_365:\n        /* \"#utility.yul\":6962:6967   */\n      0x00\n        /* \"#utility.yul\":7000:7006   */\n      dup2\n        /* \"#utility.yul\":6987:7007   */\n      calldataload\n        /* \"#utility.yul\":6978:7007   */\n      swap1\n      pop\n        /* \"#utility.yul\":7016:7048   */\n      tag_469\n        /* \"#utility.yul\":7042:7047   */\n      dup2\n        /* \"#utility.yul\":7016:7048   */\n      tag_364\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6917:7054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7060:7530   */\n    tag_95:\n        /* \"#utility.yul\":7126:7132   */\n      0x00\n        /* \"#utility.yul\":7134:7140   */\n      dup1\n        /* \"#utility.yul\":7183:7185   */\n      0x40\n        /* \"#utility.yul\":7171:7180   */\n      dup4\n        /* \"#utility.yul\":7162:7169   */\n      dup6\n        /* \"#utility.yul\":7158:7181   */\n      sub\n        /* \"#utility.yul\":7154:7186   */\n      slt\n        /* \"#utility.yul\":7151:7270   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7189:7268   */\n      tag_472\n      tag_342\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7151:7270   */\n    tag_471:\n        /* \"#utility.yul\":7309:7310   */\n      0x00\n        /* \"#utility.yul\":7334:7386   */\n      tag_473\n        /* \"#utility.yul\":7378:7385   */\n      dup6\n        /* \"#utility.yul\":7369:7375   */\n      dup3\n        /* \"#utility.yul\":7358:7367   */\n      dup7\n        /* \"#utility.yul\":7354:7376   */\n      add\n        /* \"#utility.yul\":7334:7386   */\n      tag_365\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7324:7386   */\n      swap3\n      pop\n        /* \"#utility.yul\":7280:7396   */\n      pop\n        /* \"#utility.yul\":7435:7437   */\n      0x20\n        /* \"#utility.yul\":7461:7513   */\n      tag_474\n        /* \"#utility.yul\":7505:7512   */\n      dup6\n        /* \"#utility.yul\":7496:7502   */\n      dup3\n        /* \"#utility.yul\":7485:7494   */\n      dup7\n        /* \"#utility.yul\":7481:7503   */\n      add\n        /* \"#utility.yul\":7461:7513   */\n      tag_365\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7451:7513   */\n      swap2\n      pop\n        /* \"#utility.yul\":7406:7523   */\n      pop\n        /* \"#utility.yul\":7060:7530   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7536:7865   */\n    tag_99:\n        /* \"#utility.yul\":7595:7601   */\n      0x00\n        /* \"#utility.yul\":7644:7646   */\n      0x20\n        /* \"#utility.yul\":7632:7641   */\n      dup3\n        /* \"#utility.yul\":7623:7630   */\n      dup5\n        /* \"#utility.yul\":7619:7642   */\n      sub\n        /* \"#utility.yul\":7615:7647   */\n      slt\n        /* \"#utility.yul\":7612:7731   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":7650:7729   */\n      tag_477\n      tag_342\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7612:7731   */\n    tag_476:\n        /* \"#utility.yul\":7770:7771   */\n      0x00\n        /* \"#utility.yul\":7795:7848   */\n      tag_478\n        /* \"#utility.yul\":7840:7847   */\n      dup5\n        /* \"#utility.yul\":7831:7837   */\n      dup3\n        /* \"#utility.yul\":7820:7829   */\n      dup6\n        /* \"#utility.yul\":7816:7838   */\n      add\n        /* \"#utility.yul\":7795:7848   */\n      tag_350\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7785:7848   */\n      swap2\n      pop\n        /* \"#utility.yul\":7741:7858   */\n      pop\n        /* \"#utility.yul\":7536:7865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7871:8345   */\n    tag_110:\n        /* \"#utility.yul\":7939:7945   */\n      0x00\n        /* \"#utility.yul\":7947:7953   */\n      dup1\n        /* \"#utility.yul\":7996:7998   */\n      0x40\n        /* \"#utility.yul\":7984:7993   */\n      dup4\n        /* \"#utility.yul\":7975:7982   */\n      dup6\n        /* \"#utility.yul\":7971:7994   */\n      sub\n        /* \"#utility.yul\":7967:7999   */\n      slt\n        /* \"#utility.yul\":7964:8083   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8002:8081   */\n      tag_481\n      tag_342\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7964:8083   */\n    tag_480:\n        /* \"#utility.yul\":8122:8123   */\n      0x00\n        /* \"#utility.yul\":8147:8200   */\n      tag_482\n        /* \"#utility.yul\":8192:8199   */\n      dup6\n        /* \"#utility.yul\":8183:8189   */\n      dup3\n        /* \"#utility.yul\":8172:8181   */\n      dup7\n        /* \"#utility.yul\":8168:8190   */\n      add\n        /* \"#utility.yul\":8147:8200   */\n      tag_347\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8137:8200   */\n      swap3\n      pop\n        /* \"#utility.yul\":8093:8210   */\n      pop\n        /* \"#utility.yul\":8249:8251   */\n      0x20\n        /* \"#utility.yul\":8275:8328   */\n      tag_483\n        /* \"#utility.yul\":8320:8327   */\n      dup6\n        /* \"#utility.yul\":8311:8317   */\n      dup3\n        /* \"#utility.yul\":8300:8309   */\n      dup7\n        /* \"#utility.yul\":8296:8318   */\n      add\n        /* \"#utility.yul\":8275:8328   */\n      tag_347\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8265:8328   */\n      swap2\n      pop\n        /* \"#utility.yul\":8220:8338   */\n      pop\n        /* \"#utility.yul\":7871:8345   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8351:8531   */\n    tag_366:\n        /* \"#utility.yul\":8399:8476   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8396:8397   */\n      0x00\n        /* \"#utility.yul\":8389:8477   */\n      mstore\n        /* \"#utility.yul\":8496:8500   */\n      0x22\n        /* \"#utility.yul\":8493:8494   */\n      0x04\n        /* \"#utility.yul\":8486:8501   */\n      mstore\n        /* \"#utility.yul\":8520:8524   */\n      0x24\n        /* \"#utility.yul\":8517:8518   */\n      0x00\n        /* \"#utility.yul\":8510:8525   */\n      revert\n        /* \"#utility.yul\":8537:8857   */\n    tag_124:\n        /* \"#utility.yul\":8581:8587   */\n      0x00\n        /* \"#utility.yul\":8618:8619   */\n      0x02\n        /* \"#utility.yul\":8612:8616   */\n      dup3\n        /* \"#utility.yul\":8608:8620   */\n      div\n        /* \"#utility.yul\":8598:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8665:8666   */\n      0x01\n        /* \"#utility.yul\":8659:8663   */\n      dup3\n        /* \"#utility.yul\":8655:8667   */\n      and\n        /* \"#utility.yul\":8686:8704   */\n      dup1\n        /* \"#utility.yul\":8676:8757   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":8742:8746   */\n      0x7f\n        /* \"#utility.yul\":8734:8740   */\n      dup3\n        /* \"#utility.yul\":8730:8747   */\n      and\n        /* \"#utility.yul\":8720:8747   */\n      swap2\n      pop\n        /* \"#utility.yul\":8676:8757   */\n    tag_486:\n        /* \"#utility.yul\":8804:8806   */\n      0x20\n        /* \"#utility.yul\":8796:8802   */\n      dup3\n        /* \"#utility.yul\":8793:8807   */\n      lt\n        /* \"#utility.yul\":8773:8791   */\n      dup2\n        /* \"#utility.yul\":8770:8808   */\n      sub\n        /* \"#utility.yul\":8767:8851   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":8823:8841   */\n      tag_488\n      tag_366\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8767:8851   */\n    tag_487:\n        /* \"#utility.yul\":8588:8857   */\n      pop\n        /* \"#utility.yul\":8537:8857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8863:9030   */\n    tag_367:\n        /* \"#utility.yul\":9003:9022   */\n      0x4d696e742066656520746f6f2068696768000000000000000000000000000000\n        /* \"#utility.yul\":8999:9000   */\n      0x00\n        /* \"#utility.yul\":8991:8997   */\n      dup3\n        /* \"#utility.yul\":8987:9001   */\n      add\n        /* \"#utility.yul\":8980:9023   */\n      mstore\n        /* \"#utility.yul\":8863:9030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9036:9402   */\n    tag_368:\n        /* \"#utility.yul\":9178:9181   */\n      0x00\n        /* \"#utility.yul\":9199:9266   */\n      tag_491\n        /* \"#utility.yul\":9263:9265   */\n      0x11\n        /* \"#utility.yul\":9258:9261   */\n      dup4\n        /* \"#utility.yul\":9199:9266   */\n      tag_337\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9192:9266   */\n      swap2\n      pop\n        /* \"#utility.yul\":9275:9368   */\n      tag_492\n        /* \"#utility.yul\":9364:9367   */\n      dup3\n        /* \"#utility.yul\":9275:9368   */\n      tag_367\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9393:9395   */\n      0x20\n        /* \"#utility.yul\":9388:9391   */\n      dup3\n        /* \"#utility.yul\":9384:9396   */\n      add\n        /* \"#utility.yul\":9377:9396   */\n      swap1\n      pop\n        /* \"#utility.yul\":9036:9402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9408:9827   */\n    tag_172:\n        /* \"#utility.yul\":9574:9578   */\n      0x00\n        /* \"#utility.yul\":9612:9614   */\n      0x20\n        /* \"#utility.yul\":9601:9610   */\n      dup3\n        /* \"#utility.yul\":9597:9615   */\n      add\n        /* \"#utility.yul\":9589:9615   */\n      swap1\n      pop\n        /* \"#utility.yul\":9661:9670   */\n      dup2\n        /* \"#utility.yul\":9655:9659   */\n      dup2\n        /* \"#utility.yul\":9651:9671   */\n      sub\n        /* \"#utility.yul\":9647:9648   */\n      0x00\n        /* \"#utility.yul\":9636:9645   */\n      dup4\n        /* \"#utility.yul\":9632:9649   */\n      add\n        /* \"#utility.yul\":9625:9672   */\n      mstore\n        /* \"#utility.yul\":9689:9820   */\n      tag_494\n        /* \"#utility.yul\":9815:9819   */\n      dup2\n        /* \"#utility.yul\":9689:9820   */\n      tag_368\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9681:9820   */\n      swap1\n      pop\n        /* \"#utility.yul\":9408:9827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9833:10002   */\n    tag_369:\n        /* \"#utility.yul\":9973:9994   */\n      0x52656465656d2066656520746f6f206869676800000000000000000000000000\n        /* \"#utility.yul\":9969:9970   */\n      0x00\n        /* \"#utility.yul\":9961:9967   */\n      dup3\n        /* \"#utility.yul\":9957:9971   */\n      add\n        /* \"#utility.yul\":9950:9995   */\n      mstore\n        /* \"#utility.yul\":9833:10002   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10008:10374   */\n    tag_370:\n        /* \"#utility.yul\":10150:10153   */\n      0x00\n        /* \"#utility.yul\":10171:10238   */\n      tag_497\n        /* \"#utility.yul\":10235:10237   */\n      0x13\n        /* \"#utility.yul\":10230:10233   */\n      dup4\n        /* \"#utility.yul\":10171:10238   */\n      tag_337\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10164:10238   */\n      swap2\n      pop\n        /* \"#utility.yul\":10247:10340   */\n      tag_498\n        /* \"#utility.yul\":10336:10339   */\n      dup3\n        /* \"#utility.yul\":10247:10340   */\n      tag_369\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10365:10367   */\n      0x20\n        /* \"#utility.yul\":10360:10363   */\n      dup3\n        /* \"#utility.yul\":10356:10368   */\n      add\n        /* \"#utility.yul\":10349:10368   */\n      swap1\n      pop\n        /* \"#utility.yul\":10008:10374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10380:10799   */\n    tag_175:\n        /* \"#utility.yul\":10546:10550   */\n      0x00\n        /* \"#utility.yul\":10584:10586   */\n      0x20\n        /* \"#utility.yul\":10573:10582   */\n      dup3\n        /* \"#utility.yul\":10569:10587   */\n      add\n        /* \"#utility.yul\":10561:10587   */\n      swap1\n      pop\n        /* \"#utility.yul\":10633:10642   */\n      dup2\n        /* \"#utility.yul\":10627:10631   */\n      dup2\n        /* \"#utility.yul\":10623:10643   */\n      sub\n        /* \"#utility.yul\":10619:10620   */\n      0x00\n        /* \"#utility.yul\":10608:10617   */\n      dup4\n        /* \"#utility.yul\":10604:10621   */\n      add\n        /* \"#utility.yul\":10597:10644   */\n      mstore\n        /* \"#utility.yul\":10661:10792   */\n      tag_500\n        /* \"#utility.yul\":10787:10791   */\n      dup2\n        /* \"#utility.yul\":10661:10792   */\n      tag_370\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10653:10792   */\n      swap1\n      pop\n        /* \"#utility.yul\":10380:10799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10805:11129   */\n    tag_177:\n        /* \"#utility.yul\":10922:10926   */\n      0x00\n        /* \"#utility.yul\":10960:10962   */\n      0x40\n        /* \"#utility.yul\":10949:10958   */\n      dup3\n        /* \"#utility.yul\":10945:10963   */\n      add\n        /* \"#utility.yul\":10937:10963   */\n      swap1\n      pop\n        /* \"#utility.yul\":10973:11042   */\n      tag_502\n        /* \"#utility.yul\":11039:11040   */\n      0x00\n        /* \"#utility.yul\":11028:11037   */\n      dup4\n        /* \"#utility.yul\":11024:11041   */\n      add\n        /* \"#utility.yul\":11015:11021   */\n      dup6\n        /* \"#utility.yul\":10973:11042   */\n      tag_354\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11052:11122   */\n      tag_503\n        /* \"#utility.yul\":11118:11120   */\n      0x20\n        /* \"#utility.yul\":11107:11116   */\n      dup4\n        /* \"#utility.yul\":11103:11121   */\n      add\n        /* \"#utility.yul\":11094:11100   */\n      dup5\n        /* \"#utility.yul\":11052:11122   */\n      tag_354\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10805:11129   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11135:11303   */\n    tag_371:\n        /* \"#utility.yul\":11275:11295   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":11271:11272   */\n      0x00\n        /* \"#utility.yul\":11263:11269   */\n      dup3\n        /* \"#utility.yul\":11259:11273   */\n      add\n        /* \"#utility.yul\":11252:11296   */\n      mstore\n        /* \"#utility.yul\":11135:11303   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11309:11675   */\n    tag_372:\n        /* \"#utility.yul\":11451:11454   */\n      0x00\n        /* \"#utility.yul\":11472:11539   */\n      tag_506\n        /* \"#utility.yul\":11536:11538   */\n      0x12\n        /* \"#utility.yul\":11531:11534   */\n      dup4\n        /* \"#utility.yul\":11472:11539   */\n      tag_337\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11465:11539   */\n      swap2\n      pop\n        /* \"#utility.yul\":11548:11641   */\n      tag_507\n        /* \"#utility.yul\":11637:11640   */\n      dup3\n        /* \"#utility.yul\":11548:11641   */\n      tag_371\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":11666:11668   */\n      0x20\n        /* \"#utility.yul\":11661:11664   */\n      dup3\n        /* \"#utility.yul\":11657:11669   */\n      add\n        /* \"#utility.yul\":11650:11669   */\n      swap1\n      pop\n        /* \"#utility.yul\":11309:11675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11681:12100   */\n    tag_187:\n        /* \"#utility.yul\":11847:11851   */\n      0x00\n        /* \"#utility.yul\":11885:11887   */\n      0x20\n        /* \"#utility.yul\":11874:11883   */\n      dup3\n        /* \"#utility.yul\":11870:11888   */\n      add\n        /* \"#utility.yul\":11862:11888   */\n      swap1\n      pop\n        /* \"#utility.yul\":11934:11943   */\n      dup2\n        /* \"#utility.yul\":11928:11932   */\n      dup2\n        /* \"#utility.yul\":11924:11944   */\n      sub\n        /* \"#utility.yul\":11920:11921   */\n      0x00\n        /* \"#utility.yul\":11909:11918   */\n      dup4\n        /* \"#utility.yul\":11905:11922   */\n      add\n        /* \"#utility.yul\":11898:11945   */\n      mstore\n        /* \"#utility.yul\":11962:12093   */\n      tag_509\n        /* \"#utility.yul\":12088:12092   */\n      dup2\n        /* \"#utility.yul\":11962:12093   */\n      tag_372\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11954:12093   */\n      swap1\n      pop\n        /* \"#utility.yul\":11681:12100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12106:12286   */\n    tag_373:\n        /* \"#utility.yul\":12154:12231   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12151:12152   */\n      0x00\n        /* \"#utility.yul\":12144:12232   */\n      mstore\n        /* \"#utility.yul\":12251:12255   */\n      0x11\n        /* \"#utility.yul\":12248:12249   */\n      0x04\n        /* \"#utility.yul\":12241:12256   */\n      mstore\n        /* \"#utility.yul\":12275:12279   */\n      0x24\n        /* \"#utility.yul\":12272:12273   */\n      0x00\n        /* \"#utility.yul\":12265:12280   */\n      revert\n        /* \"#utility.yul\":12292:12483   */\n    tag_190:\n        /* \"#utility.yul\":12332:12335   */\n      0x00\n        /* \"#utility.yul\":12351:12371   */\n      tag_512\n        /* \"#utility.yul\":12369:12370   */\n      dup3\n        /* \"#utility.yul\":12351:12371   */\n      tag_348\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12346:12371   */\n      swap2\n      pop\n        /* \"#utility.yul\":12385:12405   */\n      tag_513\n        /* \"#utility.yul\":12403:12404   */\n      dup4\n        /* \"#utility.yul\":12385:12405   */\n      tag_348\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12380:12405   */\n      swap3\n      pop\n        /* \"#utility.yul\":12428:12429   */\n      dup3\n        /* \"#utility.yul\":12425:12426   */\n      dup3\n        /* \"#utility.yul\":12421:12430   */\n      add\n        /* \"#utility.yul\":12414:12430   */\n      swap1\n      pop\n        /* \"#utility.yul\":12449:12452   */\n      dup1\n        /* \"#utility.yul\":12446:12447   */\n      dup3\n        /* \"#utility.yul\":12443:12453   */\n      gt\n        /* \"#utility.yul\":12440:12476   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":12456:12474   */\n      tag_515\n      tag_373\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12440:12476   */\n    tag_514:\n        /* \"#utility.yul\":12292:12483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12489:12657   */\n    tag_374:\n        /* \"#utility.yul\":12629:12649   */\n      0x45786365656473206d617820737570706c790000000000000000000000000000\n        /* \"#utility.yul\":12625:12626   */\n      0x00\n        /* \"#utility.yul\":12617:12623   */\n      dup3\n        /* \"#utility.yul\":12613:12627   */\n      add\n        /* \"#utility.yul\":12606:12650   */\n      mstore\n        /* \"#utility.yul\":12489:12657   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12663:13029   */\n    tag_375:\n        /* \"#utility.yul\":12805:12808   */\n      0x00\n        /* \"#utility.yul\":12826:12893   */\n      tag_518\n        /* \"#utility.yul\":12890:12892   */\n      0x12\n        /* \"#utility.yul\":12885:12888   */\n      dup4\n        /* \"#utility.yul\":12826:12893   */\n      tag_337\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":12819:12893   */\n      swap2\n      pop\n        /* \"#utility.yul\":12902:12995   */\n      tag_519\n        /* \"#utility.yul\":12991:12994   */\n      dup3\n        /* \"#utility.yul\":12902:12995   */\n      tag_374\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13020:13022   */\n      0x20\n        /* \"#utility.yul\":13015:13018   */\n      dup3\n        /* \"#utility.yul\":13011:13023   */\n      add\n        /* \"#utility.yul\":13004:13023   */\n      swap1\n      pop\n        /* \"#utility.yul\":12663:13029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13035:13454   */\n    tag_193:\n        /* \"#utility.yul\":13201:13205   */\n      0x00\n        /* \"#utility.yul\":13239:13241   */\n      0x20\n        /* \"#utility.yul\":13228:13237   */\n      dup3\n        /* \"#utility.yul\":13224:13242   */\n      add\n        /* \"#utility.yul\":13216:13242   */\n      swap1\n      pop\n        /* \"#utility.yul\":13288:13297   */\n      dup2\n        /* \"#utility.yul\":13282:13286   */\n      dup2\n        /* \"#utility.yul\":13278:13298   */\n      sub\n        /* \"#utility.yul\":13274:13275   */\n      0x00\n        /* \"#utility.yul\":13263:13272   */\n      dup4\n        /* \"#utility.yul\":13259:13276   */\n      add\n        /* \"#utility.yul\":13252:13299   */\n      mstore\n        /* \"#utility.yul\":13316:13447   */\n      tag_521\n        /* \"#utility.yul\":13442:13446   */\n      dup2\n        /* \"#utility.yul\":13316:13447   */\n      tag_375\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13308:13447   */\n      swap1\n      pop\n        /* \"#utility.yul\":13035:13454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13460:13870   */\n    tag_197:\n        /* \"#utility.yul\":13500:13507   */\n      0x00\n        /* \"#utility.yul\":13523:13543   */\n      tag_523\n        /* \"#utility.yul\":13541:13542   */\n      dup3\n        /* \"#utility.yul\":13523:13543   */\n      tag_348\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":13518:13543   */\n      swap2\n      pop\n        /* \"#utility.yul\":13557:13577   */\n      tag_524\n        /* \"#utility.yul\":13575:13576   */\n      dup4\n        /* \"#utility.yul\":13557:13577   */\n      tag_348\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13552:13577   */\n      swap3\n      pop\n        /* \"#utility.yul\":13612:13613   */\n      dup3\n        /* \"#utility.yul\":13609:13610   */\n      dup3\n        /* \"#utility.yul\":13605:13614   */\n      mul\n        /* \"#utility.yul\":13634:13664   */\n      tag_525\n        /* \"#utility.yul\":13652:13663   */\n      dup2\n        /* \"#utility.yul\":13634:13664   */\n      tag_348\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13623:13664   */\n      swap2\n      pop\n        /* \"#utility.yul\":13813:13814   */\n      dup3\n        /* \"#utility.yul\":13804:13811   */\n      dup3\n        /* \"#utility.yul\":13800:13815   */\n      div\n        /* \"#utility.yul\":13797:13798   */\n      dup5\n        /* \"#utility.yul\":13794:13816   */\n      eq\n        /* \"#utility.yul\":13774:13775   */\n      dup4\n        /* \"#utility.yul\":13767:13776   */\n      iszero\n        /* \"#utility.yul\":13747:13830   */\n      or\n        /* \"#utility.yul\":13724:13863   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":13843:13861   */\n      tag_527\n      tag_373\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":13724:13863   */\n    tag_526:\n        /* \"#utility.yul\":13508:13870   */\n      pop\n        /* \"#utility.yul\":13460:13870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13876:14056   */\n    tag_376:\n        /* \"#utility.yul\":13924:14001   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13921:13922   */\n      0x00\n        /* \"#utility.yul\":13914:14002   */\n      mstore\n        /* \"#utility.yul\":14021:14025   */\n      0x12\n        /* \"#utility.yul\":14018:14019   */\n      0x04\n        /* \"#utility.yul\":14011:14026   */\n      mstore\n        /* \"#utility.yul\":14045:14049   */\n      0x24\n        /* \"#utility.yul\":14042:14043   */\n      0x00\n        /* \"#utility.yul\":14035:14050   */\n      revert\n        /* \"#utility.yul\":14062:14247   */\n    tag_199:\n        /* \"#utility.yul\":14102:14103   */\n      0x00\n        /* \"#utility.yul\":14119:14139   */\n      tag_530\n        /* \"#utility.yul\":14137:14138   */\n      dup3\n        /* \"#utility.yul\":14119:14139   */\n      tag_348\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":14114:14139   */\n      swap2\n      pop\n        /* \"#utility.yul\":14153:14173   */\n      tag_531\n        /* \"#utility.yul\":14171:14172   */\n      dup4\n        /* \"#utility.yul\":14153:14173   */\n      tag_348\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14148:14173   */\n      swap3\n      pop\n        /* \"#utility.yul\":14192:14193   */\n      dup3\n        /* \"#utility.yul\":14182:14217   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":14197:14215   */\n      tag_533\n      tag_376\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14182:14217   */\n    tag_532:\n        /* \"#utility.yul\":14239:14240   */\n      dup3\n        /* \"#utility.yul\":14236:14237   */\n      dup3\n        /* \"#utility.yul\":14232:14241   */\n      div\n        /* \"#utility.yul\":14227:14241   */\n      swap1\n      pop\n        /* \"#utility.yul\":14062:14247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14253:14447   */\n    tag_201:\n        /* \"#utility.yul\":14293:14297   */\n      0x00\n        /* \"#utility.yul\":14313:14333   */\n      tag_535\n        /* \"#utility.yul\":14331:14332   */\n      dup3\n        /* \"#utility.yul\":14313:14333   */\n      tag_348\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14308:14333   */\n      swap2\n      pop\n        /* \"#utility.yul\":14347:14367   */\n      tag_536\n        /* \"#utility.yul\":14365:14366   */\n      dup4\n        /* \"#utility.yul\":14347:14367   */\n      tag_348\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14342:14367   */\n      swap3\n      pop\n        /* \"#utility.yul\":14391:14392   */\n      dup3\n        /* \"#utility.yul\":14388:14389   */\n      dup3\n        /* \"#utility.yul\":14384:14393   */\n      sub\n        /* \"#utility.yul\":14376:14393   */\n      swap1\n      pop\n        /* \"#utility.yul\":14415:14416   */\n      dup2\n        /* \"#utility.yul\":14409:14413   */\n      dup2\n        /* \"#utility.yul\":14406:14417   */\n      gt\n        /* \"#utility.yul\":14403:14440   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":14420:14438   */\n      tag_538\n      tag_373\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14403:14440   */\n    tag_537:\n        /* \"#utility.yul\":14253:14447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14453:14785   */\n    tag_207:\n        /* \"#utility.yul\":14574:14578   */\n      0x00\n        /* \"#utility.yul\":14612:14614   */\n      0x40\n        /* \"#utility.yul\":14601:14610   */\n      dup3\n        /* \"#utility.yul\":14597:14615   */\n      add\n        /* \"#utility.yul\":14589:14615   */\n      swap1\n      pop\n        /* \"#utility.yul\":14625:14696   */\n      tag_540\n        /* \"#utility.yul\":14693:14694   */\n      0x00\n        /* \"#utility.yul\":14682:14691   */\n      dup4\n        /* \"#utility.yul\":14678:14695   */\n      add\n        /* \"#utility.yul\":14669:14675   */\n      dup6\n        /* \"#utility.yul\":14625:14696   */\n      tag_360\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14706:14778   */\n      tag_541\n        /* \"#utility.yul\":14774:14776   */\n      0x20\n        /* \"#utility.yul\":14763:14772   */\n      dup4\n        /* \"#utility.yul\":14759:14777   */\n      add\n        /* \"#utility.yul\":14750:14756   */\n      dup5\n        /* \"#utility.yul\":14706:14778   */\n      tag_360\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14453:14785   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14791:15233   */\n    tag_230:\n        /* \"#utility.yul\":14940:14944   */\n      0x00\n        /* \"#utility.yul\":14978:14980   */\n      0x60\n        /* \"#utility.yul\":14967:14976   */\n      dup3\n        /* \"#utility.yul\":14963:14981   */\n      add\n        /* \"#utility.yul\":14955:14981   */\n      swap1\n      pop\n        /* \"#utility.yul\":14991:15062   */\n      tag_543\n        /* \"#utility.yul\":15059:15060   */\n      0x00\n        /* \"#utility.yul\":15048:15057   */\n      dup4\n        /* \"#utility.yul\":15044:15061   */\n      add\n        /* \"#utility.yul\":15035:15041   */\n      dup7\n        /* \"#utility.yul\":14991:15062   */\n      tag_360\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":15072:15144   */\n      tag_544\n        /* \"#utility.yul\":15140:15142   */\n      0x20\n        /* \"#utility.yul\":15129:15138   */\n      dup4\n        /* \"#utility.yul\":15125:15143   */\n      add\n        /* \"#utility.yul\":15116:15122   */\n      dup6\n        /* \"#utility.yul\":15072:15144   */\n      tag_360\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15154:15226   */\n      tag_545\n        /* \"#utility.yul\":15222:15224   */\n      0x40\n        /* \"#utility.yul\":15211:15220   */\n      dup4\n        /* \"#utility.yul\":15207:15225   */\n      add\n        /* \"#utility.yul\":15198:15204   */\n      dup5\n        /* \"#utility.yul\":15154:15226   */\n      tag_360\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14791:15233   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15239:15405   */\n    tag_377:\n        /* \"#utility.yul\":15379:15397   */\n      0x496e76616c696420747265617375727900000000000000000000000000000000\n        /* \"#utility.yul\":15375:15376   */\n      0x00\n        /* \"#utility.yul\":15367:15373   */\n      dup3\n        /* \"#utility.yul\":15363:15377   */\n      add\n        /* \"#utility.yul\":15356:15398   */\n      mstore\n        /* \"#utility.yul\":15239:15405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15411:15777   */\n    tag_378:\n        /* \"#utility.yul\":15553:15556   */\n      0x00\n        /* \"#utility.yul\":15574:15641   */\n      tag_548\n        /* \"#utility.yul\":15638:15640   */\n      0x10\n        /* \"#utility.yul\":15633:15636   */\n      dup4\n        /* \"#utility.yul\":15574:15641   */\n      tag_337\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15567:15641   */\n      swap2\n      pop\n        /* \"#utility.yul\":15650:15743   */\n      tag_549\n        /* \"#utility.yul\":15739:15742   */\n      dup3\n        /* \"#utility.yul\":15650:15743   */\n      tag_377\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15768:15770   */\n      0x20\n        /* \"#utility.yul\":15763:15766   */\n      dup3\n        /* \"#utility.yul\":15759:15771   */\n      add\n        /* \"#utility.yul\":15752:15771   */\n      swap1\n      pop\n        /* \"#utility.yul\":15411:15777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15783:16202   */\n    tag_238:\n        /* \"#utility.yul\":15949:15953   */\n      0x00\n        /* \"#utility.yul\":15987:15989   */\n      0x20\n        /* \"#utility.yul\":15976:15985   */\n      dup3\n        /* \"#utility.yul\":15972:15990   */\n      add\n        /* \"#utility.yul\":15964:15990   */\n      swap1\n      pop\n        /* \"#utility.yul\":16036:16045   */\n      dup2\n        /* \"#utility.yul\":16030:16034   */\n      dup2\n        /* \"#utility.yul\":16026:16046   */\n      sub\n        /* \"#utility.yul\":16022:16023   */\n      0x00\n        /* \"#utility.yul\":16011:16020   */\n      dup4\n        /* \"#utility.yul\":16007:16024   */\n      add\n        /* \"#utility.yul\":16000:16047   */\n      mstore\n        /* \"#utility.yul\":16064:16195   */\n      tag_551\n        /* \"#utility.yul\":16190:16194   */\n      dup2\n        /* \"#utility.yul\":16064:16195   */\n      tag_378\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":16056:16195   */\n      swap1\n      pop\n        /* \"#utility.yul\":15783:16202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16208:16650   */\n    tag_255:\n        /* \"#utility.yul\":16357:16361   */\n      0x00\n        /* \"#utility.yul\":16395:16397   */\n      0x60\n        /* \"#utility.yul\":16384:16393   */\n      dup3\n        /* \"#utility.yul\":16380:16398   */\n      add\n        /* \"#utility.yul\":16372:16398   */\n      swap1\n      pop\n        /* \"#utility.yul\":16408:16479   */\n      tag_553\n        /* \"#utility.yul\":16476:16477   */\n      0x00\n        /* \"#utility.yul\":16465:16474   */\n      dup4\n        /* \"#utility.yul\":16461:16478   */\n      add\n        /* \"#utility.yul\":16452:16458   */\n      dup7\n        /* \"#utility.yul\":16408:16479   */\n      tag_363\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":16489:16561   */\n      tag_554\n        /* \"#utility.yul\":16557:16559   */\n      0x20\n        /* \"#utility.yul\":16546:16555   */\n      dup4\n        /* \"#utility.yul\":16542:16560   */\n      add\n        /* \"#utility.yul\":16533:16539   */\n      dup6\n        /* \"#utility.yul\":16489:16561   */\n      tag_360\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":16571:16643   */\n      tag_555\n        /* \"#utility.yul\":16639:16641   */\n      0x40\n        /* \"#utility.yul\":16628:16637   */\n      dup4\n        /* \"#utility.yul\":16624:16642   */\n      add\n        /* \"#utility.yul\":16615:16621   */\n      dup5\n        /* \"#utility.yul\":16571:16643   */\n      tag_360\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":16208:16650   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16656:16822   */\n    tag_379:\n        /* \"#utility.yul\":16796:16814   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":16792:16793   */\n      0x00\n        /* \"#utility.yul\":16784:16790   */\n      dup3\n        /* \"#utility.yul\":16780:16794   */\n      add\n        /* \"#utility.yul\":16773:16815   */\n      mstore\n        /* \"#utility.yul\":16656:16822   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16828:17194   */\n    tag_380:\n        /* \"#utility.yul\":16970:16973   */\n      0x00\n        /* \"#utility.yul\":16991:17058   */\n      tag_558\n        /* \"#utility.yul\":17055:17057   */\n      0x10\n        /* \"#utility.yul\":17050:17053   */\n      dup4\n        /* \"#utility.yul\":16991:17058   */\n      tag_337\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":16984:17058   */\n      swap2\n      pop\n        /* \"#utility.yul\":17067:17160   */\n      tag_559\n        /* \"#utility.yul\":17156:17159   */\n      dup3\n        /* \"#utility.yul\":17067:17160   */\n      tag_379\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":17185:17187   */\n      0x20\n        /* \"#utility.yul\":17180:17183   */\n      dup3\n        /* \"#utility.yul\":17176:17188   */\n      add\n        /* \"#utility.yul\":17169:17188   */\n      swap1\n      pop\n        /* \"#utility.yul\":16828:17194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17200:17619   */\n    tag_286:\n        /* \"#utility.yul\":17366:17370   */\n      0x00\n        /* \"#utility.yul\":17404:17406   */\n      0x20\n        /* \"#utility.yul\":17393:17402   */\n      dup3\n        /* \"#utility.yul\":17389:17407   */\n      add\n        /* \"#utility.yul\":17381:17407   */\n      swap1\n      pop\n        /* \"#utility.yul\":17453:17462   */\n      dup2\n        /* \"#utility.yul\":17447:17451   */\n      dup2\n        /* \"#utility.yul\":17443:17463   */\n      sub\n        /* \"#utility.yul\":17439:17440   */\n      0x00\n        /* \"#utility.yul\":17428:17437   */\n      dup4\n        /* \"#utility.yul\":17424:17441   */\n      add\n        /* \"#utility.yul\":17417:17464   */\n      mstore\n        /* \"#utility.yul\":17481:17612   */\n      tag_561\n        /* \"#utility.yul\":17607:17611   */\n      dup2\n        /* \"#utility.yul\":17481:17612   */\n      tag_380\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":17473:17612   */\n      swap1\n      pop\n        /* \"#utility.yul\":17200:17619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17625:17806   */\n    tag_381:\n        /* \"#utility.yul\":17765:17798   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":17761:17762   */\n      0x00\n        /* \"#utility.yul\":17753:17759   */\n      dup3\n        /* \"#utility.yul\":17749:17763   */\n      add\n        /* \"#utility.yul\":17742:17799   */\n      mstore\n        /* \"#utility.yul\":17625:17806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17812:18178   */\n    tag_382:\n        /* \"#utility.yul\":17954:17957   */\n      0x00\n        /* \"#utility.yul\":17975:18042   */\n      tag_564\n        /* \"#utility.yul\":18039:18041   */\n      0x1f\n        /* \"#utility.yul\":18034:18037   */\n      dup4\n        /* \"#utility.yul\":17975:18042   */\n      tag_337\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":17968:18042   */\n      swap2\n      pop\n        /* \"#utility.yul\":18051:18144   */\n      tag_565\n        /* \"#utility.yul\":18140:18143   */\n      dup3\n        /* \"#utility.yul\":18051:18144   */\n      tag_381\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18169:18171   */\n      0x20\n        /* \"#utility.yul\":18164:18167   */\n      dup3\n        /* \"#utility.yul\":18160:18172   */\n      add\n        /* \"#utility.yul\":18153:18172   */\n      swap1\n      pop\n        /* \"#utility.yul\":17812:18178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18184:18603   */\n    tag_290:\n        /* \"#utility.yul\":18350:18354   */\n      0x00\n        /* \"#utility.yul\":18388:18390   */\n      0x20\n        /* \"#utility.yul\":18377:18386   */\n      dup3\n        /* \"#utility.yul\":18373:18391   */\n      add\n        /* \"#utility.yul\":18365:18391   */\n      swap1\n      pop\n        /* \"#utility.yul\":18437:18446   */\n      dup2\n        /* \"#utility.yul\":18431:18435   */\n      dup2\n        /* \"#utility.yul\":18427:18447   */\n      sub\n        /* \"#utility.yul\":18423:18424   */\n      0x00\n        /* \"#utility.yul\":18412:18421   */\n      dup4\n        /* \"#utility.yul\":18408:18425   */\n      add\n        /* \"#utility.yul\":18401:18448   */\n      mstore\n        /* \"#utility.yul\":18465:18596   */\n      tag_567\n        /* \"#utility.yul\":18591:18595   */\n      dup2\n        /* \"#utility.yul\":18465:18596   */\n      tag_382\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":18457:18596   */\n      swap1\n      pop\n        /* \"#utility.yul\":18184:18603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18609:19051   */\n    tag_294:\n        /* \"#utility.yul\":18758:18762   */\n      0x00\n        /* \"#utility.yul\":18796:18798   */\n      0x60\n        /* \"#utility.yul\":18785:18794   */\n      dup3\n        /* \"#utility.yul\":18781:18799   */\n      add\n        /* \"#utility.yul\":18773:18799   */\n      swap1\n      pop\n        /* \"#utility.yul\":18809:18880   */\n      tag_569\n        /* \"#utility.yul\":18877:18878   */\n      0x00\n        /* \"#utility.yul\":18866:18875   */\n      dup4\n        /* \"#utility.yul\":18862:18879   */\n      add\n        /* \"#utility.yul\":18853:18859   */\n      dup7\n        /* \"#utility.yul\":18809:18880   */\n      tag_363\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":18890:18962   */\n      tag_570\n        /* \"#utility.yul\":18958:18960   */\n      0x20\n        /* \"#utility.yul\":18947:18956   */\n      dup4\n        /* \"#utility.yul\":18943:18961   */\n      add\n        /* \"#utility.yul\":18934:18940   */\n      dup6\n        /* \"#utility.yul\":18890:18962   */\n      tag_363\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":18972:19044   */\n      tag_571\n        /* \"#utility.yul\":19040:19042   */\n      0x40\n        /* \"#utility.yul\":19029:19038   */\n      dup4\n        /* \"#utility.yul\":19025:19043   */\n      add\n        /* \"#utility.yul\":19016:19022   */\n      dup5\n        /* \"#utility.yul\":18972:19044   */\n      tag_360\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":18609:19051   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19057:19389   */\n    tag_308:\n        /* \"#utility.yul\":19178:19182   */\n      0x00\n        /* \"#utility.yul\":19216:19218   */\n      0x40\n        /* \"#utility.yul\":19205:19214   */\n      dup3\n        /* \"#utility.yul\":19201:19219   */\n      add\n        /* \"#utility.yul\":19193:19219   */\n      swap1\n      pop\n        /* \"#utility.yul\":19229:19300   */\n      tag_573\n        /* \"#utility.yul\":19297:19298   */\n      0x00\n        /* \"#utility.yul\":19286:19295   */\n      dup4\n        /* \"#utility.yul\":19282:19299   */\n      add\n        /* \"#utility.yul\":19273:19279   */\n      dup6\n        /* \"#utility.yul\":19229:19300   */\n      tag_363\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19310:19382   */\n      tag_574\n        /* \"#utility.yul\":19378:19380   */\n      0x20\n        /* \"#utility.yul\":19367:19376   */\n      dup4\n        /* \"#utility.yul\":19363:19381   */\n      add\n        /* \"#utility.yul\":19354:19360   */\n      dup5\n        /* \"#utility.yul\":19310:19382   */\n      tag_360\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":19057:19389   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19395:19565   */\n    tag_383:\n        /* \"#utility.yul\":19535:19557   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":19531:19532   */\n      0x00\n        /* \"#utility.yul\":19523:19529   */\n      dup3\n        /* \"#utility.yul\":19519:19533   */\n      add\n        /* \"#utility.yul\":19512:19558   */\n      mstore\n        /* \"#utility.yul\":19395:19565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19571:19937   */\n    tag_384:\n        /* \"#utility.yul\":19713:19716   */\n      0x00\n        /* \"#utility.yul\":19734:19801   */\n      tag_577\n        /* \"#utility.yul\":19798:19800   */\n      0x14\n        /* \"#utility.yul\":19793:19796   */\n      dup4\n        /* \"#utility.yul\":19734:19801   */\n      tag_337\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":19727:19801   */\n      swap2\n      pop\n        /* \"#utility.yul\":19810:19903   */\n      tag_578\n        /* \"#utility.yul\":19899:19902   */\n      dup3\n        /* \"#utility.yul\":19810:19903   */\n      tag_383\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":19928:19930   */\n      0x20\n        /* \"#utility.yul\":19923:19926   */\n      dup3\n        /* \"#utility.yul\":19919:19931   */\n      add\n        /* \"#utility.yul\":19912:19931   */\n      swap1\n      pop\n        /* \"#utility.yul\":19571:19937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19943:20362   */\n    tag_329:\n        /* \"#utility.yul\":20109:20113   */\n      0x00\n        /* \"#utility.yul\":20147:20149   */\n      0x20\n        /* \"#utility.yul\":20136:20145   */\n      dup3\n        /* \"#utility.yul\":20132:20150   */\n      add\n        /* \"#utility.yul\":20124:20150   */\n      swap1\n      pop\n        /* \"#utility.yul\":20196:20205   */\n      dup2\n        /* \"#utility.yul\":20190:20194   */\n      dup2\n        /* \"#utility.yul\":20186:20206   */\n      sub\n        /* \"#utility.yul\":20182:20183   */\n      0x00\n        /* \"#utility.yul\":20171:20180   */\n      dup4\n        /* \"#utility.yul\":20167:20184   */\n      add\n        /* \"#utility.yul\":20160:20207   */\n      mstore\n        /* \"#utility.yul\":20224:20355   */\n      tag_580\n        /* \"#utility.yul\":20350:20354   */\n      dup2\n        /* \"#utility.yul\":20224:20355   */\n      tag_384\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20216:20355   */\n      swap1\n      pop\n        /* \"#utility.yul\":19943:20362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122078a243665dadd9c7bff54dc5b192d101192b6720b707f1b847b4dd41c79c7d8a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1767": {
									"entryPoint": null,
									"id": 1767,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_501": {
									"entryPoint": null,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_599": {
									"entryPoint": null,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 911,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint16t_uint16_fromMemory": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633": {
									"entryPoint": 2188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11670:14",
										"nodeType": "YulBlock",
										"src": "0:11670:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "759:80:14",
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nativeSrc": "769:22:14",
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nativeSrc": "778:13:14",
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nativeSrc": "800:33:14",
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nativeSrc": "800:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:14",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:14",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:14",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nativeSrc": "889:45:14",
													"nodeType": "YulBlock",
													"src": "889:45:14",
													"statements": [
														{
															"nativeSrc": "899:29:14",
															"nodeType": "YulAssignment",
															"src": "899:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "914:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "921:6:14",
																		"nodeType": "YulLiteral",
																		"src": "921:6:14",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "910:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:14"
																},
																"nativeSrc": "910:18:14",
																"nodeType": "YulFunctionCall",
																"src": "910:18:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "899:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "845:89:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "871:5:14",
														"nodeType": "YulTypedName",
														"src": "871:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "881:7:14",
														"nodeType": "YulTypedName",
														"src": "881:7:14",
														"type": ""
													}
												],
												"src": "845:89:14"
											},
											{
												"body": {
													"nativeSrc": "982:78:14",
													"nodeType": "YulBlock",
													"src": "982:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1038:16:14",
																"nodeType": "YulBlock",
																"src": "1038:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1047:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1050:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1040:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:14"
																			},
																			"nativeSrc": "1040:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:14"
																		},
																		"nativeSrc": "1040:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1005:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1005:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1029:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1029:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "1012:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "1012:16:14"
																				},
																				"nativeSrc": "1012:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1012:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1002:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1002:2:14"
																		},
																		"nativeSrc": "1002:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "995:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:14"
																},
																"nativeSrc": "995:42:14",
																"nodeType": "YulFunctionCall",
																"src": "995:42:14"
															},
															"nativeSrc": "992:62:14",
															"nodeType": "YulIf",
															"src": "992:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "940:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "975:5:14",
														"nodeType": "YulTypedName",
														"src": "975:5:14",
														"type": ""
													}
												],
												"src": "940:120:14"
											},
											{
												"body": {
													"nativeSrc": "1128:79:14",
													"nodeType": "YulBlock",
													"src": "1128:79:14",
													"statements": [
														{
															"nativeSrc": "1138:22:14",
															"nodeType": "YulAssignment",
															"src": "1138:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1153:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1153:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1147:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1147:5:14"
																},
																"nativeSrc": "1147:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1147:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1138:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1195:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "1169:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "1169:25:14"
																},
																"nativeSrc": "1169:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1169:32:14"
															},
															"nativeSrc": "1169:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "1169:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "1066:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1106:6:14",
														"nodeType": "YulTypedName",
														"src": "1106:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1114:3:14",
														"nodeType": "YulTypedName",
														"src": "1114:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1122:5:14",
														"nodeType": "YulTypedName",
														"src": "1122:5:14",
														"type": ""
													}
												],
												"src": "1066:141:14"
											},
											{
												"body": {
													"nativeSrc": "1339:690:14",
													"nodeType": "YulBlock",
													"src": "1339:690:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1386:83:14",
																"nodeType": "YulBlock",
																"src": "1386:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1388:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1388:77:14"
																			},
																			"nativeSrc": "1388:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1388:79:14"
																		},
																		"nativeSrc": "1388:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1388:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1360:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1360:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1369:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1369:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1356:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1356:3:14"
																		},
																		"nativeSrc": "1356:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1356:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1381:3:14",
																		"nodeType": "YulLiteral",
																		"src": "1381:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1352:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1352:3:14"
																},
																"nativeSrc": "1352:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1352:33:14"
															},
															"nativeSrc": "1349:120:14",
															"nodeType": "YulIf",
															"src": "1349:120:14"
														},
														{
															"nativeSrc": "1479:128:14",
															"nodeType": "YulBlock",
															"src": "1479:128:14",
															"statements": [
																{
																	"nativeSrc": "1494:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1494:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1508:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1498:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1498:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1523:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1523:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1569:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1569:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1580:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1580:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1565:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1565:3:14"
																				},
																				"nativeSrc": "1565:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1565:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1589:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1589:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1533:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1533:31:14"
																		},
																		"nativeSrc": "1533:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1533:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1523:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1617:129:14",
															"nodeType": "YulBlock",
															"src": "1617:129:14",
															"statements": [
																{
																	"nativeSrc": "1632:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1632:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1646:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1646:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1636:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1636:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1662:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1662:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1708:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1708:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1719:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1719:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1704:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:14"
																				},
																				"nativeSrc": "1704:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1704:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1728:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1728:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1672:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1672:31:14"
																		},
																		"nativeSrc": "1672:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1672:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1662:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1662:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1756:128:14",
															"nodeType": "YulBlock",
															"src": "1756:128:14",
															"statements": [
																{
																	"nativeSrc": "1771:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1771:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1785:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1775:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1775:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1801:73:14",
																	"nodeType": "YulAssignment",
																	"src": "1801:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1846:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1846:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1857:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1857:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1842:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1842:3:14"
																				},
																				"nativeSrc": "1842:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1842:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1866:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1866:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "1811:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "1811:30:14"
																		},
																		"nativeSrc": "1811:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1811:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1801:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1801:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1894:128:14",
															"nodeType": "YulBlock",
															"src": "1894:128:14",
															"statements": [
																{
																	"nativeSrc": "1909:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1909:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1923:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1923:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1913:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1913:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1939:73:14",
																	"nodeType": "YulAssignment",
																	"src": "1939:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1984:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1984:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1995:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1995:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1980:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1980:3:14"
																				},
																				"nativeSrc": "1980:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1980:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2004:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2004:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "1949:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "1949:30:14"
																		},
																		"nativeSrc": "1949:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1939:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1939:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint16t_uint16_fromMemory",
												"nativeSrc": "1213:816:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1285:9:14",
														"nodeType": "YulTypedName",
														"src": "1285:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1296:7:14",
														"nodeType": "YulTypedName",
														"src": "1296:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1308:6:14",
														"nodeType": "YulTypedName",
														"src": "1308:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1316:6:14",
														"nodeType": "YulTypedName",
														"src": "1316:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1324:6:14",
														"nodeType": "YulTypedName",
														"src": "1324:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1332:6:14",
														"nodeType": "YulTypedName",
														"src": "1332:6:14",
														"type": ""
													}
												],
												"src": "1213:816:14"
											},
											{
												"body": {
													"nativeSrc": "2094:40:14",
													"nodeType": "YulBlock",
													"src": "2094:40:14",
													"statements": [
														{
															"nativeSrc": "2105:22:14",
															"nodeType": "YulAssignment",
															"src": "2105:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2121:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2121:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2115:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2115:5:14"
																},
																"nativeSrc": "2115:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2115:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2105:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2105:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2035:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2077:5:14",
														"nodeType": "YulTypedName",
														"src": "2077:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2087:6:14",
														"nodeType": "YulTypedName",
														"src": "2087:6:14",
														"type": ""
													}
												],
												"src": "2035:99:14"
											},
											{
												"body": {
													"nativeSrc": "2168:152:14",
													"nodeType": "YulBlock",
													"src": "2168:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2185:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2185:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:77:14",
																		"nodeType": "YulLiteral",
																		"src": "2188:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2178:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:14"
																},
																"nativeSrc": "2178:88:14",
																"nodeType": "YulFunctionCall",
																"src": "2178:88:14"
															},
															"nativeSrc": "2178:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "2178:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2282:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2282:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2285:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2285:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2275:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:14"
																},
																"nativeSrc": "2275:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2275:15:14"
															},
															"nativeSrc": "2275:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2275:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2306:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2306:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2309:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2309:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2299:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2299:6:14"
																},
																"nativeSrc": "2299:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2299:15:14"
															},
															"nativeSrc": "2299:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2299:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2140:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2140:180:14"
											},
											{
												"body": {
													"nativeSrc": "2354:152:14",
													"nodeType": "YulBlock",
													"src": "2354:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2371:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2371:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2374:77:14",
																		"nodeType": "YulLiteral",
																		"src": "2374:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2364:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:14"
																},
																"nativeSrc": "2364:88:14",
																"nodeType": "YulFunctionCall",
																"src": "2364:88:14"
															},
															"nativeSrc": "2364:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "2364:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2468:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2468:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2471:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2471:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2461:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2461:6:14"
																},
																"nativeSrc": "2461:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2461:15:14"
															},
															"nativeSrc": "2461:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2461:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2492:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2492:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2495:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2495:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2485:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:14"
																},
																"nativeSrc": "2485:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2485:15:14"
															},
															"nativeSrc": "2485:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2485:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2326:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2326:180:14"
											},
											{
												"body": {
													"nativeSrc": "2563:269:14",
													"nodeType": "YulBlock",
													"src": "2563:269:14",
													"statements": [
														{
															"nativeSrc": "2573:22:14",
															"nodeType": "YulAssignment",
															"src": "2573:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2587:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2587:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2593:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2593:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2583:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2583:3:14"
																},
																"nativeSrc": "2583:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2583:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2573:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2573:6:14"
																}
															]
														},
														{
															"nativeSrc": "2604:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2604:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2634:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2634:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2640:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2640:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2630:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2630:3:14"
																},
																"nativeSrc": "2630:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2630:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2608:18:14",
																	"nodeType": "YulTypedName",
																	"src": "2608:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2681:51:14",
																"nodeType": "YulBlock",
																"src": "2681:51:14",
																"statements": [
																	{
																		"nativeSrc": "2695:27:14",
																		"nodeType": "YulAssignment",
																		"src": "2695:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2709:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "2709:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2717:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2717:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2705:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2705:3:14"
																			},
																			"nativeSrc": "2705:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2695:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2695:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2661:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "2661:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2654:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2654:6:14"
																},
																"nativeSrc": "2654:26:14",
																"nodeType": "YulFunctionCall",
																"src": "2654:26:14"
															},
															"nativeSrc": "2651:81:14",
															"nodeType": "YulIf",
															"src": "2651:81:14"
														},
														{
															"body": {
																"nativeSrc": "2784:42:14",
																"nodeType": "YulBlock",
																"src": "2784:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2798:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "2798:16:14"
																			},
																			"nativeSrc": "2798:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2798:18:14"
																		},
																		"nativeSrc": "2798:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2798:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2748:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "2748:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2771:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2771:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2779:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2768:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2768:2:14"
																		},
																		"nativeSrc": "2768:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2768:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2745:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2745:2:14"
																},
																"nativeSrc": "2745:38:14",
																"nodeType": "YulFunctionCall",
																"src": "2745:38:14"
															},
															"nativeSrc": "2742:84:14",
															"nodeType": "YulIf",
															"src": "2742:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2512:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2547:4:14",
														"nodeType": "YulTypedName",
														"src": "2547:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2556:6:14",
														"nodeType": "YulTypedName",
														"src": "2556:6:14",
														"type": ""
													}
												],
												"src": "2512:320:14"
											},
											{
												"body": {
													"nativeSrc": "2892:87:14",
													"nodeType": "YulBlock",
													"src": "2892:87:14",
													"statements": [
														{
															"nativeSrc": "2902:11:14",
															"nodeType": "YulAssignment",
															"src": "2902:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "2910:3:14",
																"nodeType": "YulIdentifier",
																"src": "2910:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2902:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2902:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2930:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2933:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2933:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2923:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:14"
																},
																"nativeSrc": "2923:14:14",
																"nodeType": "YulFunctionCall",
																"src": "2923:14:14"
															},
															"nativeSrc": "2923:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "2923:14:14"
														},
														{
															"nativeSrc": "2946:26:14",
															"nodeType": "YulAssignment",
															"src": "2946:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2964:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2964:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2967:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2967:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2954:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "2954:9:14"
																},
																"nativeSrc": "2954:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2954:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2946:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2946:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2838:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2879:3:14",
														"nodeType": "YulTypedName",
														"src": "2879:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2887:4:14",
														"nodeType": "YulTypedName",
														"src": "2887:4:14",
														"type": ""
													}
												],
												"src": "2838:141:14"
											},
											{
												"body": {
													"nativeSrc": "3029:49:14",
													"nodeType": "YulBlock",
													"src": "3029:49:14",
													"statements": [
														{
															"nativeSrc": "3039:33:14",
															"nodeType": "YulAssignment",
															"src": "3039:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3057:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3064:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3064:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3053:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3053:3:14"
																		},
																		"nativeSrc": "3053:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3053:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3069:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3069:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3049:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:14"
																},
																"nativeSrc": "3049:23:14",
																"nodeType": "YulFunctionCall",
																"src": "3049:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3039:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2985:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3012:5:14",
														"nodeType": "YulTypedName",
														"src": "3012:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3022:6:14",
														"nodeType": "YulTypedName",
														"src": "3022:6:14",
														"type": ""
													}
												],
												"src": "2985:93:14"
											},
											{
												"body": {
													"nativeSrc": "3137:54:14",
													"nodeType": "YulBlock",
													"src": "3137:54:14",
													"statements": [
														{
															"nativeSrc": "3147:37:14",
															"nodeType": "YulAssignment",
															"src": "3147:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3172:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3172:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3178:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3178:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3168:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3168:3:14"
																},
																"nativeSrc": "3168:16:14",
																"nodeType": "YulFunctionCall",
																"src": "3168:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3147:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3147:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3084:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3112:4:14",
														"nodeType": "YulTypedName",
														"src": "3112:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3118:5:14",
														"nodeType": "YulTypedName",
														"src": "3118:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3128:8:14",
														"nodeType": "YulTypedName",
														"src": "3128:8:14",
														"type": ""
													}
												],
												"src": "3084:107:14"
											},
											{
												"body": {
													"nativeSrc": "3273:317:14",
													"nodeType": "YulBlock",
													"src": "3273:317:14",
													"statements": [
														{
															"nativeSrc": "3283:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3283:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3304:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "3304:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3316:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3316:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3300:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:14"
																},
																"nativeSrc": "3300:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3300:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3287:9:14",
																	"nodeType": "YulTypedName",
																	"src": "3287:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3327:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3327:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3358:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3358:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3369:66:14",
																		"nodeType": "YulLiteral",
																		"src": "3369:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3339:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3339:18:14"
																},
																"nativeSrc": "3339:97:14",
																"nodeType": "YulFunctionCall",
																"src": "3339:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3331:4:14",
																	"nodeType": "YulTypedName",
																	"src": "3331:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3445:51:14",
															"nodeType": "YulAssignment",
															"src": "3445:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3476:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3487:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "3487:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3457:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3457:18:14"
																},
																"nativeSrc": "3457:39:14",
																"nodeType": "YulFunctionCall",
																"src": "3457:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3445:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3445:8:14"
																}
															]
														},
														{
															"nativeSrc": "3505:30:14",
															"nodeType": "YulAssignment",
															"src": "3505:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3518:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3518:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3529:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "3529:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3525:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:14"
																		},
																		"nativeSrc": "3525:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3525:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3514:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:14"
																},
																"nativeSrc": "3514:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3514:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3505:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3505:5:14"
																}
															]
														},
														{
															"nativeSrc": "3544:40:14",
															"nodeType": "YulAssignment",
															"src": "3544:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3557:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3557:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3568:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "3568:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3578:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "3578:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3564:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3564:3:14"
																		},
																		"nativeSrc": "3564:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3564:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3554:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3554:2:14"
																},
																"nativeSrc": "3554:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3554:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3544:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3544:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3197:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3234:5:14",
														"nodeType": "YulTypedName",
														"src": "3234:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3241:10:14",
														"nodeType": "YulTypedName",
														"src": "3241:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3253:8:14",
														"nodeType": "YulTypedName",
														"src": "3253:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3266:6:14",
														"nodeType": "YulTypedName",
														"src": "3266:6:14",
														"type": ""
													}
												],
												"src": "3197:393:14"
											},
											{
												"body": {
													"nativeSrc": "3641:32:14",
													"nodeType": "YulBlock",
													"src": "3641:32:14",
													"statements": [
														{
															"nativeSrc": "3651:16:14",
															"nodeType": "YulAssignment",
															"src": "3651:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "3662:5:14",
																"nodeType": "YulIdentifier",
																"src": "3662:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3651:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3651:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3596:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:14",
														"nodeType": "YulTypedName",
														"src": "3623:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3633:7:14",
														"nodeType": "YulTypedName",
														"src": "3633:7:14",
														"type": ""
													}
												],
												"src": "3596:77:14"
											},
											{
												"body": {
													"nativeSrc": "3711:28:14",
													"nodeType": "YulBlock",
													"src": "3711:28:14",
													"statements": [
														{
															"nativeSrc": "3721:12:14",
															"nodeType": "YulAssignment",
															"src": "3721:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "3728:5:14",
																"nodeType": "YulIdentifier",
																"src": "3728:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3721:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3721:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3679:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3697:5:14",
														"nodeType": "YulTypedName",
														"src": "3697:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3707:3:14",
														"nodeType": "YulTypedName",
														"src": "3707:3:14",
														"type": ""
													}
												],
												"src": "3679:60:14"
											},
											{
												"body": {
													"nativeSrc": "3805:82:14",
													"nodeType": "YulBlock",
													"src": "3805:82:14",
													"statements": [
														{
															"nativeSrc": "3815:66:14",
															"nodeType": "YulAssignment",
															"src": "3815:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3873:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3873:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3855:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3855:17:14"
																				},
																				"nativeSrc": "3855:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3855:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3846:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "3846:8:14"
																		},
																		"nativeSrc": "3846:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3828:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3828:17:14"
																},
																"nativeSrc": "3828:53:14",
																"nodeType": "YulFunctionCall",
																"src": "3828:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3815:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "3815:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3745:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3785:5:14",
														"nodeType": "YulTypedName",
														"src": "3785:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3795:9:14",
														"nodeType": "YulTypedName",
														"src": "3795:9:14",
														"type": ""
													}
												],
												"src": "3745:142:14"
											},
											{
												"body": {
													"nativeSrc": "3940:28:14",
													"nodeType": "YulBlock",
													"src": "3940:28:14",
													"statements": [
														{
															"nativeSrc": "3950:12:14",
															"nodeType": "YulAssignment",
															"src": "3950:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "3957:5:14",
																"nodeType": "YulIdentifier",
																"src": "3957:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3950:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3950:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3893:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3926:5:14",
														"nodeType": "YulTypedName",
														"src": "3926:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3936:3:14",
														"nodeType": "YulTypedName",
														"src": "3936:3:14",
														"type": ""
													}
												],
												"src": "3893:75:14"
											},
											{
												"body": {
													"nativeSrc": "4050:193:14",
													"nodeType": "YulBlock",
													"src": "4050:193:14",
													"statements": [
														{
															"nativeSrc": "4060:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4060:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4115:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4115:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4084:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "4084:30:14"
																},
																"nativeSrc": "4084:39:14",
																"nodeType": "YulFunctionCall",
																"src": "4084:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4064:16:14",
																	"nodeType": "YulTypedName",
																	"src": "4064:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4139:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4139:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4179:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "4179:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4173:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "4173:5:14"
																				},
																				"nativeSrc": "4173:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4173:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4186:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4186:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4218:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "4218:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4194:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "4194:23:14"
																				},
																				"nativeSrc": "4194:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4194:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4145:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "4145:27:14"
																		},
																		"nativeSrc": "4145:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4145:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4132:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:14"
																},
																"nativeSrc": "4132:105:14",
																"nodeType": "YulFunctionCall",
																"src": "4132:105:14"
															},
															"nativeSrc": "4132:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "4132:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3974:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4027:4:14",
														"nodeType": "YulTypedName",
														"src": "4027:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4033:6:14",
														"nodeType": "YulTypedName",
														"src": "4033:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4041:7:14",
														"nodeType": "YulTypedName",
														"src": "4041:7:14",
														"type": ""
													}
												],
												"src": "3974:269:14"
											},
											{
												"body": {
													"nativeSrc": "4298:24:14",
													"nodeType": "YulBlock",
													"src": "4298:24:14",
													"statements": [
														{
															"nativeSrc": "4308:8:14",
															"nodeType": "YulAssignment",
															"src": "4308:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4315:1:14",
																"nodeType": "YulLiteral",
																"src": "4315:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4308:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4249:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4294:3:14",
														"nodeType": "YulTypedName",
														"src": "4294:3:14",
														"type": ""
													}
												],
												"src": "4249:73:14"
											},
											{
												"body": {
													"nativeSrc": "4381:136:14",
													"nodeType": "YulBlock",
													"src": "4381:136:14",
													"statements": [
														{
															"nativeSrc": "4391:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4391:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4405:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "4405:30:14"
																},
																"nativeSrc": "4405:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4405:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4395:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4395:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4490:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4490:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4496:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4496:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4504:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4504:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4446:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "4446:43:14"
																},
																"nativeSrc": "4446:65:14",
																"nodeType": "YulFunctionCall",
																"src": "4446:65:14"
															},
															"nativeSrc": "4446:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "4446:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4328:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4367:4:14",
														"nodeType": "YulTypedName",
														"src": "4367:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4373:6:14",
														"nodeType": "YulTypedName",
														"src": "4373:6:14",
														"type": ""
													}
												],
												"src": "4328:189:14"
											},
											{
												"body": {
													"nativeSrc": "4573:136:14",
													"nodeType": "YulBlock",
													"src": "4573:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4640:63:14",
																"nodeType": "YulBlock",
																"src": "4640:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4684:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "4684:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4691:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4691:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4654:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "4654:29:14"
																			},
																			"nativeSrc": "4654:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4654:39:14"
																		},
																		"nativeSrc": "4654:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4654:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4593:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4593:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4600:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4600:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4590:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4590:2:14"
																},
																"nativeSrc": "4590:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4590:14:14"
															},
															"nativeSrc": "4583:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4605:26:14",
																"nodeType": "YulBlock",
																"src": "4605:26:14",
																"statements": [
																	{
																		"nativeSrc": "4607:22:14",
																		"nodeType": "YulAssignment",
																		"src": "4607:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4620:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "4620:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4627:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4627:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4616:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4616:3:14"
																			},
																			"nativeSrc": "4616:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4616:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4607:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4607:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4587:2:14",
																"nodeType": "YulBlock",
																"src": "4587:2:14",
																"statements": []
															},
															"src": "4583:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4523:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4561:5:14",
														"nodeType": "YulTypedName",
														"src": "4561:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4568:3:14",
														"nodeType": "YulTypedName",
														"src": "4568:3:14",
														"type": ""
													}
												],
												"src": "4523:186:14"
											},
											{
												"body": {
													"nativeSrc": "4794:464:14",
													"nodeType": "YulBlock",
													"src": "4794:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4820:431:14",
																"nodeType": "YulBlock",
																"src": "4820:431:14",
																"statements": [
																	{
																		"nativeSrc": "4834:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4834:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4882:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "4882:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4850:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "4850:31:14"
																			},
																			"nativeSrc": "4850:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4850:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4838:8:14",
																				"nodeType": "YulTypedName",
																				"src": "4838:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4901:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4901:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4924:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "4924:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4952:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "4952:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4934:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "4934:17:14"
																					},
																					"nativeSrc": "4934:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4934:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4920:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4920:3:14"
																			},
																			"nativeSrc": "4920:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4920:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4905:11:14",
																				"nodeType": "YulTypedName",
																				"src": "4905:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5121:27:14",
																			"nodeType": "YulBlock",
																			"src": "5121:27:14",
																			"statements": [
																				{
																					"nativeSrc": "5123:23:14",
																					"nodeType": "YulAssignment",
																					"src": "5123:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5138:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "5138:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5123:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "5123:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5105:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "5105:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5117:2:14",
																					"nodeType": "YulLiteral",
																					"src": "5117:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5102:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5102:2:14"
																			},
																			"nativeSrc": "5102:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5102:18:14"
																		},
																		"nativeSrc": "5099:49:14",
																		"nodeType": "YulIf",
																		"src": "5099:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5190:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "5190:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5207:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "5207:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5235:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "5235:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5217:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "5217:17:14"
																							},
																							"nativeSrc": "5217:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "5217:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5203:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5203:3:14"
																					},
																					"nativeSrc": "5203:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5203:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5161:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "5161:28:14"
																			},
																			"nativeSrc": "5161:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5161:80:14"
																		},
																		"nativeSrc": "5161:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5161:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4811:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4811:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4816:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4816:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4808:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4808:2:14"
																},
																"nativeSrc": "4808:11:14",
																"nodeType": "YulFunctionCall",
																"src": "4808:11:14"
															},
															"nativeSrc": "4805:446:14",
															"nodeType": "YulIf",
															"src": "4805:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4715:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4770:5:14",
														"nodeType": "YulTypedName",
														"src": "4770:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4777:3:14",
														"nodeType": "YulTypedName",
														"src": "4777:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4782:10:14",
														"nodeType": "YulTypedName",
														"src": "4782:10:14",
														"type": ""
													}
												],
												"src": "4715:543:14"
											},
											{
												"body": {
													"nativeSrc": "5327:54:14",
													"nodeType": "YulBlock",
													"src": "5327:54:14",
													"statements": [
														{
															"nativeSrc": "5337:37:14",
															"nodeType": "YulAssignment",
															"src": "5337:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5362:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5362:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5368:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5368:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5358:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:14"
																},
																"nativeSrc": "5358:16:14",
																"nodeType": "YulFunctionCall",
																"src": "5358:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5337:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "5337:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5264:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5302:4:14",
														"nodeType": "YulTypedName",
														"src": "5302:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5308:5:14",
														"nodeType": "YulTypedName",
														"src": "5308:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5318:8:14",
														"nodeType": "YulTypedName",
														"src": "5318:8:14",
														"type": ""
													}
												],
												"src": "5264:117:14"
											},
											{
												"body": {
													"nativeSrc": "5438:118:14",
													"nodeType": "YulBlock",
													"src": "5438:118:14",
													"statements": [
														{
															"nativeSrc": "5448:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5448:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5497:1:14",
																						"nodeType": "YulLiteral",
																						"src": "5497:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5500:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5500:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5493:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5493:3:14"
																				},
																				"nativeSrc": "5493:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5493:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5512:1:14",
																						"nodeType": "YulLiteral",
																						"src": "5512:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5508:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5508:3:14"
																				},
																				"nativeSrc": "5508:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5508:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5464:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "5464:28:14"
																		},
																		"nativeSrc": "5464:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5464:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5460:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5460:3:14"
																},
																"nativeSrc": "5460:56:14",
																"nodeType": "YulFunctionCall",
																"src": "5460:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5452:4:14",
																	"nodeType": "YulTypedName",
																	"src": "5452:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5525:25:14",
															"nodeType": "YulAssignment",
															"src": "5525:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5539:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5539:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5545:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5545:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5535:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:14"
																},
																"nativeSrc": "5535:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5535:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5525:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5525:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5387:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5415:4:14",
														"nodeType": "YulTypedName",
														"src": "5415:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5421:5:14",
														"nodeType": "YulTypedName",
														"src": "5421:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5431:6:14",
														"nodeType": "YulTypedName",
														"src": "5431:6:14",
														"type": ""
													}
												],
												"src": "5387:169:14"
											},
											{
												"body": {
													"nativeSrc": "5642:214:14",
													"nodeType": "YulBlock",
													"src": "5642:214:14",
													"statements": [
														{
															"nativeSrc": "5775:37:14",
															"nodeType": "YulAssignment",
															"src": "5775:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5802:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5802:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5808:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5783:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5783:18:14"
																},
																"nativeSrc": "5783:29:14",
																"nodeType": "YulFunctionCall",
																"src": "5783:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5775:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5775:4:14"
																}
															]
														},
														{
															"nativeSrc": "5821:29:14",
															"nodeType": "YulAssignment",
															"src": "5821:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5832:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5832:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5842:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5842:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5845:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5845:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5838:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:14"
																		},
																		"nativeSrc": "5838:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5829:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5829:2:14"
																},
																"nativeSrc": "5829:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5829:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5821:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5821:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5561:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5623:4:14",
														"nodeType": "YulTypedName",
														"src": "5623:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5629:3:14",
														"nodeType": "YulTypedName",
														"src": "5629:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5637:4:14",
														"nodeType": "YulTypedName",
														"src": "5637:4:14",
														"type": ""
													}
												],
												"src": "5561:295:14"
											},
											{
												"body": {
													"nativeSrc": "5953:1303:14",
													"nodeType": "YulBlock",
													"src": "5953:1303:14",
													"statements": [
														{
															"nativeSrc": "5964:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5964:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6011:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6011:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5978:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "5978:32:14"
																},
																"nativeSrc": "5978:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5978:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5968:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5968:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6100:22:14",
																"nodeType": "YulBlock",
																"src": "6100:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6102:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6102:16:14"
																			},
																			"nativeSrc": "6102:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6102:18:14"
																		},
																		"nativeSrc": "6102:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6102:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6072:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6072:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6080:18:14",
																		"nodeType": "YulLiteral",
																		"src": "6080:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6069:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6069:2:14"
																},
																"nativeSrc": "6069:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6069:30:14"
															},
															"nativeSrc": "6066:56:14",
															"nodeType": "YulIf",
															"src": "6066:56:14"
														},
														{
															"nativeSrc": "6132:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6132:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6178:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6178:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6172:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "6172:5:14"
																		},
																		"nativeSrc": "6172:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6146:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "6146:25:14"
																},
																"nativeSrc": "6146:38:14",
																"nodeType": "YulFunctionCall",
																"src": "6146:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6136:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6136:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6277:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6277:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6283:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6283:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6291:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6291:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6231:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "6231:45:14"
																},
																"nativeSrc": "6231:67:14",
																"nodeType": "YulFunctionCall",
																"src": "6231:67:14"
															},
															"nativeSrc": "6231:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "6231:67:14"
														},
														{
															"nativeSrc": "6308:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6308:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6325:1:14",
																"nodeType": "YulLiteral",
																"src": "6325:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6312:9:14",
																	"nodeType": "YulTypedName",
																	"src": "6312:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6336:17:14",
															"nodeType": "YulAssignment",
															"src": "6336:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6349:4:14",
																"nodeType": "YulLiteral",
																"src": "6349:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6336:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "6336:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6400:611:14",
																		"nodeType": "YulBlock",
																		"src": "6400:611:14",
																		"statements": [
																			{
																				"nativeSrc": "6414:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6414:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6433:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "6433:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6445:4:14",
																									"nodeType": "YulLiteral",
																									"src": "6445:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6441:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6441:3:14"
																							},
																							"nativeSrc": "6441:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6441:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6429:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6429:3:14"
																					},
																					"nativeSrc": "6429:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6429:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6418:7:14",
																						"nodeType": "YulTypedName",
																						"src": "6418:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6465:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6465:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6511:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "6511:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6479:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "6479:31:14"
																					},
																					"nativeSrc": "6479:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6479:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6469:6:14",
																						"nodeType": "YulTypedName",
																						"src": "6469:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6529:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6529:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6538:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6538:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6533:1:14",
																						"nodeType": "YulTypedName",
																						"src": "6533:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6597:163:14",
																					"nodeType": "YulBlock",
																					"src": "6597:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6622:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "6622:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6640:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "6640:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6645:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "6645:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6636:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "6636:3:14"
																												},
																												"nativeSrc": "6636:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "6636:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6630:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "6630:5:14"
																										},
																										"nativeSrc": "6630:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "6630:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6615:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "6615:6:14"
																								},
																								"nativeSrc": "6615:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6615:42:14"
																							},
																							"nativeSrc": "6615:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "6615:42:14"
																						},
																						{
																							"nativeSrc": "6674:24:14",
																							"nodeType": "YulAssignment",
																							"src": "6674:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6688:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "6688:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6696:1:14",
																										"nodeType": "YulLiteral",
																										"src": "6696:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6684:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6684:3:14"
																								},
																								"nativeSrc": "6684:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6684:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6674:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "6674:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6715:31:14",
																							"nodeType": "YulAssignment",
																							"src": "6715:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6732:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "6732:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6743:2:14",
																										"nodeType": "YulLiteral",
																										"src": "6743:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6728:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6728:3:14"
																								},
																								"nativeSrc": "6728:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6728:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6715:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "6715:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6563:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "6563:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6566:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "6566:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6560:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "6560:2:14"
																					},
																					"nativeSrc": "6560:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6560:14:14"
																				},
																				"nativeSrc": "6552:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6575:21:14",
																					"nodeType": "YulBlock",
																					"src": "6575:21:14",
																					"statements": [
																						{
																							"nativeSrc": "6577:17:14",
																							"nodeType": "YulAssignment",
																							"src": "6577:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6586:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "6586:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6589:4:14",
																										"nodeType": "YulLiteral",
																										"src": "6589:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6582:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6582:3:14"
																								},
																								"nativeSrc": "6582:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6582:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6577:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "6577:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6556:3:14",
																					"nodeType": "YulBlock",
																					"src": "6556:3:14",
																					"statements": []
																				},
																				"src": "6552:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "6796:156:14",
																					"nodeType": "YulBlock",
																					"src": "6796:156:14",
																					"statements": [
																						{
																							"nativeSrc": "6814:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6814:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6841:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "6841:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6846:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "6846:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6837:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "6837:3:14"
																										},
																										"nativeSrc": "6837:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "6837:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6831:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "6831:5:14"
																								},
																								"nativeSrc": "6831:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6831:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6818:9:14",
																									"nodeType": "YulTypedName",
																									"src": "6818:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6881:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "6881:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6908:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "6908:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6923:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "6923:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6931:4:14",
																														"nodeType": "YulLiteral",
																														"src": "6931:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6919:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "6919:3:14"
																												},
																												"nativeSrc": "6919:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "6919:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6889:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "6889:18:14"
																										},
																										"nativeSrc": "6889:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "6889:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6874:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "6874:6:14"
																								},
																								"nativeSrc": "6874:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6874:64:14"
																							},
																							"nativeSrc": "6874:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "6874:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6779:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "6779:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6788:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "6788:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6776:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "6776:2:14"
																					},
																					"nativeSrc": "6776:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6776:19:14"
																				},
																				"nativeSrc": "6773:179:14",
																				"nodeType": "YulIf",
																				"src": "6773:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6972:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "6972:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6986:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "6986:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6994:1:14",
																											"nodeType": "YulLiteral",
																											"src": "6994:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6982:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "6982:3:14"
																									},
																									"nativeSrc": "6982:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "6982:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6998:1:14",
																									"nodeType": "YulLiteral",
																									"src": "6998:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6978:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6978:3:14"
																							},
																							"nativeSrc": "6978:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6978:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6965:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6965:6:14"
																					},
																					"nativeSrc": "6965:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6965:36:14"
																				},
																				"nativeSrc": "6965:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "6965:36:14"
																			}
																		]
																	},
																	"nativeSrc": "6393:618:14",
																	"nodeType": "YulCase",
																	"src": "6393:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6398:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6398:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7028:222:14",
																		"nodeType": "YulBlock",
																		"src": "7028:222:14",
																		"statements": [
																			{
																				"nativeSrc": "7042:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7042:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7055:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7055:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7046:5:14",
																						"nodeType": "YulTypedName",
																						"src": "7046:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7079:67:14",
																					"nodeType": "YulBlock",
																					"src": "7079:67:14",
																					"statements": [
																						{
																							"nativeSrc": "7097:35:14",
																							"nodeType": "YulAssignment",
																							"src": "7097:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7116:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "7116:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7121:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "7121:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7112:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "7112:3:14"
																										},
																										"nativeSrc": "7112:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "7112:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7106:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "7106:5:14"
																								},
																								"nativeSrc": "7106:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7106:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7097:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "7097:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7072:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "7072:6:14"
																				},
																				"nativeSrc": "7069:77:14",
																				"nodeType": "YulIf",
																				"src": "7069:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7166:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "7166:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7225:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "7225:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7232:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "7232:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7172:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "7172:52:14"
																							},
																							"nativeSrc": "7172:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "7172:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7159:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7159:6:14"
																					},
																					"nativeSrc": "7159:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7159:81:14"
																				},
																				"nativeSrc": "7159:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "7159:81:14"
																			}
																		]
																	},
																	"nativeSrc": "7020:230:14",
																	"nodeType": "YulCase",
																	"src": "7020:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6373:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6373:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6381:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6381:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6370:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6370:2:14"
																},
																"nativeSrc": "6370:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6370:14:14"
															},
															"nativeSrc": "6363:887:14",
															"nodeType": "YulSwitch",
															"src": "6363:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5861:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5942:4:14",
														"nodeType": "YulTypedName",
														"src": "5942:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5948:3:14",
														"nodeType": "YulTypedName",
														"src": "5948:3:14",
														"type": ""
													}
												],
												"src": "5861:1395:14"
											},
											{
												"body": {
													"nativeSrc": "7327:53:14",
													"nodeType": "YulBlock",
													"src": "7327:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7344:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7344:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7367:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7367:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7349:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "7349:17:14"
																		},
																		"nativeSrc": "7349:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7349:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7337:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:14"
																},
																"nativeSrc": "7337:37:14",
																"nodeType": "YulFunctionCall",
																"src": "7337:37:14"
															},
															"nativeSrc": "7337:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "7337:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7262:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7315:5:14",
														"nodeType": "YulTypedName",
														"src": "7315:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7322:3:14",
														"nodeType": "YulTypedName",
														"src": "7322:3:14",
														"type": ""
													}
												],
												"src": "7262:118:14"
											},
											{
												"body": {
													"nativeSrc": "7484:124:14",
													"nodeType": "YulBlock",
													"src": "7484:124:14",
													"statements": [
														{
															"nativeSrc": "7494:26:14",
															"nodeType": "YulAssignment",
															"src": "7494:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7506:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7506:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7517:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7502:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7502:3:14"
																},
																"nativeSrc": "7502:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7502:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7494:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7494:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7574:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7574:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7587:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7587:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7598:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7598:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7583:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7583:3:14"
																		},
																		"nativeSrc": "7583:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7583:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7530:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "7530:43:14"
																},
																"nativeSrc": "7530:71:14",
																"nodeType": "YulFunctionCall",
																"src": "7530:71:14"
															},
															"nativeSrc": "7530:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "7530:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7386:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7456:9:14",
														"nodeType": "YulTypedName",
														"src": "7456:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7468:6:14",
														"nodeType": "YulTypedName",
														"src": "7468:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7479:4:14",
														"nodeType": "YulTypedName",
														"src": "7479:4:14",
														"type": ""
													}
												],
												"src": "7386:222:14"
											},
											{
												"body": {
													"nativeSrc": "7710:73:14",
													"nodeType": "YulBlock",
													"src": "7710:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7727:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7727:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7732:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7732:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7720:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:14"
																},
																"nativeSrc": "7720:19:14",
																"nodeType": "YulFunctionCall",
																"src": "7720:19:14"
															},
															"nativeSrc": "7720:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "7720:19:14"
														},
														{
															"nativeSrc": "7748:29:14",
															"nodeType": "YulAssignment",
															"src": "7748:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7767:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7767:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7772:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7772:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7763:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7763:3:14"
																},
																"nativeSrc": "7763:14:14",
																"nodeType": "YulFunctionCall",
																"src": "7763:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7748:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "7748:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7614:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7682:3:14",
														"nodeType": "YulTypedName",
														"src": "7682:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7687:6:14",
														"nodeType": "YulTypedName",
														"src": "7687:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7698:11:14",
														"nodeType": "YulTypedName",
														"src": "7698:11:14",
														"type": ""
													}
												],
												"src": "7614:169:14"
											},
											{
												"body": {
													"nativeSrc": "7895:64:14",
													"nodeType": "YulBlock",
													"src": "7895:64:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7917:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7917:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7925:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7925:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7913:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7913:3:14"
																		},
																		"nativeSrc": "7913:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7913:14:14"
																	},
																	{
																		"hexValue": "496e76616c696420435553442061646472657373",
																		"kind": "string",
																		"nativeSrc": "7929:22:14",
																		"nodeType": "YulLiteral",
																		"src": "7929:22:14",
																		"type": "",
																		"value": "Invalid CUSD address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7906:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:14"
																},
																"nativeSrc": "7906:46:14",
																"nodeType": "YulFunctionCall",
																"src": "7906:46:14"
															},
															"nativeSrc": "7906:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "7906:46:14"
														}
													]
												},
												"name": "store_literal_in_memory_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633",
												"nativeSrc": "7789:170:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7887:6:14",
														"nodeType": "YulTypedName",
														"src": "7887:6:14",
														"type": ""
													}
												],
												"src": "7789:170:14"
											},
											{
												"body": {
													"nativeSrc": "8111:220:14",
													"nodeType": "YulBlock",
													"src": "8111:220:14",
													"statements": [
														{
															"nativeSrc": "8121:74:14",
															"nodeType": "YulAssignment",
															"src": "8121:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8187:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8187:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8192:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8192:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8128:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "8128:58:14"
																},
																"nativeSrc": "8128:67:14",
																"nodeType": "YulFunctionCall",
																"src": "8128:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8121:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8121:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8293:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8293:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633",
																	"nativeSrc": "8204:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "8204:88:14"
																},
																"nativeSrc": "8204:93:14",
																"nodeType": "YulFunctionCall",
																"src": "8204:93:14"
															},
															"nativeSrc": "8204:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "8204:93:14"
														},
														{
															"nativeSrc": "8306:19:14",
															"nodeType": "YulAssignment",
															"src": "8306:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8317:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8317:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8322:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8322:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8313:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8313:3:14"
																},
																"nativeSrc": "8313:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8313:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8306:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8306:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7965:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8099:3:14",
														"nodeType": "YulTypedName",
														"src": "8099:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8107:3:14",
														"nodeType": "YulTypedName",
														"src": "8107:3:14",
														"type": ""
													}
												],
												"src": "7965:366:14"
											},
											{
												"body": {
													"nativeSrc": "8508:248:14",
													"nodeType": "YulBlock",
													"src": "8508:248:14",
													"statements": [
														{
															"nativeSrc": "8518:26:14",
															"nodeType": "YulAssignment",
															"src": "8518:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8530:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8530:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8541:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8541:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8526:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8526:3:14"
																},
																"nativeSrc": "8526:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8526:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8518:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8518:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8565:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8565:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8576:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8576:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8561:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:14"
																		},
																		"nativeSrc": "8561:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8561:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8584:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8584:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8590:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8590:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8580:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8580:3:14"
																		},
																		"nativeSrc": "8580:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8580:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8554:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:14"
																},
																"nativeSrc": "8554:47:14",
																"nodeType": "YulFunctionCall",
																"src": "8554:47:14"
															},
															"nativeSrc": "8554:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "8554:47:14"
														},
														{
															"nativeSrc": "8610:139:14",
															"nodeType": "YulAssignment",
															"src": "8610:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8744:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8744:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8618:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "8618:124:14"
																},
																"nativeSrc": "8618:131:14",
																"nodeType": "YulFunctionCall",
																"src": "8618:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8610:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8610:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8337:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8488:9:14",
														"nodeType": "YulTypedName",
														"src": "8488:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8503:4:14",
														"nodeType": "YulTypedName",
														"src": "8503:4:14",
														"type": ""
													}
												],
												"src": "8337:419:14"
											},
											{
												"body": {
													"nativeSrc": "8868:60:14",
													"nodeType": "YulBlock",
													"src": "8868:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8890:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8890:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8898:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8898:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8886:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8886:3:14"
																		},
																		"nativeSrc": "8886:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8886:14:14"
																	},
																	{
																		"hexValue": "496e76616c6964207472656173757279",
																		"kind": "string",
																		"nativeSrc": "8902:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8902:18:14",
																		"type": "",
																		"value": "Invalid treasury"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8879:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8879:6:14"
																},
																"nativeSrc": "8879:42:14",
																"nodeType": "YulFunctionCall",
																"src": "8879:42:14"
															},
															"nativeSrc": "8879:42:14",
															"nodeType": "YulExpressionStatement",
															"src": "8879:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
												"nativeSrc": "8762:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8860:6:14",
														"nodeType": "YulTypedName",
														"src": "8860:6:14",
														"type": ""
													}
												],
												"src": "8762:166:14"
											},
											{
												"body": {
													"nativeSrc": "9080:220:14",
													"nodeType": "YulBlock",
													"src": "9080:220:14",
													"statements": [
														{
															"nativeSrc": "9090:74:14",
															"nodeType": "YulAssignment",
															"src": "9090:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9156:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9156:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9161:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9161:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9097:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "9097:58:14"
																},
																"nativeSrc": "9097:67:14",
																"nodeType": "YulFunctionCall",
																"src": "9097:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9090:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9090:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9262:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9262:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
																	"nativeSrc": "9173:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "9173:88:14"
																},
																"nativeSrc": "9173:93:14",
																"nodeType": "YulFunctionCall",
																"src": "9173:93:14"
															},
															"nativeSrc": "9173:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "9173:93:14"
														},
														{
															"nativeSrc": "9275:19:14",
															"nodeType": "YulAssignment",
															"src": "9275:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9286:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9286:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9291:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9291:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9282:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9282:3:14"
																},
																"nativeSrc": "9282:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9282:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9275:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9275:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8934:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9068:3:14",
														"nodeType": "YulTypedName",
														"src": "9068:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9076:3:14",
														"nodeType": "YulTypedName",
														"src": "9076:3:14",
														"type": ""
													}
												],
												"src": "8934:366:14"
											},
											{
												"body": {
													"nativeSrc": "9477:248:14",
													"nodeType": "YulBlock",
													"src": "9477:248:14",
													"statements": [
														{
															"nativeSrc": "9487:26:14",
															"nodeType": "YulAssignment",
															"src": "9487:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9499:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9499:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9510:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9510:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9495:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9495:3:14"
																},
																"nativeSrc": "9495:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9495:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9487:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9487:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9534:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9534:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9545:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9545:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9530:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9530:3:14"
																		},
																		"nativeSrc": "9530:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9530:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9553:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "9553:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9559:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9559:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9549:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:14"
																		},
																		"nativeSrc": "9549:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9549:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9523:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9523:6:14"
																},
																"nativeSrc": "9523:47:14",
																"nodeType": "YulFunctionCall",
																"src": "9523:47:14"
															},
															"nativeSrc": "9523:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "9523:47:14"
														},
														{
															"nativeSrc": "9579:139:14",
															"nodeType": "YulAssignment",
															"src": "9579:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9713:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9713:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9587:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "9587:124:14"
																},
																"nativeSrc": "9587:131:14",
																"nodeType": "YulFunctionCall",
																"src": "9587:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9579:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9579:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9306:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9457:9:14",
														"nodeType": "YulTypedName",
														"src": "9457:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9472:4:14",
														"nodeType": "YulTypedName",
														"src": "9472:4:14",
														"type": ""
													}
												],
												"src": "9306:419:14"
											},
											{
												"body": {
													"nativeSrc": "9837:61:14",
													"nodeType": "YulBlock",
													"src": "9837:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9859:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9859:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9867:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9867:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9855:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9855:3:14"
																		},
																		"nativeSrc": "9855:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9855:14:14"
																	},
																	{
																		"hexValue": "4d696e742066656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "9871:19:14",
																		"nodeType": "YulLiteral",
																		"src": "9871:19:14",
																		"type": "",
																		"value": "Mint fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9848:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9848:6:14"
																},
																"nativeSrc": "9848:43:14",
																"nodeType": "YulFunctionCall",
																"src": "9848:43:14"
															},
															"nativeSrc": "9848:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "9848:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
												"nativeSrc": "9731:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9829:6:14",
														"nodeType": "YulTypedName",
														"src": "9829:6:14",
														"type": ""
													}
												],
												"src": "9731:167:14"
											},
											{
												"body": {
													"nativeSrc": "10050:220:14",
													"nodeType": "YulBlock",
													"src": "10050:220:14",
													"statements": [
														{
															"nativeSrc": "10060:74:14",
															"nodeType": "YulAssignment",
															"src": "10060:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10126:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10126:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10131:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10131:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10067:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "10067:58:14"
																},
																"nativeSrc": "10067:67:14",
																"nodeType": "YulFunctionCall",
																"src": "10067:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10060:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10060:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10232:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10232:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
																	"nativeSrc": "10143:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "10143:88:14"
																},
																"nativeSrc": "10143:93:14",
																"nodeType": "YulFunctionCall",
																"src": "10143:93:14"
															},
															"nativeSrc": "10143:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "10143:93:14"
														},
														{
															"nativeSrc": "10245:19:14",
															"nodeType": "YulAssignment",
															"src": "10245:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10256:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10256:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10261:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10261:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10252:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10252:3:14"
																},
																"nativeSrc": "10252:12:14",
																"nodeType": "YulFunctionCall",
																"src": "10252:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10245:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10245:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9904:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10038:3:14",
														"nodeType": "YulTypedName",
														"src": "10038:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10046:3:14",
														"nodeType": "YulTypedName",
														"src": "10046:3:14",
														"type": ""
													}
												],
												"src": "9904:366:14"
											},
											{
												"body": {
													"nativeSrc": "10447:248:14",
													"nodeType": "YulBlock",
													"src": "10447:248:14",
													"statements": [
														{
															"nativeSrc": "10457:26:14",
															"nodeType": "YulAssignment",
															"src": "10457:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10469:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10469:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10480:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10480:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10465:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10465:3:14"
																},
																"nativeSrc": "10465:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10465:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10457:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10457:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10504:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10504:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10515:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10515:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10500:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10500:3:14"
																		},
																		"nativeSrc": "10500:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10500:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10523:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "10523:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10529:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10529:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10519:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10519:3:14"
																		},
																		"nativeSrc": "10519:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10519:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10493:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10493:6:14"
																},
																"nativeSrc": "10493:47:14",
																"nodeType": "YulFunctionCall",
																"src": "10493:47:14"
															},
															"nativeSrc": "10493:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "10493:47:14"
														},
														{
															"nativeSrc": "10549:139:14",
															"nodeType": "YulAssignment",
															"src": "10549:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10683:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10683:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10557:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "10557:124:14"
																},
																"nativeSrc": "10557:131:14",
																"nodeType": "YulFunctionCall",
																"src": "10557:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10549:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10549:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10276:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10427:9:14",
														"nodeType": "YulTypedName",
														"src": "10427:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10442:4:14",
														"nodeType": "YulTypedName",
														"src": "10442:4:14",
														"type": ""
													}
												],
												"src": "10276:419:14"
											},
											{
												"body": {
													"nativeSrc": "10807:63:14",
													"nodeType": "YulBlock",
													"src": "10807:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10829:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10829:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10837:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10837:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10825:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10825:3:14"
																		},
																		"nativeSrc": "10825:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10825:14:14"
																	},
																	{
																		"hexValue": "52656465656d2066656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "10841:21:14",
																		"nodeType": "YulLiteral",
																		"src": "10841:21:14",
																		"type": "",
																		"value": "Redeem fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10818:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10818:6:14"
																},
																"nativeSrc": "10818:45:14",
																"nodeType": "YulFunctionCall",
																"src": "10818:45:14"
															},
															"nativeSrc": "10818:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "10818:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
												"nativeSrc": "10701:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10799:6:14",
														"nodeType": "YulTypedName",
														"src": "10799:6:14",
														"type": ""
													}
												],
												"src": "10701:169:14"
											},
											{
												"body": {
													"nativeSrc": "11022:220:14",
													"nodeType": "YulBlock",
													"src": "11022:220:14",
													"statements": [
														{
															"nativeSrc": "11032:74:14",
															"nodeType": "YulAssignment",
															"src": "11032:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11098:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11098:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11103:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11103:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11039:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "11039:58:14"
																},
																"nativeSrc": "11039:67:14",
																"nodeType": "YulFunctionCall",
																"src": "11039:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11032:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11032:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11204:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11204:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
																	"nativeSrc": "11115:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "11115:88:14"
																},
																"nativeSrc": "11115:93:14",
																"nodeType": "YulFunctionCall",
																"src": "11115:93:14"
															},
															"nativeSrc": "11115:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "11115:93:14"
														},
														{
															"nativeSrc": "11217:19:14",
															"nodeType": "YulAssignment",
															"src": "11217:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11228:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11228:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11233:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11233:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11224:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11224:3:14"
																},
																"nativeSrc": "11224:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11224:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11217:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11217:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10876:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11010:3:14",
														"nodeType": "YulTypedName",
														"src": "11010:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11018:3:14",
														"nodeType": "YulTypedName",
														"src": "11018:3:14",
														"type": ""
													}
												],
												"src": "10876:366:14"
											},
											{
												"body": {
													"nativeSrc": "11419:248:14",
													"nodeType": "YulBlock",
													"src": "11419:248:14",
													"statements": [
														{
															"nativeSrc": "11429:26:14",
															"nodeType": "YulAssignment",
															"src": "11429:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11441:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11441:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11452:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11452:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11437:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11437:3:14"
																},
																"nativeSrc": "11437:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11437:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11429:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11429:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11476:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11476:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11487:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11487:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11472:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11472:3:14"
																		},
																		"nativeSrc": "11472:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11472:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11495:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "11495:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11501:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11501:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11491:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11491:3:14"
																		},
																		"nativeSrc": "11491:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11491:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11465:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11465:6:14"
																},
																"nativeSrc": "11465:47:14",
																"nodeType": "YulFunctionCall",
																"src": "11465:47:14"
															},
															"nativeSrc": "11465:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "11465:47:14"
														},
														{
															"nativeSrc": "11521:139:14",
															"nodeType": "YulAssignment",
															"src": "11521:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11655:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11655:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11529:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "11529:124:14"
																},
																"nativeSrc": "11529:131:14",
																"nodeType": "YulFunctionCall",
																"src": "11529:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11521:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11521:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11248:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11399:9:14",
														"nodeType": "YulTypedName",
														"src": "11399:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11414:4:14",
														"nodeType": "YulTypedName",
														"src": "11414:4:14",
														"type": ""
													}
												],
												"src": "11248:419:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint16t_uint16_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid CUSD address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid treasury\")\n\n    }\n\n    function abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mint fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378(memPtr) {\n\n        mstore(add(memPtr, 0), \"Redeem fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051612d9a380380612d9a833981810160405281019061003191906104e7565b336040518060400160405280600a81526020017f5061646920546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f504144490000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610785565b5080600490816100bd9190610785565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610863565b60405180910390fd5b61013f8161038f60201b60201c565b505f600560146101000a81548160ff02191690831515021790555060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036101d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c7906108d6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361023e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102359061093e565b60405180910390fd5b61271061ffff168261ffff16111561028b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610282906109a6565b60405180910390fd5b61271061ffff168161ffff1611156102d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cf90610a0e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508260075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760146101000a81548161ffff021916908361ffff16021790555080600760166101000a81548161ffff021916908361ffff16021790555050505050610a2c565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61047f82610456565b9050919050565b61048f81610475565b8114610499575f80fd5b50565b5f815190506104aa81610486565b92915050565b5f61ffff82169050919050565b6104c6816104b0565b81146104d0575f80fd5b50565b5f815190506104e1816104bd565b92915050565b5f805f80608085870312156104ff576104fe610452565b5b5f61050c8782880161049c565b945050602061051d8782880161049c565b935050604061052e878288016104d3565b925050606061053f878288016104d3565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105c657607f821691505b6020821081036105d9576105d8610582565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261063b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610600565b6106458683610600565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61068961068461067f8461065d565b610666565b61065d565b9050919050565b5f819050919050565b6106a28361066f565b6106b66106ae82610690565b84845461060c565b825550505050565b5f90565b6106ca6106be565b6106d5818484610699565b505050565b5b818110156106f8576106ed5f826106c2565b6001810190506106db565b5050565b601f82111561073d5761070e816105df565b610717846105f1565b81016020851015610726578190505b61073a610732856105f1565b8301826106da565b50505b505050565b5f82821c905092915050565b5f61075d5f1984600802610742565b1980831691505092915050565b5f610775838361074e565b9150826002028217905092915050565b61078e8261054b565b67ffffffffffffffff8111156107a7576107a6610555565b5b6107b182546105af565b6107bc8282856106fc565b5f60209050601f8311600181146107ed575f84156107db578287015190505b6107e5858261076a565b86555061084c565b601f1984166107fb866105df565b5f5b82811015610822578489015182556001820191506020850194506020810190506107fd565b8683101561083f578489015161083b601f89168261074e565b8355505b6001600288020188555050505b505050505050565b61085d81610475565b82525050565b5f6020820190506108765f830184610854565b92915050565b5f82825260208201905092915050565b7f496e76616c6964204355534420616464726573730000000000000000000000005f82015250565b5f6108c060148361087c565b91506108cb8261088c565b602082019050919050565b5f6020820190508181035f8301526108ed816108b4565b9050919050565b7f496e76616c6964207472656173757279000000000000000000000000000000005f82015250565b5f61092860108361087c565b9150610933826108f4565b602082019050919050565b5f6020820190508181035f8301526109558161091c565b9050919050565b7f4d696e742066656520746f6f20686967680000000000000000000000000000005f82015250565b5f61099060118361087c565b915061099b8261095c565b602082019050919050565b5f6020820190508181035f8301526109bd81610984565b9050919050565b7f52656465656d2066656520746f6f2068696768000000000000000000000000005f82015250565b5f6109f860138361087c565b9150610a03826109c4565b602082019050919050565b5f6020820190508181035f830152610a25816109ec565b9050919050565b608051612341610a595f395f818161053f0152818161090701528181610af20152610b6601526123415ff3fe608060405234801561000f575f80fd5b5060043610610171575f3560e01c8063715018a6116100dc578063a0712d6811610095578063dd62ed3e1161006f578063dd62ed3e146103f1578063f0f4426014610421578063f2fde38b1461043d578063fd967f471461045957610171565b8063a0712d6814610389578063a9059cbb146103a5578063db006a75146103d557610171565b8063715018a6146102ff5780638456cb59146103095780638da5cb5b1461031357806395d89b411461033157806397c8bcc11461034f5780639ef833d41461036d57610171565b8063313ce5671161012e578063313ce5671461024d57806332cb6b0c1461026b5780633f4ba83a146102895780635c975abb1461029357806361d027b3146102b157806370a08231146102cf57610171565b806306fdde0314610175578063095ea7b31461019357806309f6442c146101c35780630c577bdc146101e157806318160ddd146101ff57806323b872dd1461021d575b5f80fd5b61017d610477565b60405161018a919061198e565b60405180910390f35b6101ad60048036038101906101a89190611a3f565b610507565b6040516101ba9190611a97565b60405180910390f35b6101cb610529565b6040516101d89190611acc565b60405180910390f35b6101e961053d565b6040516101f69190611b40565b60405180910390f35b610207610561565b6040516102149190611b68565b60405180910390f35b61023760048036038101906102329190611b81565b61056a565b6040516102449190611a97565b60405180910390f35b610255610598565b6040516102629190611bec565b60405180910390f35b6102736105a0565b6040516102809190611b68565b60405180910390f35b6102916105b0565b005b61029b6105c2565b6040516102a89190611a97565b60405180910390f35b6102b96105d8565b6040516102c69190611c14565b60405180910390f35b6102e960048036038101906102e49190611c2d565b6105fd565b6040516102f69190611b68565b60405180910390f35b610307610642565b005b610311610655565b005b61031b610667565b6040516103289190611c14565b60405180910390f35b61033961068f565b604051610346919061198e565b60405180910390f35b61035761071f565b6040516103649190611acc565b60405180910390f35b61038760048036038101906103829190611c82565b610733565b005b6103a3600480360381019061039e9190611cc0565b61084c565b005b6103bf60048036038101906103ba9190611a3f565b610a2a565b6040516103cc9190611a97565b60405180910390f35b6103ef60048036038101906103ea9190611cc0565b610a4c565b005b61040b60048036038101906104069190611ceb565b610c0a565b6040516104189190611b68565b60405180910390f35b61043b60048036038101906104369190611c2d565b610c8c565b005b61045760048036038101906104529190611c2d565b610d7c565b005b610461610e00565b60405161046e9190611acc565b60405180910390f35b60606003805461048690611d56565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290611d56565b80156104fd5780601f106104d4576101008083540402835291602001916104fd565b820191905f5260205f20905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b5f80610511610e06565b905061051e818585610e0d565b600191505092915050565b600760169054906101000a900461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b5f80610574610e06565b9050610581858285610e1f565b61058c858585610eb1565b60019150509392505050565b5f6012905090565b6b033b2e3c9fd0803ce800000081565b6105b8610fa1565b6105c0611028565b565b5f600560149054906101000a900460ff16905090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61064a610fa1565b6106535f61108a565b565b61065d610fa1565b61066561114d565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069e90611d56565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca90611d56565b80156107155780601f106106ec57610100808354040283529160200191610715565b820191905f5260205f20905b8154815290600101906020018083116106f857829003601f168201915b5050505050905090565b600760149054906101000a900461ffff1681565b61073b610fa1565b61271061ffff168261ffff161115610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90611dd0565b60405180910390fd5b61271061ffff168161ffff1611156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90611e38565b60405180910390fd5b81600760146101000a81548161ffff021916908361ffff16021790555080600760166101000a81548161ffff021916908361ffff1602179055507f2ac80c14c28700f7b5e36f947d572149fe2e3947bac32c3a8c098f3e03722c118282604051610840929190611e56565b60405180910390a15050565b6108546111b0565b61085c6111fa565b5f811161089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089590611ec7565b60405180910390fd5b6b033b2e3c9fd0803ce8000000816108b4610561565b6108be9190611f12565b11156108ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f690611f8f565b60405180910390fd5b61094c3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611249909392919063ffffffff16565b5f61271061ffff16600760149054906101000a900461ffff1661ffff16836109749190611fad565b61097e919061201b565b90505f818361098d919061204b565b905061099933826112cb565b5f8211156109cd576109cc60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836112cb565b5b3373ffffffffffffffffffffffffffffffffffffffff167f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff8284604051610a1592919061207e565b60405180910390a25050610a2761134a565b50565b5f80610a34610e06565b9050610a41818585610eb1565b600191505092915050565b610a546111b0565b610a5c6111fa565b5f8111610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611ec7565b60405180910390fd5b5f61271061ffff16600760169054906101000a900461ffff1661ffff1683610ac69190611fad565b610ad0919061201b565b90505f8183610adf919061204b565b9050610aeb3384611354565b610b3633827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113d39092919063ffffffff16565b5f821115610bab57610baa60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113d39092919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167f484c40561359f3e3b8be9101897f8680aa82fbe1df9fd9038e0dbc6284032646848385604051610bf5939291906120a5565b60405180910390a25050610c0761134a565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c94610fa1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf990612124565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d181604051610d719190611c14565b60405180910390a150565b610d84610fa1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610df4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610deb9190611c14565b60405180910390fd5b610dfd8161108a565b50565b61271081565b5f33905090565b610e1a8383836001611452565b505050565b5f610e2a8484610c0a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610eab5781811015610e9c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e9393929190612142565b60405180910390fd5b610eaa84848484035f611452565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f21575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f189190611c14565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f91575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f889190611c14565b60405180910390fd5b610f9c838383611621565b505050565b610fa9610e06565b73ffffffffffffffffffffffffffffffffffffffff16610fc7610667565b73ffffffffffffffffffffffffffffffffffffffff161461102657610fea610e06565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161101d9190611c14565b60405180910390fd5b565b61103061183a565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611073610e06565b6040516110809190611c14565b60405180910390a1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111556111b0565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611199610e06565b6040516111a69190611c14565b60405180910390a1565b6111b86105c2565b156111f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ef906121c1565b60405180910390fd5b565b60026006540361123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123690612229565b60405180910390fd5b6002600681905550565b6112c5848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161127e93929190612247565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611883565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361133b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113329190611c14565b60405180910390fd5b6113465f8383611621565b5050565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113c4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113bb9190611c14565b60405180910390fd5b6113cf825f83611621565b5050565b61144d838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161140692919061227c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611883565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114c2575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114b99190611c14565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611532575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115299190611c14565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561161b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116129190611b68565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611671578060025f8282546116659190611f12565b9250508190555061173f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116fa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116f193929190612142565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611786578060025f82825403925050819055506117d0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161182d9190611b68565b60405180910390a3505050565b6118426105c2565b611881576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611878906122ed565b60405180910390fd5b565b5f8060205f8451602086015f885af1806118a2576040513d5f823e3d81fd5b3d92505f519150505f82146118bb5760018114156118d6565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561191857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161190f9190611c14565b60405180910390fd5b50505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119608261191e565b61196a8185611928565b935061197a818560208601611938565b61198381611946565b840191505092915050565b5f6020820190508181035f8301526119a68184611956565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119db826119b2565b9050919050565b6119eb816119d1565b81146119f5575f80fd5b50565b5f81359050611a06816119e2565b92915050565b5f819050919050565b611a1e81611a0c565b8114611a28575f80fd5b50565b5f81359050611a3981611a15565b92915050565b5f8060408385031215611a5557611a546119ae565b5b5f611a62858286016119f8565b9250506020611a7385828601611a2b565b9150509250929050565b5f8115159050919050565b611a9181611a7d565b82525050565b5f602082019050611aaa5f830184611a88565b92915050565b5f61ffff82169050919050565b611ac681611ab0565b82525050565b5f602082019050611adf5f830184611abd565b92915050565b5f819050919050565b5f611b08611b03611afe846119b2565b611ae5565b6119b2565b9050919050565b5f611b1982611aee565b9050919050565b5f611b2a82611b0f565b9050919050565b611b3a81611b20565b82525050565b5f602082019050611b535f830184611b31565b92915050565b611b6281611a0c565b82525050565b5f602082019050611b7b5f830184611b59565b92915050565b5f805f60608486031215611b9857611b976119ae565b5b5f611ba5868287016119f8565b9350506020611bb6868287016119f8565b9250506040611bc786828701611a2b565b9150509250925092565b5f60ff82169050919050565b611be681611bd1565b82525050565b5f602082019050611bff5f830184611bdd565b92915050565b611c0e816119d1565b82525050565b5f602082019050611c275f830184611c05565b92915050565b5f60208284031215611c4257611c416119ae565b5b5f611c4f848285016119f8565b91505092915050565b611c6181611ab0565b8114611c6b575f80fd5b50565b5f81359050611c7c81611c58565b92915050565b5f8060408385031215611c9857611c976119ae565b5b5f611ca585828601611c6e565b9250506020611cb685828601611c6e565b9150509250929050565b5f60208284031215611cd557611cd46119ae565b5b5f611ce284828501611a2b565b91505092915050565b5f8060408385031215611d0157611d006119ae565b5b5f611d0e858286016119f8565b9250506020611d1f858286016119f8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611d6d57607f821691505b602082108103611d8057611d7f611d29565b5b50919050565b7f4d696e742066656520746f6f20686967680000000000000000000000000000005f82015250565b5f611dba601183611928565b9150611dc582611d86565b602082019050919050565b5f6020820190508181035f830152611de781611dae565b9050919050565b7f52656465656d2066656520746f6f2068696768000000000000000000000000005f82015250565b5f611e22601383611928565b9150611e2d82611dee565b602082019050919050565b5f6020820190508181035f830152611e4f81611e16565b9050919050565b5f604082019050611e695f830185611abd565b611e766020830184611abd565b9392505050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611eb1601283611928565b9150611ebc82611e7d565b602082019050919050565b5f6020820190508181035f830152611ede81611ea5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f1c82611a0c565b9150611f2783611a0c565b9250828201905080821115611f3f57611f3e611ee5565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f611f79601283611928565b9150611f8482611f45565b602082019050919050565b5f6020820190508181035f830152611fa681611f6d565b9050919050565b5f611fb782611a0c565b9150611fc283611a0c565b9250828202611fd081611a0c565b91508282048414831517611fe757611fe6611ee5565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61202582611a0c565b915061203083611a0c565b9250826120405761203f611fee565b5b828204905092915050565b5f61205582611a0c565b915061206083611a0c565b925082820390508181111561207857612077611ee5565b5b92915050565b5f6040820190506120915f830185611b59565b61209e6020830184611b59565b9392505050565b5f6060820190506120b85f830186611b59565b6120c56020830185611b59565b6120d26040830184611b59565b949350505050565b7f496e76616c6964207472656173757279000000000000000000000000000000005f82015250565b5f61210e601083611928565b9150612119826120da565b602082019050919050565b5f6020820190508181035f83015261213b81612102565b9050919050565b5f6060820190506121555f830186611c05565b6121626020830185611b59565b61216f6040830184611b59565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6121ab601083611928565b91506121b682612177565b602082019050919050565b5f6020820190508181035f8301526121d88161219f565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612213601f83611928565b915061221e826121df565b602082019050919050565b5f6020820190508181035f83015261224081612207565b9050919050565b5f60608201905061225a5f830186611c05565b6122676020830185611c05565b6122746040830184611b59565b949350505050565b5f60408201905061228f5f830185611c05565b61229c6020830184611b59565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6122d7601483611928565b91506122e2826122a3565b602082019050919050565b5f6020820190508181035f830152612304816122cb565b905091905056fea264697066735822122078a243665dadd9c7bff54dc5b192d101192b6720b707f1b847b4dd41c79c7d8a64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D9A CODESIZE SUB DUP1 PUSH2 0x2D9A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5061646920546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5041444900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x38F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0xA2C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x47F DUP3 PUSH2 0x456 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48F DUP2 PUSH2 0x475 JUMP JUMPDEST DUP2 EQ PUSH2 0x499 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AA DUP2 PUSH2 0x486 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 DUP2 PUSH2 0x4B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E1 DUP2 PUSH2 0x4BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4FF JUMPI PUSH2 0x4FE PUSH2 0x452 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x50C DUP8 DUP3 DUP9 ADD PUSH2 0x49C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x51D DUP8 DUP3 DUP9 ADD PUSH2 0x49C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x52E DUP8 DUP3 DUP9 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x53F DUP8 DUP3 DUP9 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x582 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x63B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x645 DUP7 DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x689 PUSH2 0x684 PUSH2 0x67F DUP5 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A2 DUP4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0x6AE DUP3 PUSH2 0x690 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x60C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x6D5 DUP2 DUP5 DUP5 PUSH2 0x699 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F8 JUMPI PUSH2 0x6ED PUSH0 DUP3 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x73D JUMPI PUSH2 0x70E DUP2 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x717 DUP5 PUSH2 0x5F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x726 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x73A PUSH2 0x732 DUP6 PUSH2 0x5F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6DA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x742 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x775 DUP4 DUP4 PUSH2 0x74E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x78E DUP3 PUSH2 0x54B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A6 PUSH2 0x555 JUMP JUMPDEST JUMPDEST PUSH2 0x7B1 DUP3 SLOAD PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x7BC DUP3 DUP3 DUP6 PUSH2 0x6FC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7ED JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7DB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7E5 DUP6 DUP3 PUSH2 0x76A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7FB DUP7 PUSH2 0x5DF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x822 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x83F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x83B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x74E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0x475 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x876 PUSH0 DUP4 ADD DUP5 PUSH2 0x854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420435553442061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8C0 PUSH1 0x14 DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0x8CB DUP3 PUSH2 0x88C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8ED DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420747265617375727900000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x928 PUSH1 0x10 DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0x933 DUP3 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x955 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E742066656520746F6F2068696768000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x990 PUSH1 0x11 DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0x99B DUP3 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9BD DUP2 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52656465656D2066656520746F6F206869676800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9F8 PUSH1 0x13 DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xA03 DUP3 PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA25 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2341 PUSH2 0xA59 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x53F ADD MSTORE DUP2 DUP2 PUSH2 0x907 ADD MSTORE DUP2 DUP2 PUSH2 0xAF2 ADD MSTORE PUSH2 0xB66 ADD MSTORE PUSH2 0x2341 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0x459 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x3D5 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x97C8BCC1 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x9EF833D4 EQ PUSH2 0x36D JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CF JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x9F6442C EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xC577BDC EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x642 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH2 0x655 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0x667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x461 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x511 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH2 0x51E DUP2 DUP6 DUP6 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x574 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH2 0x581 DUP6 DUP3 DUP6 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x58C DUP6 DUP6 DUP6 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x1028 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64A PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x653 PUSH0 PUSH2 0x108A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x65D PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x665 PUSH2 0x114D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x715 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x715 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x73B PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2AC80C14C28700F7B5E36F947D572149FE2E3947BAC32C3A8C098F3E03722C11 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x840 SWAP3 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x854 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x85C PUSH2 0x11FA JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 PUSH2 0x8B4 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST GT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F6 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94C CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1249 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xFFFF AND PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x201B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP PUSH2 0x999 CALLER DUP3 PUSH2 0x12CB JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x9CD JUMPI PUSH2 0x9CC PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x12CB JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25B428DFDE728CCFADDAD7E29E4AC23C24ED7FD1A6E3E3F91894A9A073F5DFFF DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA15 SWAP3 SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xA27 PUSH2 0x134A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA34 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH2 0xA41 DUP2 DUP6 DUP6 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0xA5C PUSH2 0x11FA JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xFFFF AND PUSH1 0x7 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x201B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP PUSH2 0xAEB CALLER DUP5 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xB36 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBAA PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x484C40561359F3E3B8BE9101897F8680AA82FBE1DF9FD9038E0DBC6284032646 DUP5 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xC07 PUSH2 0x134A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC94 PUSH2 0xFA1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF9 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD71 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xD84 PUSH2 0xFA1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0x108A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE1A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1452 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE2A DUP5 DUP5 PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEAB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE9C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1452 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF21 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF91 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9C DUP4 DUP4 DUP4 PUSH2 0x1621 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFA9 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC7 PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1026 JUMPI PUSH2 0xFEA PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x183A JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1073 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1155 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1199 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A6 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x11B8 PUSH2 0x5C2 JUMP JUMPDEST ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1236 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x12C5 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x127E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1883 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1346 PUSH0 DUP4 DUP4 PUSH2 0x1621 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CF DUP3 PUSH0 DUP4 PUSH2 0x1621 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x144D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1406 SWAP3 SWAP2 SWAP1 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1883 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1532 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x161B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1612 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1671 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1665 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x173F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16FA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1786 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17D0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x182D SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1842 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x18BB JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x18D6 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1918 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1960 DUP3 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x196A DUP2 DUP6 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP PUSH2 0x197A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1983 DUP2 PUSH2 0x1946 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A6 DUP2 DUP5 PUSH2 0x1956 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DB DUP3 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EB DUP2 PUSH2 0x19D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A06 DUP2 PUSH2 0x19E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A39 DUP2 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A62 DUP6 DUP3 DUP7 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A73 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAA PUSH0 DUP4 ADD DUP5 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ADF PUSH0 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B08 PUSH2 0x1B03 PUSH2 0x1AFE DUP5 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B19 DUP3 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2A DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3A DUP2 PUSH2 0x1B20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B53 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7B PUSH0 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B97 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA5 DUP7 DUP3 DUP8 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BB6 DUP7 DUP3 DUP8 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BC7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE6 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BFF PUSH0 DUP4 ADD DUP5 PUSH2 0x1BDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C0E DUP2 PUSH2 0x19D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C27 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4F DUP5 DUP3 DUP6 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C61 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7C DUP2 PUSH2 0x1C58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C98 JUMPI PUSH2 0x1C97 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA5 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1D00 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0E DUP6 DUP3 DUP7 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1F DUP6 DUP3 DUP7 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D6D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D80 JUMPI PUSH2 0x1D7F PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E742066656520746F6F2068696768000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBA PUSH1 0x11 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC5 DUP3 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE7 DUP2 PUSH2 0x1DAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52656465656D2066656520746F6F206869676800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E22 PUSH1 0x13 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2D DUP3 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4F DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E69 PUSH0 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1E76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB1 PUSH1 0x12 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBC DUP3 PUSH2 0x1E7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDE DUP2 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F1C DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F3F JUMPI PUSH2 0x1F3E PUSH2 0x1EE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F79 PUSH1 0x12 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB7 DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FD0 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FE7 JUMPI PUSH2 0x1FE6 PUSH2 0x1EE5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2025 DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x2030 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2055 DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x2060 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2078 JUMPI PUSH2 0x2077 PUSH2 0x1EE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2091 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x209E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20B8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x20C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x20D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420747265617375727900000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x210E PUSH1 0x10 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x2119 DUP3 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x213B DUP2 PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2155 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x2162 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x216F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21AB PUSH1 0x10 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B6 DUP3 PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D8 DUP2 PUSH2 0x219F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2213 PUSH1 0x1F DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x221E DUP3 PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2240 DUP2 PUSH2 0x2207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x225A PUSH0 DUP4 ADD DUP7 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x2267 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x2274 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228F PUSH0 DUP4 ADD DUP6 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x229C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22D7 PUSH1 0x14 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E2 DUP3 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2304 DUP2 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xA243665DADD9C7BFF54DC5B192D101192B6720B707F1B847B4 0xDD COINBASE 0xC7 SWAP13 PUSH30 0x8A64736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "607:4839:13:-:0;;;2104:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2272:10;1601:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:5;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:6;1821:7;:22;;;;2335:1:13::2;2311:26;;:12;:26;;::::0;2303:59:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2401:1;2380:23;;:9;:23;;::::0;2372:52:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;969:6;2442:22;;:11;:22;;;;2434:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;969:6;2504:24;;:13;:24;;;;2496:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2577:12;2563:27;;;;;;;;::::0;::::2;2611:9;2600:8;;:20;;;;;;;;;;;;;;;;;;2643:11;2630:10;;:24;;;;;;;;;;;;;;;;;;2679:13;2664:12;;:28;;;;;;;;;;;;;;;;;;2104:595:::0;;;;607:4839;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:89::-;881:7;921:6;914:5;910:18;899:29;;845:89;;;:::o;940:120::-;1012:23;1029:5;1012:23;:::i;:::-;1005:5;1002:34;992:62;;1050:1;1047;1040:12;992:62;940:120;:::o;1066:141::-;1122:5;1153:6;1147:13;1138:22;;1169:32;1195:5;1169:32;:::i;:::-;1066:141;;;;:::o;1213:816::-;1308:6;1316;1324;1332;1381:3;1369:9;1360:7;1356:23;1352:33;1349:120;;;1388:79;;:::i;:::-;1349:120;1508:1;1533:64;1589:7;1580:6;1569:9;1565:22;1533:64;:::i;:::-;1523:74;;1479:128;1646:2;1672:64;1728:7;1719:6;1708:9;1704:22;1672:64;:::i;:::-;1662:74;;1617:129;1785:2;1811:63;1866:7;1857:6;1846:9;1842:22;1811:63;:::i;:::-;1801:73;;1756:128;1923:2;1949:63;2004:7;1995:6;1984:9;1980:22;1949:63;:::i;:::-;1939:73;;1894:128;1213:816;;;;;;;:::o;2035:99::-;2087:6;2121:5;2115:12;2105:22;;2035:99;;;:::o;2140:180::-;2188:77;2185:1;2178:88;2285:4;2282:1;2275:15;2309:4;2306:1;2299:15;2326:180;2374:77;2371:1;2364:88;2471:4;2468:1;2461:15;2495:4;2492:1;2485:15;2512:320;2556:6;2593:1;2587:4;2583:12;2573:22;;2640:1;2634:4;2630:12;2661:18;2651:81;;2717:4;2709:6;2705:17;2695:27;;2651:81;2779:2;2771:6;2768:14;2748:18;2745:38;2742:84;;2798:18;;:::i;:::-;2742:84;2563:269;2512:320;;;:::o;2838:141::-;2887:4;2910:3;2902:11;;2933:3;2930:1;2923:14;2967:4;2964:1;2954:18;2946:26;;2838:141;;;:::o;2985:93::-;3022:6;3069:2;3064;3057:5;3053:14;3049:23;3039:33;;2985:93;;;:::o;3084:107::-;3128:8;3178:5;3172:4;3168:16;3147:37;;3084:107;;;;:::o;3197:393::-;3266:6;3316:1;3304:10;3300:18;3339:97;3369:66;3358:9;3339:97;:::i;:::-;3457:39;3487:8;3476:9;3457:39;:::i;:::-;3445:51;;3529:4;3525:9;3518:5;3514:21;3505:30;;3578:4;3568:8;3564:19;3557:5;3554:30;3544:40;;3273:317;;3197:393;;;;;:::o;3596:77::-;3633:7;3662:5;3651:16;;3596:77;;;:::o;3679:60::-;3707:3;3728:5;3721:12;;3679:60;;;:::o;3745:142::-;3795:9;3828:53;3846:34;3855:24;3873:5;3855:24;:::i;:::-;3846:34;:::i;:::-;3828:53;:::i;:::-;3815:66;;3745:142;;;:::o;3893:75::-;3936:3;3957:5;3950:12;;3893:75;;;:::o;3974:269::-;4084:39;4115:7;4084:39;:::i;:::-;4145:91;4194:41;4218:16;4194:41;:::i;:::-;4186:6;4179:4;4173:11;4145:91;:::i;:::-;4139:4;4132:105;4050:193;3974:269;;;:::o;4249:73::-;4294:3;4249:73;:::o;4328:189::-;4405:32;;:::i;:::-;4446:65;4504:6;4496;4490:4;4446:65;:::i;:::-;4381:136;4328:189;;:::o;4523:186::-;4583:120;4600:3;4593:5;4590:14;4583:120;;;4654:39;4691:1;4684:5;4654:39;:::i;:::-;4627:1;4620:5;4616:13;4607:22;;4583:120;;;4523:186;;:::o;4715:543::-;4816:2;4811:3;4808:11;4805:446;;;4850:38;4882:5;4850:38;:::i;:::-;4934:29;4952:10;4934:29;:::i;:::-;4924:8;4920:44;5117:2;5105:10;5102:18;5099:49;;;5138:8;5123:23;;5099:49;5161:80;5217:22;5235:3;5217:22;:::i;:::-;5207:8;5203:37;5190:11;5161:80;:::i;:::-;4820:431;;4805:446;4715:543;;;:::o;5264:117::-;5318:8;5368:5;5362:4;5358:16;5337:37;;5264:117;;;;:::o;5387:169::-;5431:6;5464:51;5512:1;5508:6;5500:5;5497:1;5493:13;5464:51;:::i;:::-;5460:56;5545:4;5539;5535:15;5525:25;;5438:118;5387:169;;;;:::o;5561:295::-;5637:4;5783:29;5808:3;5802:4;5783:29;:::i;:::-;5775:37;;5845:3;5842:1;5838:11;5832:4;5829:21;5821:29;;5561:295;;;;:::o;5861:1395::-;5978:37;6011:3;5978:37;:::i;:::-;6080:18;6072:6;6069:30;6066:56;;;6102:18;;:::i;:::-;6066:56;6146:38;6178:4;6172:11;6146:38;:::i;:::-;6231:67;6291:6;6283;6277:4;6231:67;:::i;:::-;6325:1;6349:4;6336:17;;6381:2;6373:6;6370:14;6398:1;6393:618;;;;7055:1;7072:6;7069:77;;;7121:9;7116:3;7112:19;7106:26;7097:35;;7069:77;7172:67;7232:6;7225:5;7172:67;:::i;:::-;7166:4;7159:81;7028:222;6363:887;;6393:618;6445:4;6441:9;6433:6;6429:22;6479:37;6511:4;6479:37;:::i;:::-;6538:1;6552:208;6566:7;6563:1;6560:14;6552:208;;;6645:9;6640:3;6636:19;6630:26;6622:6;6615:42;6696:1;6688:6;6684:14;6674:24;;6743:2;6732:9;6728:18;6715:31;;6589:4;6586:1;6582:12;6577:17;;6552:208;;;6788:6;6779:7;6776:19;6773:179;;;6846:9;6841:3;6837:19;6831:26;6889:48;6931:4;6923:6;6919:17;6908:9;6889:48;:::i;:::-;6881:6;6874:64;6796:156;6773:179;6998:1;6994;6986:6;6982:14;6978:22;6972:4;6965:36;6400:611;;;6363:887;;5953:1303;;;5861:1395;;:::o;7262:118::-;7349:24;7367:5;7349:24;:::i;:::-;7344:3;7337:37;7262:118;;:::o;7386:222::-;7479:4;7517:2;7506:9;7502:18;7494:26;;7530:71;7598:1;7587:9;7583:17;7574:6;7530:71;:::i;:::-;7386:222;;;;:::o;7614:169::-;7698:11;7732:6;7727:3;7720:19;7772:4;7767:3;7763:14;7748:29;;7614:169;;;;:::o;7789:170::-;7929:22;7925:1;7917:6;7913:14;7906:46;7789:170;:::o;7965:366::-;8107:3;8128:67;8192:2;8187:3;8128:67;:::i;:::-;8121:74;;8204:93;8293:3;8204:93;:::i;:::-;8322:2;8317:3;8313:12;8306:19;;7965:366;;;:::o;8337:419::-;8503:4;8541:2;8530:9;8526:18;8518:26;;8590:9;8584:4;8580:20;8576:1;8565:9;8561:17;8554:47;8618:131;8744:4;8618:131;:::i;:::-;8610:139;;8337:419;;;:::o;8762:166::-;8902:18;8898:1;8890:6;8886:14;8879:42;8762:166;:::o;8934:366::-;9076:3;9097:67;9161:2;9156:3;9097:67;:::i;:::-;9090:74;;9173:93;9262:3;9173:93;:::i;:::-;9291:2;9286:3;9282:12;9275:19;;8934:366;;;:::o;9306:419::-;9472:4;9510:2;9499:9;9495:18;9487:26;;9559:9;9553:4;9549:20;9545:1;9534:9;9530:17;9523:47;9587:131;9713:4;9587:131;:::i;:::-;9579:139;;9306:419;;;:::o;9731:167::-;9871:19;9867:1;9859:6;9855:14;9848:43;9731:167;:::o;9904:366::-;10046:3;10067:67;10131:2;10126:3;10067:67;:::i;:::-;10060:74;;10143:93;10232:3;10143:93;:::i;:::-;10261:2;10256:3;10252:12;10245:19;;9904:366;;;:::o;10276:419::-;10442:4;10480:2;10469:9;10465:18;10457:26;;10529:9;10523:4;10519:20;10515:1;10504:9;10500:17;10493:47;10557:131;10683:4;10557:131;:::i;:::-;10549:139;;10276:419;;;:::o;10701:169::-;10841:21;10837:1;10829:6;10825:14;10818:45;10701:169;:::o;10876:366::-;11018:3;11039:67;11103:2;11098:3;11039:67;:::i;:::-;11032:74;;11115:93;11204:3;11115:93;:::i;:::-;11233:2;11228:3;11224:12;11217:19;;10876:366;;;:::o;11248:419::-;11414:4;11452:2;11441:9;11437:18;11429:26;;11501:9;11495:4;11491:20;11487:1;11476:9;11472:17;11465:47;11529:131;11655:4;11529:131;:::i;:::-;11521:139;;11248:419;;;:::o;607:4839:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_BPS_1648": {
									"entryPoint": 3584,
									"id": 1648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_1662": {
									"entryPoint": 1440,
									"id": 1662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1013": {
									"entryPoint": 5202,
									"id": 1013,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_953": {
									"entryPoint": 3597,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_935": {
									"entryPoint": 4948,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1533": {
									"entryPoint": 6275,
									"id": 1533,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4001,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_902": {
									"entryPoint": 4811,
									"id": 902,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1587": {
									"entryPoint": 3590,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_535": {
									"entryPoint": 4938,
									"id": 535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_527": {
									"entryPoint": 4602,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_465": {
									"entryPoint": 4429,
									"id": 465,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_438": {
									"entryPoint": 4528,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_449": {
									"entryPoint": 6202,
									"id": 449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1061": {
									"entryPoint": 3615,
									"id": 1061,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4234,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_792": {
									"entryPoint": 3761,
									"id": 792,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_481": {
									"entryPoint": 4136,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_869": {
									"entryPoint": 5665,
									"id": 869,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_689": {
									"entryPoint": 3082,
									"id": 689,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_713": {
									"entryPoint": 1287,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_648": {
									"entryPoint": 1533,
									"id": 648,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cusd_1641": {
									"entryPoint": 1341,
									"id": 1641,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_626": {
									"entryPoint": 1432,
									"id": 626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintFeeBps_1651": {
									"entryPoint": 1823,
									"id": 1651,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1910": {
									"entryPoint": 2124,
									"id": 1910,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_608": {
									"entryPoint": 1143,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1639,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1987": {
									"entryPoint": 1621,
									"id": 1987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_426": {
									"entryPoint": 1474,
									"id": 426,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redeemFeeBps_1654": {
									"entryPoint": 1321,
									"id": 1654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@redeem_1977": {
									"entryPoint": 2636,
									"id": 1977,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1602,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1238": {
									"entryPoint": 4681,
									"id": 1238,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1211": {
									"entryPoint": 5075,
									"id": 1211,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFees_1805": {
									"entryPoint": 1843,
									"id": 1805,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTreasury_1832": {
									"entryPoint": 3212,
									"id": 1832,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_617": {
									"entryPoint": 1679,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_635": {
									"entryPoint": 1377,
									"id": 635,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_745": {
									"entryPoint": 1386,
									"id": 745,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3452,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_672": {
									"entryPoint": 2602,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_1644": {
									"entryPoint": 1496,
									"id": 1644,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1997": {
									"entryPoint": 1456,
									"id": 1997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 7278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint16t_uint16": {
									"entryPoint": 7298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1140_to_t_address_fromStack": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8775,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1140__to_t_address__fromStack_reversed": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed": {
									"entryPoint": 7766,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1140_to_t_address": {
									"entryPoint": 6944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea": {
									"entryPoint": 8410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20365:14",
										"nodeType": "YulBlock",
										"src": "0:20365:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:14",
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nativeSrc": "77:22:14",
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nativeSrc": "87:12:14",
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:14",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:14",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nativeSrc": "208:73:14",
													"nodeType": "YulBlock",
													"src": "208:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:14"
																},
																"nativeSrc": "218:19:14",
																"nodeType": "YulFunctionCall",
																"src": "218:19:14"
															},
															"nativeSrc": "218:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:14"
														},
														{
															"nativeSrc": "246:29:14",
															"nodeType": "YulAssignment",
															"src": "246:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:14",
																		"nodeType": "YulLiteral",
																		"src": "270:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:14"
																},
																"nativeSrc": "261:14:14",
																"nodeType": "YulFunctionCall",
																"src": "261:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:14",
														"nodeType": "YulTypedName",
														"src": "180:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:14",
														"nodeType": "YulTypedName",
														"src": "185:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:14",
														"nodeType": "YulTypedName",
														"src": "196:11:14",
														"type": ""
													}
												],
												"src": "112:169:14"
											},
											{
												"body": {
													"nativeSrc": "349:77:14",
													"nodeType": "YulBlock",
													"src": "349:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:14"
																},
																"nativeSrc": "360:23:14",
																"nodeType": "YulFunctionCall",
																"src": "360:23:14"
															},
															"nativeSrc": "360:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:14"
																		},
																		"nativeSrc": "399:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:14",
																		"nodeType": "YulLiteral",
																		"src": "417:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:14"
																},
																"nativeSrc": "392:27:14",
																"nodeType": "YulFunctionCall",
																"src": "392:27:14"
															},
															"nativeSrc": "392:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:14",
														"nodeType": "YulTypedName",
														"src": "331:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:14",
														"nodeType": "YulTypedName",
														"src": "336:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:14",
														"nodeType": "YulTypedName",
														"src": "341:6:14",
														"type": ""
													}
												],
												"src": "287:139:14"
											},
											{
												"body": {
													"nativeSrc": "480:54:14",
													"nodeType": "YulBlock",
													"src": "480:54:14",
													"statements": [
														{
															"nativeSrc": "490:38:14",
															"nodeType": "YulAssignment",
															"src": "490:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:14",
																				"nodeType": "YulLiteral",
																				"src": "515:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:14"
																		},
																		"nativeSrc": "504:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:14",
																				"nodeType": "YulLiteral",
																				"src": "524:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:14"
																		},
																		"nativeSrc": "520:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:14"
																},
																"nativeSrc": "500:28:14",
																"nodeType": "YulFunctionCall",
																"src": "500:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:14",
														"nodeType": "YulTypedName",
														"src": "463:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:14",
														"nodeType": "YulTypedName",
														"src": "473:6:14",
														"type": ""
													}
												],
												"src": "432:102:14"
											},
											{
												"body": {
													"nativeSrc": "632:285:14",
													"nodeType": "YulBlock",
													"src": "632:285:14",
													"statements": [
														{
															"nativeSrc": "642:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:14"
																},
																"nativeSrc": "656:39:14",
																"nodeType": "YulFunctionCall",
																"src": "656:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:14",
																	"nodeType": "YulTypedName",
																	"src": "646:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:14",
															"nodeType": "YulAssignment",
															"src": "704:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:14"
																},
																"nativeSrc": "711:71:14",
																"nodeType": "YulFunctionCall",
																"src": "711:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:14",
																				"nodeType": "YulLiteral",
																				"src": "837:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:14"
																		},
																		"nativeSrc": "826:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:14"
																},
																"nativeSrc": "791:65:14",
																"nodeType": "YulFunctionCall",
																"src": "791:65:14"
															},
															"nativeSrc": "791:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:14"
														},
														{
															"nativeSrc": "865:46:14",
															"nodeType": "YulAssignment",
															"src": "865:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:14"
																		},
																		"nativeSrc": "881:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:14"
																},
																"nativeSrc": "872:39:14",
																"nodeType": "YulFunctionCall",
																"src": "872:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:14",
														"nodeType": "YulTypedName",
														"src": "613:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:14",
														"nodeType": "YulTypedName",
														"src": "620:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:14",
														"nodeType": "YulTypedName",
														"src": "628:3:14",
														"type": ""
													}
												],
												"src": "540:377:14"
											},
											{
												"body": {
													"nativeSrc": "1041:195:14",
													"nodeType": "YulBlock",
													"src": "1041:195:14",
													"statements": [
														{
															"nativeSrc": "1051:26:14",
															"nodeType": "YulAssignment",
															"src": "1051:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:14"
																},
																"nativeSrc": "1059:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:14"
																		},
																		"nativeSrc": "1094:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:14"
																		},
																		"nativeSrc": "1113:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:14"
																},
																"nativeSrc": "1087:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:14"
															},
															"nativeSrc": "1087:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:14"
														},
														{
															"nativeSrc": "1143:86:14",
															"nodeType": "YulAssignment",
															"src": "1143:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:14"
																},
																"nativeSrc": "1151:78:14",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:14",
														"nodeType": "YulTypedName",
														"src": "1013:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:14",
														"nodeType": "YulTypedName",
														"src": "1025:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:14",
														"nodeType": "YulTypedName",
														"src": "1036:4:14",
														"type": ""
													}
												],
												"src": "923:313:14"
											},
											{
												"body": {
													"nativeSrc": "1282:35:14",
													"nodeType": "YulBlock",
													"src": "1282:35:14",
													"statements": [
														{
															"nativeSrc": "1292:19:14",
															"nodeType": "YulAssignment",
															"src": "1292:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:14"
																},
																"nativeSrc": "1302:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:14",
														"nodeType": "YulTypedName",
														"src": "1275:6:14",
														"type": ""
													}
												],
												"src": "1242:75:14"
											},
											{
												"body": {
													"nativeSrc": "1412:28:14",
													"nodeType": "YulBlock",
													"src": "1412:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:14"
																},
																"nativeSrc": "1422:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:14"
															},
															"nativeSrc": "1422:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:14"
											},
											{
												"body": {
													"nativeSrc": "1535:28:14",
													"nodeType": "YulBlock",
													"src": "1535:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:14"
																},
																"nativeSrc": "1545:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:14"
															},
															"nativeSrc": "1545:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:14"
											},
											{
												"body": {
													"nativeSrc": "1614:81:14",
													"nodeType": "YulBlock",
													"src": "1614:81:14",
													"statements": [
														{
															"nativeSrc": "1624:65:14",
															"nodeType": "YulAssignment",
															"src": "1624:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:14",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:14"
																},
																"nativeSrc": "1635:54:14",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:14",
														"nodeType": "YulTypedName",
														"src": "1596:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:14",
														"nodeType": "YulTypedName",
														"src": "1606:7:14",
														"type": ""
													}
												],
												"src": "1569:126:14"
											},
											{
												"body": {
													"nativeSrc": "1746:51:14",
													"nodeType": "YulBlock",
													"src": "1746:51:14",
													"statements": [
														{
															"nativeSrc": "1756:35:14",
															"nodeType": "YulAssignment",
															"src": "1756:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:14"
																},
																"nativeSrc": "1767:24:14",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:14",
														"nodeType": "YulTypedName",
														"src": "1728:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:14",
														"nodeType": "YulTypedName",
														"src": "1738:7:14",
														"type": ""
													}
												],
												"src": "1701:96:14"
											},
											{
												"body": {
													"nativeSrc": "1846:79:14",
													"nodeType": "YulBlock",
													"src": "1846:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:14",
																"nodeType": "YulBlock",
																"src": "1903:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:14"
																			},
																			"nativeSrc": "1905:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:14"
																		},
																		"nativeSrc": "1905:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:14"
																				},
																				"nativeSrc": "1876:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:14"
																		},
																		"nativeSrc": "1866:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:14"
																},
																"nativeSrc": "1859:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:14"
															},
															"nativeSrc": "1856:63:14",
															"nodeType": "YulIf",
															"src": "1856:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:14",
														"nodeType": "YulTypedName",
														"src": "1839:5:14",
														"type": ""
													}
												],
												"src": "1803:122:14"
											},
											{
												"body": {
													"nativeSrc": "1983:87:14",
													"nodeType": "YulBlock",
													"src": "1983:87:14",
													"statements": [
														{
															"nativeSrc": "1993:29:14",
															"nodeType": "YulAssignment",
															"src": "1993:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:14"
																},
																"nativeSrc": "2002:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:14"
																},
																"nativeSrc": "2031:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:14"
															},
															"nativeSrc": "2031:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:14",
														"nodeType": "YulTypedName",
														"src": "1961:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:14",
														"nodeType": "YulTypedName",
														"src": "1969:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:14",
														"nodeType": "YulTypedName",
														"src": "1977:5:14",
														"type": ""
													}
												],
												"src": "1931:139:14"
											},
											{
												"body": {
													"nativeSrc": "2121:32:14",
													"nodeType": "YulBlock",
													"src": "2121:32:14",
													"statements": [
														{
															"nativeSrc": "2131:16:14",
															"nodeType": "YulAssignment",
															"src": "2131:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:14",
																"nodeType": "YulIdentifier",
																"src": "2142:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:14",
														"nodeType": "YulTypedName",
														"src": "2103:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:14",
														"nodeType": "YulTypedName",
														"src": "2113:7:14",
														"type": ""
													}
												],
												"src": "2076:77:14"
											},
											{
												"body": {
													"nativeSrc": "2202:79:14",
													"nodeType": "YulBlock",
													"src": "2202:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:14",
																"nodeType": "YulBlock",
																"src": "2259:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:14"
																			},
																			"nativeSrc": "2261:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:14"
																		},
																		"nativeSrc": "2261:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:14"
																				},
																				"nativeSrc": "2232:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:14"
																		},
																		"nativeSrc": "2222:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:14"
																},
																"nativeSrc": "2215:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:14"
															},
															"nativeSrc": "2212:63:14",
															"nodeType": "YulIf",
															"src": "2212:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:14",
														"nodeType": "YulTypedName",
														"src": "2195:5:14",
														"type": ""
													}
												],
												"src": "2159:122:14"
											},
											{
												"body": {
													"nativeSrc": "2339:87:14",
													"nodeType": "YulBlock",
													"src": "2339:87:14",
													"statements": [
														{
															"nativeSrc": "2349:29:14",
															"nodeType": "YulAssignment",
															"src": "2349:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:14"
																},
																"nativeSrc": "2358:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:14"
																},
																"nativeSrc": "2387:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:14"
															},
															"nativeSrc": "2387:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:14",
														"nodeType": "YulTypedName",
														"src": "2317:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:14",
														"nodeType": "YulTypedName",
														"src": "2325:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:14",
														"nodeType": "YulTypedName",
														"src": "2333:5:14",
														"type": ""
													}
												],
												"src": "2287:139:14"
											},
											{
												"body": {
													"nativeSrc": "2515:391:14",
													"nodeType": "YulBlock",
													"src": "2515:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:14",
																"nodeType": "YulBlock",
																"src": "2561:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:14"
																			},
																			"nativeSrc": "2563:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:14"
																		},
																		"nativeSrc": "2563:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:14"
																		},
																		"nativeSrc": "2532:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:14"
																},
																"nativeSrc": "2528:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:14"
															},
															"nativeSrc": "2525:119:14",
															"nodeType": "YulIf",
															"src": "2525:119:14"
														},
														{
															"nativeSrc": "2654:117:14",
															"nodeType": "YulBlock",
															"src": "2654:117:14",
															"statements": [
																{
																	"nativeSrc": "2669:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:14"
																				},
																				"nativeSrc": "2729:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:14"
																		},
																		"nativeSrc": "2708:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:14",
															"nodeType": "YulBlock",
															"src": "2781:118:14",
															"statements": [
																{
																	"nativeSrc": "2796:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:14"
																				},
																				"nativeSrc": "2857:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:14"
																		},
																		"nativeSrc": "2836:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:14",
														"nodeType": "YulTypedName",
														"src": "2477:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:14",
														"nodeType": "YulTypedName",
														"src": "2488:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:14",
														"nodeType": "YulTypedName",
														"src": "2500:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:14",
														"nodeType": "YulTypedName",
														"src": "2508:6:14",
														"type": ""
													}
												],
												"src": "2432:474:14"
											},
											{
												"body": {
													"nativeSrc": "2954:48:14",
													"nodeType": "YulBlock",
													"src": "2954:48:14",
													"statements": [
														{
															"nativeSrc": "2964:32:14",
															"nodeType": "YulAssignment",
															"src": "2964:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:14"
																		},
																		"nativeSrc": "2982:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:14"
																},
																"nativeSrc": "2975:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:14",
														"nodeType": "YulTypedName",
														"src": "2936:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:14",
														"nodeType": "YulTypedName",
														"src": "2946:7:14",
														"type": ""
													}
												],
												"src": "2912:90:14"
											},
											{
												"body": {
													"nativeSrc": "3067:50:14",
													"nodeType": "YulBlock",
													"src": "3067:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:14"
																		},
																		"nativeSrc": "3089:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:14"
																},
																"nativeSrc": "3077:34:14",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:14"
															},
															"nativeSrc": "3077:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:14",
														"nodeType": "YulTypedName",
														"src": "3055:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:14",
														"nodeType": "YulTypedName",
														"src": "3062:3:14",
														"type": ""
													}
												],
												"src": "3008:109:14"
											},
											{
												"body": {
													"nativeSrc": "3215:118:14",
													"nodeType": "YulBlock",
													"src": "3215:118:14",
													"statements": [
														{
															"nativeSrc": "3225:26:14",
															"nodeType": "YulAssignment",
															"src": "3225:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:14"
																},
																"nativeSrc": "3233:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:14"
																		},
																		"nativeSrc": "3308:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:14"
																},
																"nativeSrc": "3261:65:14",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:14"
															},
															"nativeSrc": "3261:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:14",
														"nodeType": "YulTypedName",
														"src": "3187:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:14",
														"nodeType": "YulTypedName",
														"src": "3199:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:14",
														"nodeType": "YulTypedName",
														"src": "3210:4:14",
														"type": ""
													}
												],
												"src": "3123:210:14"
											},
											{
												"body": {
													"nativeSrc": "3383:45:14",
													"nodeType": "YulBlock",
													"src": "3383:45:14",
													"statements": [
														{
															"nativeSrc": "3393:29:14",
															"nodeType": "YulAssignment",
															"src": "3393:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3408:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3408:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3415:6:14",
																		"nodeType": "YulLiteral",
																		"src": "3415:6:14",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3404:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:14"
																},
																"nativeSrc": "3404:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3404:18:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3393:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3393:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "3339:89:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3365:5:14",
														"nodeType": "YulTypedName",
														"src": "3365:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3375:7:14",
														"nodeType": "YulTypedName",
														"src": "3375:7:14",
														"type": ""
													}
												],
												"src": "3339:89:14"
											},
											{
												"body": {
													"nativeSrc": "3497:52:14",
													"nodeType": "YulBlock",
													"src": "3497:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3514:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3514:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3536:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3536:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "3519:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "3519:16:14"
																		},
																		"nativeSrc": "3519:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3519:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3507:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3507:6:14"
																},
																"nativeSrc": "3507:36:14",
																"nodeType": "YulFunctionCall",
																"src": "3507:36:14"
															},
															"nativeSrc": "3507:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "3507:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "3434:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3485:5:14",
														"nodeType": "YulTypedName",
														"src": "3485:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3492:3:14",
														"nodeType": "YulTypedName",
														"src": "3492:3:14",
														"type": ""
													}
												],
												"src": "3434:115:14"
											},
											{
												"body": {
													"nativeSrc": "3651:122:14",
													"nodeType": "YulBlock",
													"src": "3651:122:14",
													"statements": [
														{
															"nativeSrc": "3661:26:14",
															"nodeType": "YulAssignment",
															"src": "3661:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3673:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3673:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3684:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3684:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3669:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3669:3:14"
																},
																"nativeSrc": "3669:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3669:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3661:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3661:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3739:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3739:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3752:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3763:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3763:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3748:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:14"
																		},
																		"nativeSrc": "3748:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3748:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "3697:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "3697:41:14"
																},
																"nativeSrc": "3697:69:14",
																"nodeType": "YulFunctionCall",
																"src": "3697:69:14"
															},
															"nativeSrc": "3697:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "3697:69:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "3555:218:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3623:9:14",
														"nodeType": "YulTypedName",
														"src": "3623:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3635:6:14",
														"nodeType": "YulTypedName",
														"src": "3635:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3646:4:14",
														"nodeType": "YulTypedName",
														"src": "3646:4:14",
														"type": ""
													}
												],
												"src": "3555:218:14"
											},
											{
												"body": {
													"nativeSrc": "3811:28:14",
													"nodeType": "YulBlock",
													"src": "3811:28:14",
													"statements": [
														{
															"nativeSrc": "3821:12:14",
															"nodeType": "YulAssignment",
															"src": "3821:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "3828:5:14",
																"nodeType": "YulIdentifier",
																"src": "3828:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3821:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3821:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3779:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3797:5:14",
														"nodeType": "YulTypedName",
														"src": "3797:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3807:3:14",
														"nodeType": "YulTypedName",
														"src": "3807:3:14",
														"type": ""
													}
												],
												"src": "3779:60:14"
											},
											{
												"body": {
													"nativeSrc": "3905:82:14",
													"nodeType": "YulBlock",
													"src": "3905:82:14",
													"statements": [
														{
															"nativeSrc": "3915:66:14",
															"nodeType": "YulAssignment",
															"src": "3915:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3973:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3973:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3955:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3955:17:14"
																				},
																				"nativeSrc": "3955:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3955:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3946:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "3946:8:14"
																		},
																		"nativeSrc": "3946:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3946:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3928:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3928:17:14"
																},
																"nativeSrc": "3928:53:14",
																"nodeType": "YulFunctionCall",
																"src": "3928:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3915:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "3915:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3845:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3885:5:14",
														"nodeType": "YulTypedName",
														"src": "3885:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3895:9:14",
														"nodeType": "YulTypedName",
														"src": "3895:9:14",
														"type": ""
													}
												],
												"src": "3845:142:14"
											},
											{
												"body": {
													"nativeSrc": "4053:66:14",
													"nodeType": "YulBlock",
													"src": "4053:66:14",
													"statements": [
														{
															"nativeSrc": "4063:50:14",
															"nodeType": "YulAssignment",
															"src": "4063:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4107:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4107:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4076:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "4076:30:14"
																},
																"nativeSrc": "4076:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4076:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4063:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4063:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3993:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4033:5:14",
														"nodeType": "YulTypedName",
														"src": "4033:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4043:9:14",
														"nodeType": "YulTypedName",
														"src": "4043:9:14",
														"type": ""
													}
												],
												"src": "3993:126:14"
											},
											{
												"body": {
													"nativeSrc": "4200:66:14",
													"nodeType": "YulBlock",
													"src": "4200:66:14",
													"statements": [
														{
															"nativeSrc": "4210:50:14",
															"nodeType": "YulAssignment",
															"src": "4210:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4254:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4254:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4223:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "4223:30:14"
																},
																"nativeSrc": "4223:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4223:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4210:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4210:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1140_to_t_address",
												"nativeSrc": "4125:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4180:5:14",
														"nodeType": "YulTypedName",
														"src": "4180:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4190:9:14",
														"nodeType": "YulTypedName",
														"src": "4190:9:14",
														"type": ""
													}
												],
												"src": "4125:141:14"
											},
											{
												"body": {
													"nativeSrc": "4352:81:14",
													"nodeType": "YulBlock",
													"src": "4352:81:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4369:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4369:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4420:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4420:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1140_to_t_address",
																			"nativeSrc": "4374:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "4374:45:14"
																		},
																		"nativeSrc": "4374:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4374:52:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4362:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4362:6:14"
																},
																"nativeSrc": "4362:65:14",
																"nodeType": "YulFunctionCall",
																"src": "4362:65:14"
															},
															"nativeSrc": "4362:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "4362:65:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1140_to_t_address_fromStack",
												"nativeSrc": "4272:161:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4340:5:14",
														"nodeType": "YulTypedName",
														"src": "4340:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4347:3:14",
														"nodeType": "YulTypedName",
														"src": "4347:3:14",
														"type": ""
													}
												],
												"src": "4272:161:14"
											},
											{
												"body": {
													"nativeSrc": "4552:139:14",
													"nodeType": "YulBlock",
													"src": "4552:139:14",
													"statements": [
														{
															"nativeSrc": "4562:26:14",
															"nodeType": "YulAssignment",
															"src": "4562:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4574:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4574:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4585:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4585:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4570:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:14"
																},
																"nativeSrc": "4570:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4570:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4562:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4562:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4657:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4657:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4670:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4670:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4681:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4681:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4666:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:14"
																		},
																		"nativeSrc": "4666:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4666:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1140_to_t_address_fromStack",
																	"nativeSrc": "4598:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "4598:58:14"
																},
																"nativeSrc": "4598:86:14",
																"nodeType": "YulFunctionCall",
																"src": "4598:86:14"
															},
															"nativeSrc": "4598:86:14",
															"nodeType": "YulExpressionStatement",
															"src": "4598:86:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1140__to_t_address__fromStack_reversed",
												"nativeSrc": "4439:252:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4524:9:14",
														"nodeType": "YulTypedName",
														"src": "4524:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4536:6:14",
														"nodeType": "YulTypedName",
														"src": "4536:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4547:4:14",
														"nodeType": "YulTypedName",
														"src": "4547:4:14",
														"type": ""
													}
												],
												"src": "4439:252:14"
											},
											{
												"body": {
													"nativeSrc": "4762:53:14",
													"nodeType": "YulBlock",
													"src": "4762:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4779:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4779:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4802:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4802:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4784:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "4784:17:14"
																		},
																		"nativeSrc": "4784:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4784:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4772:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:14"
																},
																"nativeSrc": "4772:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4772:37:14"
															},
															"nativeSrc": "4772:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "4772:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4697:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4750:5:14",
														"nodeType": "YulTypedName",
														"src": "4750:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4757:3:14",
														"nodeType": "YulTypedName",
														"src": "4757:3:14",
														"type": ""
													}
												],
												"src": "4697:118:14"
											},
											{
												"body": {
													"nativeSrc": "4919:124:14",
													"nodeType": "YulBlock",
													"src": "4919:124:14",
													"statements": [
														{
															"nativeSrc": "4929:26:14",
															"nodeType": "YulAssignment",
															"src": "4929:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4941:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4941:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4952:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4952:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4937:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4937:3:14"
																},
																"nativeSrc": "4937:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4937:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4929:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4929:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5009:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5009:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5022:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5033:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5033:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5018:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:14"
																		},
																		"nativeSrc": "5018:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5018:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4965:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "4965:43:14"
																},
																"nativeSrc": "4965:71:14",
																"nodeType": "YulFunctionCall",
																"src": "4965:71:14"
															},
															"nativeSrc": "4965:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "4965:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4821:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4891:9:14",
														"nodeType": "YulTypedName",
														"src": "4891:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4903:6:14",
														"nodeType": "YulTypedName",
														"src": "4903:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4914:4:14",
														"nodeType": "YulTypedName",
														"src": "4914:4:14",
														"type": ""
													}
												],
												"src": "4821:222:14"
											},
											{
												"body": {
													"nativeSrc": "5149:519:14",
													"nodeType": "YulBlock",
													"src": "5149:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5195:83:14",
																"nodeType": "YulBlock",
																"src": "5195:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5197:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5197:77:14"
																			},
																			"nativeSrc": "5197:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5197:79:14"
																		},
																		"nativeSrc": "5197:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5197:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5170:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5170:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5179:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5179:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5166:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5166:3:14"
																		},
																		"nativeSrc": "5166:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5166:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5162:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5162:3:14"
																},
																"nativeSrc": "5162:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5162:32:14"
															},
															"nativeSrc": "5159:119:14",
															"nodeType": "YulIf",
															"src": "5159:119:14"
														},
														{
															"nativeSrc": "5288:117:14",
															"nodeType": "YulBlock",
															"src": "5288:117:14",
															"statements": [
																{
																	"nativeSrc": "5303:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5303:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5307:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5307:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5332:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5332:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5367:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5367:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5378:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5378:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5363:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5363:3:14"
																				},
																				"nativeSrc": "5363:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5363:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5387:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5387:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5342:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5342:20:14"
																		},
																		"nativeSrc": "5342:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5332:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5332:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5415:118:14",
															"nodeType": "YulBlock",
															"src": "5415:118:14",
															"statements": [
																{
																	"nativeSrc": "5430:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5430:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5444:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5434:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5434:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5460:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5460:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5495:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5495:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5506:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5506:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5491:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5491:3:14"
																				},
																				"nativeSrc": "5491:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5491:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5515:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5515:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5470:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5470:20:14"
																		},
																		"nativeSrc": "5470:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5470:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5460:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5460:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5543:118:14",
															"nodeType": "YulBlock",
															"src": "5543:118:14",
															"statements": [
																{
																	"nativeSrc": "5558:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5558:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5572:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5562:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5562:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5588:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5588:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5623:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5623:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5634:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5634:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5619:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5619:3:14"
																				},
																				"nativeSrc": "5619:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5619:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5643:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5643:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5598:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5598:20:14"
																		},
																		"nativeSrc": "5598:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5588:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5588:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5049:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5103:9:14",
														"nodeType": "YulTypedName",
														"src": "5103:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5114:7:14",
														"nodeType": "YulTypedName",
														"src": "5114:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5126:6:14",
														"nodeType": "YulTypedName",
														"src": "5126:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5134:6:14",
														"nodeType": "YulTypedName",
														"src": "5134:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5142:6:14",
														"nodeType": "YulTypedName",
														"src": "5142:6:14",
														"type": ""
													}
												],
												"src": "5049:619:14"
											},
											{
												"body": {
													"nativeSrc": "5717:43:14",
													"nodeType": "YulBlock",
													"src": "5717:43:14",
													"statements": [
														{
															"nativeSrc": "5727:27:14",
															"nodeType": "YulAssignment",
															"src": "5727:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5742:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5742:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5749:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5749:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5738:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:14"
																},
																"nativeSrc": "5738:16:14",
																"nodeType": "YulFunctionCall",
																"src": "5738:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5727:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5727:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5674:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5699:5:14",
														"nodeType": "YulTypedName",
														"src": "5699:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5709:7:14",
														"nodeType": "YulTypedName",
														"src": "5709:7:14",
														"type": ""
													}
												],
												"src": "5674:86:14"
											},
											{
												"body": {
													"nativeSrc": "5827:51:14",
													"nodeType": "YulBlock",
													"src": "5827:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5844:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5844:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5865:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5849:15:14",
																			"nodeType": "YulIdentifier",
																			"src": "5849:15:14"
																		},
																		"nativeSrc": "5849:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5849:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5837:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5837:6:14"
																},
																"nativeSrc": "5837:35:14",
																"nodeType": "YulFunctionCall",
																"src": "5837:35:14"
															},
															"nativeSrc": "5837:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "5837:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5766:112:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5815:5:14",
														"nodeType": "YulTypedName",
														"src": "5815:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5822:3:14",
														"nodeType": "YulTypedName",
														"src": "5822:3:14",
														"type": ""
													}
												],
												"src": "5766:112:14"
											},
											{
												"body": {
													"nativeSrc": "5978:120:14",
													"nodeType": "YulBlock",
													"src": "5978:120:14",
													"statements": [
														{
															"nativeSrc": "5988:26:14",
															"nodeType": "YulAssignment",
															"src": "5988:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6000:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6000:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6011:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6011:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5996:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5996:3:14"
																},
																"nativeSrc": "5996:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5996:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5988:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5988:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6064:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6064:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6077:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6077:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6088:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6088:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6073:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6073:3:14"
																		},
																		"nativeSrc": "6073:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6073:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6024:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "6024:39:14"
																},
																"nativeSrc": "6024:67:14",
																"nodeType": "YulFunctionCall",
																"src": "6024:67:14"
															},
															"nativeSrc": "6024:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "6024:67:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5884:214:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5950:9:14",
														"nodeType": "YulTypedName",
														"src": "5950:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5962:6:14",
														"nodeType": "YulTypedName",
														"src": "5962:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5973:4:14",
														"nodeType": "YulTypedName",
														"src": "5973:4:14",
														"type": ""
													}
												],
												"src": "5884:214:14"
											},
											{
												"body": {
													"nativeSrc": "6169:53:14",
													"nodeType": "YulBlock",
													"src": "6169:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6186:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6209:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6209:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6191:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "6191:17:14"
																		},
																		"nativeSrc": "6191:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6191:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6179:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:14"
																},
																"nativeSrc": "6179:37:14",
																"nodeType": "YulFunctionCall",
																"src": "6179:37:14"
															},
															"nativeSrc": "6179:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "6179:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6104:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6157:5:14",
														"nodeType": "YulTypedName",
														"src": "6157:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6164:3:14",
														"nodeType": "YulTypedName",
														"src": "6164:3:14",
														"type": ""
													}
												],
												"src": "6104:118:14"
											},
											{
												"body": {
													"nativeSrc": "6326:124:14",
													"nodeType": "YulBlock",
													"src": "6326:124:14",
													"statements": [
														{
															"nativeSrc": "6336:26:14",
															"nodeType": "YulAssignment",
															"src": "6336:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6348:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6348:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6359:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6359:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6344:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:14"
																},
																"nativeSrc": "6344:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6344:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6336:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6336:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6416:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6416:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6429:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6429:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6440:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6440:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6425:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6425:3:14"
																		},
																		"nativeSrc": "6425:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6425:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6372:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6372:43:14"
																},
																"nativeSrc": "6372:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6372:71:14"
															},
															"nativeSrc": "6372:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6372:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6228:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6298:9:14",
														"nodeType": "YulTypedName",
														"src": "6298:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6310:6:14",
														"nodeType": "YulTypedName",
														"src": "6310:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6321:4:14",
														"nodeType": "YulTypedName",
														"src": "6321:4:14",
														"type": ""
													}
												],
												"src": "6228:222:14"
											},
											{
												"body": {
													"nativeSrc": "6522:263:14",
													"nodeType": "YulBlock",
													"src": "6522:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6568:83:14",
																"nodeType": "YulBlock",
																"src": "6568:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6570:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6570:77:14"
																			},
																			"nativeSrc": "6570:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6570:79:14"
																		},
																		"nativeSrc": "6570:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6570:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6543:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6543:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6552:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6552:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6539:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6539:3:14"
																		},
																		"nativeSrc": "6539:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6539:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6564:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6535:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6535:3:14"
																},
																"nativeSrc": "6535:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6535:32:14"
															},
															"nativeSrc": "6532:119:14",
															"nodeType": "YulIf",
															"src": "6532:119:14"
														},
														{
															"nativeSrc": "6661:117:14",
															"nodeType": "YulBlock",
															"src": "6661:117:14",
															"statements": [
																{
																	"nativeSrc": "6676:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6676:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6690:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6690:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6680:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6680:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6705:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6705:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6740:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6740:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6751:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6751:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6736:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6736:3:14"
																				},
																				"nativeSrc": "6736:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6736:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6760:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6760:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6715:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6715:20:14"
																		},
																		"nativeSrc": "6715:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6715:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6705:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6705:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6456:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6492:9:14",
														"nodeType": "YulTypedName",
														"src": "6492:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6503:7:14",
														"nodeType": "YulTypedName",
														"src": "6503:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6515:6:14",
														"nodeType": "YulTypedName",
														"src": "6515:6:14",
														"type": ""
													}
												],
												"src": "6456:329:14"
											},
											{
												"body": {
													"nativeSrc": "6833:78:14",
													"nodeType": "YulBlock",
													"src": "6833:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6889:16:14",
																"nodeType": "YulBlock",
																"src": "6889:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6898:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6898:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6901:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6901:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6891:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:14"
																			},
																			"nativeSrc": "6891:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6891:12:14"
																		},
																		"nativeSrc": "6891:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6891:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6856:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6856:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6880:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "6880:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "6863:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "6863:16:14"
																				},
																				"nativeSrc": "6863:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6863:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6853:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6853:2:14"
																		},
																		"nativeSrc": "6853:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6853:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6846:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6846:6:14"
																},
																"nativeSrc": "6846:42:14",
																"nodeType": "YulFunctionCall",
																"src": "6846:42:14"
															},
															"nativeSrc": "6843:62:14",
															"nodeType": "YulIf",
															"src": "6843:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "6791:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6826:5:14",
														"nodeType": "YulTypedName",
														"src": "6826:5:14",
														"type": ""
													}
												],
												"src": "6791:120:14"
											},
											{
												"body": {
													"nativeSrc": "6968:86:14",
													"nodeType": "YulBlock",
													"src": "6968:86:14",
													"statements": [
														{
															"nativeSrc": "6978:29:14",
															"nodeType": "YulAssignment",
															"src": "6978:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7000:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7000:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6987:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6987:12:14"
																},
																"nativeSrc": "6987:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6987:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6978:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6978:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7042:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7042:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "7016:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "7016:25:14"
																},
																"nativeSrc": "7016:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7016:32:14"
															},
															"nativeSrc": "7016:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "7016:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nativeSrc": "6917:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6946:6:14",
														"nodeType": "YulTypedName",
														"src": "6946:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6954:3:14",
														"nodeType": "YulTypedName",
														"src": "6954:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6962:5:14",
														"nodeType": "YulTypedName",
														"src": "6962:5:14",
														"type": ""
													}
												],
												"src": "6917:137:14"
											},
											{
												"body": {
													"nativeSrc": "7141:389:14",
													"nodeType": "YulBlock",
													"src": "7141:389:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7187:83:14",
																"nodeType": "YulBlock",
																"src": "7187:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7189:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7189:77:14"
																			},
																			"nativeSrc": "7189:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7189:79:14"
																		},
																		"nativeSrc": "7189:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7189:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7162:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7162:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7171:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7171:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7158:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7158:3:14"
																		},
																		"nativeSrc": "7158:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7158:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7183:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7183:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7154:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7154:3:14"
																},
																"nativeSrc": "7154:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7154:32:14"
															},
															"nativeSrc": "7151:119:14",
															"nodeType": "YulIf",
															"src": "7151:119:14"
														},
														{
															"nativeSrc": "7280:116:14",
															"nodeType": "YulBlock",
															"src": "7280:116:14",
															"statements": [
																{
																	"nativeSrc": "7295:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7295:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7309:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7309:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7299:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7299:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7324:62:14",
																	"nodeType": "YulAssignment",
																	"src": "7324:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7358:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7358:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7369:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7369:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7354:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7354:3:14"
																				},
																				"nativeSrc": "7354:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7354:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7378:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7378:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nativeSrc": "7334:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "7334:19:14"
																		},
																		"nativeSrc": "7334:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7334:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7324:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7324:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7406:117:14",
															"nodeType": "YulBlock",
															"src": "7406:117:14",
															"statements": [
																{
																	"nativeSrc": "7421:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7421:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7435:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7435:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7425:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7425:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7451:62:14",
																	"nodeType": "YulAssignment",
																	"src": "7451:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7485:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7485:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7496:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7496:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7481:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7481:3:14"
																				},
																				"nativeSrc": "7481:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7481:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7505:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7505:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nativeSrc": "7461:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "7461:19:14"
																		},
																		"nativeSrc": "7461:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7451:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7451:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_uint16",
												"nativeSrc": "7060:470:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7103:9:14",
														"nodeType": "YulTypedName",
														"src": "7103:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7114:7:14",
														"nodeType": "YulTypedName",
														"src": "7114:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7126:6:14",
														"nodeType": "YulTypedName",
														"src": "7126:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7134:6:14",
														"nodeType": "YulTypedName",
														"src": "7134:6:14",
														"type": ""
													}
												],
												"src": "7060:470:14"
											},
											{
												"body": {
													"nativeSrc": "7602:263:14",
													"nodeType": "YulBlock",
													"src": "7602:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7648:83:14",
																"nodeType": "YulBlock",
																"src": "7648:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7650:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7650:77:14"
																			},
																			"nativeSrc": "7650:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7650:79:14"
																		},
																		"nativeSrc": "7650:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7650:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7623:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7623:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7632:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7632:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7619:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7619:3:14"
																		},
																		"nativeSrc": "7619:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7619:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7644:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7644:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7615:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:14"
																},
																"nativeSrc": "7615:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7615:32:14"
															},
															"nativeSrc": "7612:119:14",
															"nodeType": "YulIf",
															"src": "7612:119:14"
														},
														{
															"nativeSrc": "7741:117:14",
															"nodeType": "YulBlock",
															"src": "7741:117:14",
															"statements": [
																{
																	"nativeSrc": "7756:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7756:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7770:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7770:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7760:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7760:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7785:63:14",
																	"nodeType": "YulAssignment",
																	"src": "7785:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7820:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7820:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7831:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7831:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7816:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7816:3:14"
																				},
																				"nativeSrc": "7816:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7816:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7840:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7840:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7795:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "7795:20:14"
																		},
																		"nativeSrc": "7795:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7795:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7785:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7785:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7536:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7572:9:14",
														"nodeType": "YulTypedName",
														"src": "7572:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7583:7:14",
														"nodeType": "YulTypedName",
														"src": "7583:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7595:6:14",
														"nodeType": "YulTypedName",
														"src": "7595:6:14",
														"type": ""
													}
												],
												"src": "7536:329:14"
											},
											{
												"body": {
													"nativeSrc": "7954:391:14",
													"nodeType": "YulBlock",
													"src": "7954:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8000:83:14",
																"nodeType": "YulBlock",
																"src": "8000:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8002:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8002:77:14"
																			},
																			"nativeSrc": "8002:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8002:79:14"
																		},
																		"nativeSrc": "8002:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8002:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7975:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7975:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7984:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7984:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7971:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7971:3:14"
																		},
																		"nativeSrc": "7971:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7971:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7996:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7996:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7967:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7967:3:14"
																},
																"nativeSrc": "7967:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7967:32:14"
															},
															"nativeSrc": "7964:119:14",
															"nodeType": "YulIf",
															"src": "7964:119:14"
														},
														{
															"nativeSrc": "8093:117:14",
															"nodeType": "YulBlock",
															"src": "8093:117:14",
															"statements": [
																{
																	"nativeSrc": "8108:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8108:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8122:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8122:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8112:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8112:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8137:63:14",
																	"nodeType": "YulAssignment",
																	"src": "8137:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8172:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8172:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8183:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8183:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8168:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8168:3:14"
																				},
																				"nativeSrc": "8168:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8168:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8192:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8192:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8147:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "8147:20:14"
																		},
																		"nativeSrc": "8147:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8147:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8137:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8137:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8220:118:14",
															"nodeType": "YulBlock",
															"src": "8220:118:14",
															"statements": [
																{
																	"nativeSrc": "8235:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8235:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8249:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8249:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8239:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8239:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8265:63:14",
																	"nodeType": "YulAssignment",
																	"src": "8265:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8300:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8300:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8311:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8311:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8296:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8296:3:14"
																				},
																				"nativeSrc": "8296:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8296:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8320:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8320:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8275:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "8275:20:14"
																		},
																		"nativeSrc": "8275:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8275:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8265:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8265:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7871:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7916:9:14",
														"nodeType": "YulTypedName",
														"src": "7916:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7927:7:14",
														"nodeType": "YulTypedName",
														"src": "7927:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7939:6:14",
														"nodeType": "YulTypedName",
														"src": "7939:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7947:6:14",
														"nodeType": "YulTypedName",
														"src": "7947:6:14",
														"type": ""
													}
												],
												"src": "7871:474:14"
											},
											{
												"body": {
													"nativeSrc": "8379:152:14",
													"nodeType": "YulBlock",
													"src": "8379:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8396:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8396:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8399:77:14",
																		"nodeType": "YulLiteral",
																		"src": "8399:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8389:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8389:6:14"
																},
																"nativeSrc": "8389:88:14",
																"nodeType": "YulFunctionCall",
																"src": "8389:88:14"
															},
															"nativeSrc": "8389:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "8389:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8493:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8493:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8496:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8496:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8486:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8486:6:14"
																},
																"nativeSrc": "8486:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8486:15:14"
															},
															"nativeSrc": "8486:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "8486:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8517:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8517:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8520:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8520:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8510:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8510:6:14"
																},
																"nativeSrc": "8510:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8510:15:14"
															},
															"nativeSrc": "8510:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "8510:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8351:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "8351:180:14"
											},
											{
												"body": {
													"nativeSrc": "8588:269:14",
													"nodeType": "YulBlock",
													"src": "8588:269:14",
													"statements": [
														{
															"nativeSrc": "8598:22:14",
															"nodeType": "YulAssignment",
															"src": "8598:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8612:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8612:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8618:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8618:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8608:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:14"
																},
																"nativeSrc": "8608:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8608:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8598:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8598:6:14"
																}
															]
														},
														{
															"nativeSrc": "8629:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8629:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8659:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8659:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8665:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8665:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8655:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8655:3:14"
																},
																"nativeSrc": "8655:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8655:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8633:18:14",
																	"nodeType": "YulTypedName",
																	"src": "8633:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8706:51:14",
																"nodeType": "YulBlock",
																"src": "8706:51:14",
																"statements": [
																	{
																		"nativeSrc": "8720:27:14",
																		"nodeType": "YulAssignment",
																		"src": "8720:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8734:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "8734:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8742:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8742:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8730:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8730:3:14"
																			},
																			"nativeSrc": "8730:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8730:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8720:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8720:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8686:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "8686:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8679:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8679:6:14"
																},
																"nativeSrc": "8679:26:14",
																"nodeType": "YulFunctionCall",
																"src": "8679:26:14"
															},
															"nativeSrc": "8676:81:14",
															"nodeType": "YulIf",
															"src": "8676:81:14"
														},
														{
															"body": {
																"nativeSrc": "8809:42:14",
																"nodeType": "YulBlock",
																"src": "8809:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8823:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8823:16:14"
																			},
																			"nativeSrc": "8823:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8823:18:14"
																		},
																		"nativeSrc": "8823:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8823:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8773:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "8773:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8796:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8804:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8804:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8793:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8793:2:14"
																		},
																		"nativeSrc": "8793:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8793:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8770:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8770:2:14"
																},
																"nativeSrc": "8770:38:14",
																"nodeType": "YulFunctionCall",
																"src": "8770:38:14"
															},
															"nativeSrc": "8767:84:14",
															"nodeType": "YulIf",
															"src": "8767:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8537:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8572:4:14",
														"nodeType": "YulTypedName",
														"src": "8572:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8581:6:14",
														"nodeType": "YulTypedName",
														"src": "8581:6:14",
														"type": ""
													}
												],
												"src": "8537:320:14"
											},
											{
												"body": {
													"nativeSrc": "8969:61:14",
													"nodeType": "YulBlock",
													"src": "8969:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8991:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8991:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8999:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8999:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8987:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8987:3:14"
																		},
																		"nativeSrc": "8987:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8987:14:14"
																	},
																	{
																		"hexValue": "4d696e742066656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "9003:19:14",
																		"nodeType": "YulLiteral",
																		"src": "9003:19:14",
																		"type": "",
																		"value": "Mint fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8980:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8980:6:14"
																},
																"nativeSrc": "8980:43:14",
																"nodeType": "YulFunctionCall",
																"src": "8980:43:14"
															},
															"nativeSrc": "8980:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "8980:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
												"nativeSrc": "8863:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8961:6:14",
														"nodeType": "YulTypedName",
														"src": "8961:6:14",
														"type": ""
													}
												],
												"src": "8863:167:14"
											},
											{
												"body": {
													"nativeSrc": "9182:220:14",
													"nodeType": "YulBlock",
													"src": "9182:220:14",
													"statements": [
														{
															"nativeSrc": "9192:74:14",
															"nodeType": "YulAssignment",
															"src": "9192:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9258:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9258:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9263:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9263:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9199:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "9199:58:14"
																},
																"nativeSrc": "9199:67:14",
																"nodeType": "YulFunctionCall",
																"src": "9199:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9192:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9192:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9364:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9364:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
																	"nativeSrc": "9275:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "9275:88:14"
																},
																"nativeSrc": "9275:93:14",
																"nodeType": "YulFunctionCall",
																"src": "9275:93:14"
															},
															"nativeSrc": "9275:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "9275:93:14"
														},
														{
															"nativeSrc": "9377:19:14",
															"nodeType": "YulAssignment",
															"src": "9377:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9388:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9388:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9393:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9393:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9384:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9384:3:14"
																},
																"nativeSrc": "9384:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9384:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9377:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9036:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9170:3:14",
														"nodeType": "YulTypedName",
														"src": "9170:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9178:3:14",
														"nodeType": "YulTypedName",
														"src": "9178:3:14",
														"type": ""
													}
												],
												"src": "9036:366:14"
											},
											{
												"body": {
													"nativeSrc": "9579:248:14",
													"nodeType": "YulBlock",
													"src": "9579:248:14",
													"statements": [
														{
															"nativeSrc": "9589:26:14",
															"nodeType": "YulAssignment",
															"src": "9589:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9601:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9601:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9612:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9612:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9597:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9597:3:14"
																},
																"nativeSrc": "9597:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9597:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9589:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9589:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9636:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9647:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9647:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9632:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:14"
																		},
																		"nativeSrc": "9632:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9632:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9655:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "9655:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9661:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9661:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9651:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9651:3:14"
																		},
																		"nativeSrc": "9651:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9651:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9625:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:14"
																},
																"nativeSrc": "9625:47:14",
																"nodeType": "YulFunctionCall",
																"src": "9625:47:14"
															},
															"nativeSrc": "9625:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "9625:47:14"
														},
														{
															"nativeSrc": "9681:139:14",
															"nodeType": "YulAssignment",
															"src": "9681:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9815:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9815:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9689:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "9689:124:14"
																},
																"nativeSrc": "9689:131:14",
																"nodeType": "YulFunctionCall",
																"src": "9689:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9681:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9681:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9408:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9559:9:14",
														"nodeType": "YulTypedName",
														"src": "9559:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9574:4:14",
														"nodeType": "YulTypedName",
														"src": "9574:4:14",
														"type": ""
													}
												],
												"src": "9408:419:14"
											},
											{
												"body": {
													"nativeSrc": "9939:63:14",
													"nodeType": "YulBlock",
													"src": "9939:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9961:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9961:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9969:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9969:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9957:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9957:3:14"
																		},
																		"nativeSrc": "9957:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9957:14:14"
																	},
																	{
																		"hexValue": "52656465656d2066656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "9973:21:14",
																		"nodeType": "YulLiteral",
																		"src": "9973:21:14",
																		"type": "",
																		"value": "Redeem fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9950:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9950:6:14"
																},
																"nativeSrc": "9950:45:14",
																"nodeType": "YulFunctionCall",
																"src": "9950:45:14"
															},
															"nativeSrc": "9950:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "9950:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
												"nativeSrc": "9833:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9931:6:14",
														"nodeType": "YulTypedName",
														"src": "9931:6:14",
														"type": ""
													}
												],
												"src": "9833:169:14"
											},
											{
												"body": {
													"nativeSrc": "10154:220:14",
													"nodeType": "YulBlock",
													"src": "10154:220:14",
													"statements": [
														{
															"nativeSrc": "10164:74:14",
															"nodeType": "YulAssignment",
															"src": "10164:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10230:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10230:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10235:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10235:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10171:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "10171:58:14"
																},
																"nativeSrc": "10171:67:14",
																"nodeType": "YulFunctionCall",
																"src": "10171:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10164:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10164:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10336:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10336:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
																	"nativeSrc": "10247:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "10247:88:14"
																},
																"nativeSrc": "10247:93:14",
																"nodeType": "YulFunctionCall",
																"src": "10247:93:14"
															},
															"nativeSrc": "10247:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "10247:93:14"
														},
														{
															"nativeSrc": "10349:19:14",
															"nodeType": "YulAssignment",
															"src": "10349:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10360:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10360:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10365:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10365:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10356:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10356:3:14"
																},
																"nativeSrc": "10356:12:14",
																"nodeType": "YulFunctionCall",
																"src": "10356:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10349:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10349:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10008:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10142:3:14",
														"nodeType": "YulTypedName",
														"src": "10142:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10150:3:14",
														"nodeType": "YulTypedName",
														"src": "10150:3:14",
														"type": ""
													}
												],
												"src": "10008:366:14"
											},
											{
												"body": {
													"nativeSrc": "10551:248:14",
													"nodeType": "YulBlock",
													"src": "10551:248:14",
													"statements": [
														{
															"nativeSrc": "10561:26:14",
															"nodeType": "YulAssignment",
															"src": "10561:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10573:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10573:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10584:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10584:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10569:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10569:3:14"
																},
																"nativeSrc": "10569:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10569:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10561:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10561:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10608:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10608:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10619:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10619:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10604:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10604:3:14"
																		},
																		"nativeSrc": "10604:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10604:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10627:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "10627:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10633:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10633:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10623:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10623:3:14"
																		},
																		"nativeSrc": "10623:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10623:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10597:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:14"
																},
																"nativeSrc": "10597:47:14",
																"nodeType": "YulFunctionCall",
																"src": "10597:47:14"
															},
															"nativeSrc": "10597:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "10597:47:14"
														},
														{
															"nativeSrc": "10653:139:14",
															"nodeType": "YulAssignment",
															"src": "10653:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10787:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10787:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10661:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "10661:124:14"
																},
																"nativeSrc": "10661:131:14",
																"nodeType": "YulFunctionCall",
																"src": "10661:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10653:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10653:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10380:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10531:9:14",
														"nodeType": "YulTypedName",
														"src": "10531:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10546:4:14",
														"nodeType": "YulTypedName",
														"src": "10546:4:14",
														"type": ""
													}
												],
												"src": "10380:419:14"
											},
											{
												"body": {
													"nativeSrc": "10927:202:14",
													"nodeType": "YulBlock",
													"src": "10927:202:14",
													"statements": [
														{
															"nativeSrc": "10937:26:14",
															"nodeType": "YulAssignment",
															"src": "10937:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10949:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10949:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10960:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10960:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10945:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10945:3:14"
																},
																"nativeSrc": "10945:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10945:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10937:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10937:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11015:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11015:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11028:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11028:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11039:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11039:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11024:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11024:3:14"
																		},
																		"nativeSrc": "11024:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11024:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "10973:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "10973:41:14"
																},
																"nativeSrc": "10973:69:14",
																"nodeType": "YulFunctionCall",
																"src": "10973:69:14"
															},
															"nativeSrc": "10973:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "10973:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11094:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11094:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11107:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11107:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11118:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11118:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11103:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11103:3:14"
																		},
																		"nativeSrc": "11103:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11103:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "11052:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "11052:41:14"
																},
																"nativeSrc": "11052:70:14",
																"nodeType": "YulFunctionCall",
																"src": "11052:70:14"
															},
															"nativeSrc": "11052:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "11052:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed",
												"nativeSrc": "10805:324:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10891:9:14",
														"nodeType": "YulTypedName",
														"src": "10891:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10903:6:14",
														"nodeType": "YulTypedName",
														"src": "10903:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10911:6:14",
														"nodeType": "YulTypedName",
														"src": "10911:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10922:4:14",
														"nodeType": "YulTypedName",
														"src": "10922:4:14",
														"type": ""
													}
												],
												"src": "10805:324:14"
											},
											{
												"body": {
													"nativeSrc": "11241:62:14",
													"nodeType": "YulBlock",
													"src": "11241:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11263:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11263:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11271:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11271:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11259:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11259:3:14"
																		},
																		"nativeSrc": "11259:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11259:14:14"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "11275:20:14",
																		"nodeType": "YulLiteral",
																		"src": "11275:20:14",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11252:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11252:6:14"
																},
																"nativeSrc": "11252:44:14",
																"nodeType": "YulFunctionCall",
																"src": "11252:44:14"
															},
															"nativeSrc": "11252:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "11252:44:14"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "11135:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11233:6:14",
														"nodeType": "YulTypedName",
														"src": "11233:6:14",
														"type": ""
													}
												],
												"src": "11135:168:14"
											},
											{
												"body": {
													"nativeSrc": "11455:220:14",
													"nodeType": "YulBlock",
													"src": "11455:220:14",
													"statements": [
														{
															"nativeSrc": "11465:74:14",
															"nodeType": "YulAssignment",
															"src": "11465:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11531:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11531:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11536:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11536:2:14",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11472:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "11472:58:14"
																},
																"nativeSrc": "11472:67:14",
																"nodeType": "YulFunctionCall",
																"src": "11472:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11465:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11465:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11637:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11637:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "11548:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "11548:88:14"
																},
																"nativeSrc": "11548:93:14",
																"nodeType": "YulFunctionCall",
																"src": "11548:93:14"
															},
															"nativeSrc": "11548:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "11548:93:14"
														},
														{
															"nativeSrc": "11650:19:14",
															"nodeType": "YulAssignment",
															"src": "11650:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11661:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11661:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11666:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11666:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11657:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11657:3:14"
																},
																"nativeSrc": "11657:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11657:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11650:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11650:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11309:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11443:3:14",
														"nodeType": "YulTypedName",
														"src": "11443:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11451:3:14",
														"nodeType": "YulTypedName",
														"src": "11451:3:14",
														"type": ""
													}
												],
												"src": "11309:366:14"
											},
											{
												"body": {
													"nativeSrc": "11852:248:14",
													"nodeType": "YulBlock",
													"src": "11852:248:14",
													"statements": [
														{
															"nativeSrc": "11862:26:14",
															"nodeType": "YulAssignment",
															"src": "11862:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11874:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11874:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11885:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11885:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11870:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:14"
																},
																"nativeSrc": "11870:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11870:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11862:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11862:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11909:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11909:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11920:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11920:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11905:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11905:3:14"
																		},
																		"nativeSrc": "11905:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11905:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11928:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "11928:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11934:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11934:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11924:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:14"
																		},
																		"nativeSrc": "11924:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11924:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11898:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11898:6:14"
																},
																"nativeSrc": "11898:47:14",
																"nodeType": "YulFunctionCall",
																"src": "11898:47:14"
															},
															"nativeSrc": "11898:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "11898:47:14"
														},
														{
															"nativeSrc": "11954:139:14",
															"nodeType": "YulAssignment",
															"src": "11954:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12088:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12088:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11962:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "11962:124:14"
																},
																"nativeSrc": "11962:131:14",
																"nodeType": "YulFunctionCall",
																"src": "11962:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11954:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11954:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11681:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11832:9:14",
														"nodeType": "YulTypedName",
														"src": "11832:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11847:4:14",
														"nodeType": "YulTypedName",
														"src": "11847:4:14",
														"type": ""
													}
												],
												"src": "11681:419:14"
											},
											{
												"body": {
													"nativeSrc": "12134:152:14",
													"nodeType": "YulBlock",
													"src": "12134:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12151:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12151:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12154:77:14",
																		"nodeType": "YulLiteral",
																		"src": "12154:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12144:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:14"
																},
																"nativeSrc": "12144:88:14",
																"nodeType": "YulFunctionCall",
																"src": "12144:88:14"
															},
															"nativeSrc": "12144:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "12144:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12248:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12248:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12251:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12251:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12241:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12241:6:14"
																},
																"nativeSrc": "12241:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12241:15:14"
															},
															"nativeSrc": "12241:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12241:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12272:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12272:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12275:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12275:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12265:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:14"
																},
																"nativeSrc": "12265:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12265:15:14"
															},
															"nativeSrc": "12265:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12265:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12106:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "12106:180:14"
											},
											{
												"body": {
													"nativeSrc": "12336:147:14",
													"nodeType": "YulBlock",
													"src": "12336:147:14",
													"statements": [
														{
															"nativeSrc": "12346:25:14",
															"nodeType": "YulAssignment",
															"src": "12346:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12369:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12369:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12351:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12351:17:14"
																},
																"nativeSrc": "12351:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12351:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12346:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12346:1:14"
																}
															]
														},
														{
															"nativeSrc": "12380:25:14",
															"nodeType": "YulAssignment",
															"src": "12380:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12403:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12403:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12385:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12385:17:14"
																},
																"nativeSrc": "12385:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12385:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12380:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12380:1:14"
																}
															]
														},
														{
															"nativeSrc": "12414:16:14",
															"nodeType": "YulAssignment",
															"src": "12414:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12425:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12425:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12428:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12428:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12421:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12421:3:14"
																},
																"nativeSrc": "12421:9:14",
																"nodeType": "YulFunctionCall",
																"src": "12421:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12414:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12414:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12454:22:14",
																"nodeType": "YulBlock",
																"src": "12454:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12456:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12456:16:14"
																			},
																			"nativeSrc": "12456:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12456:18:14"
																		},
																		"nativeSrc": "12456:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12456:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12446:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12446:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12449:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12449:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12443:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12443:2:14"
																},
																"nativeSrc": "12443:10:14",
																"nodeType": "YulFunctionCall",
																"src": "12443:10:14"
															},
															"nativeSrc": "12440:36:14",
															"nodeType": "YulIf",
															"src": "12440:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12292:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12323:1:14",
														"nodeType": "YulTypedName",
														"src": "12323:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12326:1:14",
														"nodeType": "YulTypedName",
														"src": "12326:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12332:3:14",
														"nodeType": "YulTypedName",
														"src": "12332:3:14",
														"type": ""
													}
												],
												"src": "12292:191:14"
											},
											{
												"body": {
													"nativeSrc": "12595:62:14",
													"nodeType": "YulBlock",
													"src": "12595:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12617:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12617:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12625:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12625:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12613:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12613:3:14"
																		},
																		"nativeSrc": "12613:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12613:14:14"
																	},
																	{
																		"hexValue": "45786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "12629:20:14",
																		"nodeType": "YulLiteral",
																		"src": "12629:20:14",
																		"type": "",
																		"value": "Exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12606:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12606:6:14"
																},
																"nativeSrc": "12606:44:14",
																"nodeType": "YulFunctionCall",
																"src": "12606:44:14"
															},
															"nativeSrc": "12606:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "12606:44:14"
														}
													]
												},
												"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
												"nativeSrc": "12489:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12587:6:14",
														"nodeType": "YulTypedName",
														"src": "12587:6:14",
														"type": ""
													}
												],
												"src": "12489:168:14"
											},
											{
												"body": {
													"nativeSrc": "12809:220:14",
													"nodeType": "YulBlock",
													"src": "12809:220:14",
													"statements": [
														{
															"nativeSrc": "12819:74:14",
															"nodeType": "YulAssignment",
															"src": "12819:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12885:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12885:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12890:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12890:2:14",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12826:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "12826:58:14"
																},
																"nativeSrc": "12826:67:14",
																"nodeType": "YulFunctionCall",
																"src": "12826:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12819:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12819:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12991:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12991:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																	"nativeSrc": "12902:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "12902:88:14"
																},
																"nativeSrc": "12902:93:14",
																"nodeType": "YulFunctionCall",
																"src": "12902:93:14"
															},
															"nativeSrc": "12902:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "12902:93:14"
														},
														{
															"nativeSrc": "13004:19:14",
															"nodeType": "YulAssignment",
															"src": "13004:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13015:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13015:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13020:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13020:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13011:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13011:3:14"
																},
																"nativeSrc": "13011:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13011:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13004:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13004:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12663:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12797:3:14",
														"nodeType": "YulTypedName",
														"src": "12797:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12805:3:14",
														"nodeType": "YulTypedName",
														"src": "12805:3:14",
														"type": ""
													}
												],
												"src": "12663:366:14"
											},
											{
												"body": {
													"nativeSrc": "13206:248:14",
													"nodeType": "YulBlock",
													"src": "13206:248:14",
													"statements": [
														{
															"nativeSrc": "13216:26:14",
															"nodeType": "YulAssignment",
															"src": "13216:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13228:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13228:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13239:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13239:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13224:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13224:3:14"
																},
																"nativeSrc": "13224:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13224:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13216:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13216:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13263:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13263:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13274:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13274:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13259:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13259:3:14"
																		},
																		"nativeSrc": "13259:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13259:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13282:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "13282:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13288:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13288:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13278:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13278:3:14"
																		},
																		"nativeSrc": "13278:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13278:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13252:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13252:6:14"
																},
																"nativeSrc": "13252:47:14",
																"nodeType": "YulFunctionCall",
																"src": "13252:47:14"
															},
															"nativeSrc": "13252:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "13252:47:14"
														},
														{
															"nativeSrc": "13308:139:14",
															"nodeType": "YulAssignment",
															"src": "13308:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13442:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13442:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13316:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "13316:124:14"
																},
																"nativeSrc": "13316:131:14",
																"nodeType": "YulFunctionCall",
																"src": "13316:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13308:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13308:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13035:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13186:9:14",
														"nodeType": "YulTypedName",
														"src": "13186:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13201:4:14",
														"nodeType": "YulTypedName",
														"src": "13201:4:14",
														"type": ""
													}
												],
												"src": "13035:419:14"
											},
											{
												"body": {
													"nativeSrc": "13508:362:14",
													"nodeType": "YulBlock",
													"src": "13508:362:14",
													"statements": [
														{
															"nativeSrc": "13518:25:14",
															"nodeType": "YulAssignment",
															"src": "13518:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13541:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13541:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13523:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13523:17:14"
																},
																"nativeSrc": "13523:20:14",
																"nodeType": "YulFunctionCall",
																"src": "13523:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13518:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "13518:1:14"
																}
															]
														},
														{
															"nativeSrc": "13552:25:14",
															"nodeType": "YulAssignment",
															"src": "13552:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13575:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13575:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13557:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13557:17:14"
																},
																"nativeSrc": "13557:20:14",
																"nodeType": "YulFunctionCall",
																"src": "13557:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13552:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "13552:1:14"
																}
															]
														},
														{
															"nativeSrc": "13586:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13586:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13609:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13609:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13612:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "13612:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13605:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13605:3:14"
																},
																"nativeSrc": "13605:9:14",
																"nodeType": "YulFunctionCall",
																"src": "13605:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13590:11:14",
																	"nodeType": "YulTypedName",
																	"src": "13590:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13623:41:14",
															"nodeType": "YulAssignment",
															"src": "13623:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13652:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "13652:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13634:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13634:17:14"
																},
																"nativeSrc": "13634:30:14",
																"nodeType": "YulFunctionCall",
																"src": "13634:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13623:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "13623:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13841:22:14",
																"nodeType": "YulBlock",
																"src": "13841:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13843:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "13843:16:14"
																			},
																			"nativeSrc": "13843:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13843:18:14"
																		},
																		"nativeSrc": "13843:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13843:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13774:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "13774:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13767:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "13767:6:14"
																				},
																				"nativeSrc": "13767:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13767:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13797:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "13797:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13804:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "13804:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13813:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "13813:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13800:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "13800:3:14"
																						},
																						"nativeSrc": "13800:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "13800:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13794:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "13794:2:14"
																				},
																				"nativeSrc": "13794:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13794:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13747:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13747:2:14"
																		},
																		"nativeSrc": "13747:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13747:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13727:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13727:6:14"
																},
																"nativeSrc": "13727:113:14",
																"nodeType": "YulFunctionCall",
																"src": "13727:113:14"
															},
															"nativeSrc": "13724:139:14",
															"nodeType": "YulIf",
															"src": "13724:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13460:410:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13491:1:14",
														"nodeType": "YulTypedName",
														"src": "13491:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13494:1:14",
														"nodeType": "YulTypedName",
														"src": "13494:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13500:7:14",
														"nodeType": "YulTypedName",
														"src": "13500:7:14",
														"type": ""
													}
												],
												"src": "13460:410:14"
											},
											{
												"body": {
													"nativeSrc": "13904:152:14",
													"nodeType": "YulBlock",
													"src": "13904:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13921:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13921:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13924:77:14",
																		"nodeType": "YulLiteral",
																		"src": "13924:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13914:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13914:6:14"
																},
																"nativeSrc": "13914:88:14",
																"nodeType": "YulFunctionCall",
																"src": "13914:88:14"
															},
															"nativeSrc": "13914:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "13914:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14018:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14018:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14021:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14021:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14011:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14011:6:14"
																},
																"nativeSrc": "14011:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14011:15:14"
															},
															"nativeSrc": "14011:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14011:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14042:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14042:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14045:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14045:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14035:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14035:6:14"
																},
																"nativeSrc": "14035:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14035:15:14"
															},
															"nativeSrc": "14035:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14035:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13876:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "13876:180:14"
											},
											{
												"body": {
													"nativeSrc": "14104:143:14",
													"nodeType": "YulBlock",
													"src": "14104:143:14",
													"statements": [
														{
															"nativeSrc": "14114:25:14",
															"nodeType": "YulAssignment",
															"src": "14114:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14137:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14137:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14119:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14119:17:14"
																},
																"nativeSrc": "14119:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14119:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14114:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14114:1:14"
																}
															]
														},
														{
															"nativeSrc": "14148:25:14",
															"nodeType": "YulAssignment",
															"src": "14148:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14171:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14171:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14153:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14153:17:14"
																},
																"nativeSrc": "14153:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14153:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14148:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14148:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14195:22:14",
																"nodeType": "YulBlock",
																"src": "14195:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14197:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14197:16:14"
																			},
																			"nativeSrc": "14197:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14197:18:14"
																		},
																		"nativeSrc": "14197:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14197:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14192:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14192:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14185:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14185:6:14"
																},
																"nativeSrc": "14185:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14185:9:14"
															},
															"nativeSrc": "14182:35:14",
															"nodeType": "YulIf",
															"src": "14182:35:14"
														},
														{
															"nativeSrc": "14227:14:14",
															"nodeType": "YulAssignment",
															"src": "14227:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14236:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14236:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14239:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14239:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14232:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14232:3:14"
																},
																"nativeSrc": "14232:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14232:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14227:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14227:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14062:185:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14093:1:14",
														"nodeType": "YulTypedName",
														"src": "14093:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14096:1:14",
														"nodeType": "YulTypedName",
														"src": "14096:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14102:1:14",
														"nodeType": "YulTypedName",
														"src": "14102:1:14",
														"type": ""
													}
												],
												"src": "14062:185:14"
											},
											{
												"body": {
													"nativeSrc": "14298:149:14",
													"nodeType": "YulBlock",
													"src": "14298:149:14",
													"statements": [
														{
															"nativeSrc": "14308:25:14",
															"nodeType": "YulAssignment",
															"src": "14308:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14331:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14331:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14313:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14313:17:14"
																},
																"nativeSrc": "14313:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14313:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14308:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14308:1:14"
																}
															]
														},
														{
															"nativeSrc": "14342:25:14",
															"nodeType": "YulAssignment",
															"src": "14342:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14365:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14365:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14347:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14347:17:14"
																},
																"nativeSrc": "14347:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14347:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14342:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14342:1:14"
																}
															]
														},
														{
															"nativeSrc": "14376:17:14",
															"nodeType": "YulAssignment",
															"src": "14376:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14388:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14388:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14391:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14391:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14384:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14384:3:14"
																},
																"nativeSrc": "14384:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14384:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14376:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14376:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14418:22:14",
																"nodeType": "YulBlock",
																"src": "14418:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14420:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14420:16:14"
																			},
																			"nativeSrc": "14420:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14420:18:14"
																		},
																		"nativeSrc": "14420:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14420:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14409:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "14409:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14415:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14415:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14406:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14406:2:14"
																},
																"nativeSrc": "14406:11:14",
																"nodeType": "YulFunctionCall",
																"src": "14406:11:14"
															},
															"nativeSrc": "14403:37:14",
															"nodeType": "YulIf",
															"src": "14403:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14253:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14284:1:14",
														"nodeType": "YulTypedName",
														"src": "14284:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14287:1:14",
														"nodeType": "YulTypedName",
														"src": "14287:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14293:4:14",
														"nodeType": "YulTypedName",
														"src": "14293:4:14",
														"type": ""
													}
												],
												"src": "14253:194:14"
											},
											{
												"body": {
													"nativeSrc": "14579:206:14",
													"nodeType": "YulBlock",
													"src": "14579:206:14",
													"statements": [
														{
															"nativeSrc": "14589:26:14",
															"nodeType": "YulAssignment",
															"src": "14589:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14601:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14601:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14612:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14612:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14597:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14597:3:14"
																},
																"nativeSrc": "14597:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14597:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14589:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14589:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14669:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14669:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14682:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14682:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14693:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14693:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14678:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14678:3:14"
																		},
																		"nativeSrc": "14678:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14678:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14625:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "14625:43:14"
																},
																"nativeSrc": "14625:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14625:71:14"
															},
															"nativeSrc": "14625:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14625:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14750:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14750:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14763:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14763:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14774:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14774:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14759:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14759:3:14"
																		},
																		"nativeSrc": "14759:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14759:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14706:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "14706:43:14"
																},
																"nativeSrc": "14706:72:14",
																"nodeType": "YulFunctionCall",
																"src": "14706:72:14"
															},
															"nativeSrc": "14706:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "14706:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14453:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14543:9:14",
														"nodeType": "YulTypedName",
														"src": "14543:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14555:6:14",
														"nodeType": "YulTypedName",
														"src": "14555:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14563:6:14",
														"nodeType": "YulTypedName",
														"src": "14563:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14574:4:14",
														"nodeType": "YulTypedName",
														"src": "14574:4:14",
														"type": ""
													}
												],
												"src": "14453:332:14"
											},
											{
												"body": {
													"nativeSrc": "14945:288:14",
													"nodeType": "YulBlock",
													"src": "14945:288:14",
													"statements": [
														{
															"nativeSrc": "14955:26:14",
															"nodeType": "YulAssignment",
															"src": "14955:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14967:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14967:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14978:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14978:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14963:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14963:3:14"
																},
																"nativeSrc": "14963:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14963:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14955:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14955:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15035:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15035:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15048:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15048:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15059:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15059:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15044:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15044:3:14"
																		},
																		"nativeSrc": "15044:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15044:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14991:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "14991:43:14"
																},
																"nativeSrc": "14991:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14991:71:14"
															},
															"nativeSrc": "14991:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14991:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15116:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15116:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15129:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15129:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15140:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15140:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15125:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15125:3:14"
																		},
																		"nativeSrc": "15125:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15125:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15072:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "15072:43:14"
																},
																"nativeSrc": "15072:72:14",
																"nodeType": "YulFunctionCall",
																"src": "15072:72:14"
															},
															"nativeSrc": "15072:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "15072:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15198:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15198:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15211:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15211:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15222:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15222:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15207:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15207:3:14"
																		},
																		"nativeSrc": "15207:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15207:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15154:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "15154:43:14"
																},
																"nativeSrc": "15154:72:14",
																"nodeType": "YulFunctionCall",
																"src": "15154:72:14"
															},
															"nativeSrc": "15154:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "15154:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14791:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14901:9:14",
														"nodeType": "YulTypedName",
														"src": "14901:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14913:6:14",
														"nodeType": "YulTypedName",
														"src": "14913:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14921:6:14",
														"nodeType": "YulTypedName",
														"src": "14921:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14929:6:14",
														"nodeType": "YulTypedName",
														"src": "14929:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14940:4:14",
														"nodeType": "YulTypedName",
														"src": "14940:4:14",
														"type": ""
													}
												],
												"src": "14791:442:14"
											},
											{
												"body": {
													"nativeSrc": "15345:60:14",
													"nodeType": "YulBlock",
													"src": "15345:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15367:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15367:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15375:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15375:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15363:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15363:3:14"
																		},
																		"nativeSrc": "15363:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15363:14:14"
																	},
																	{
																		"hexValue": "496e76616c6964207472656173757279",
																		"kind": "string",
																		"nativeSrc": "15379:18:14",
																		"nodeType": "YulLiteral",
																		"src": "15379:18:14",
																		"type": "",
																		"value": "Invalid treasury"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15356:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15356:6:14"
																},
																"nativeSrc": "15356:42:14",
																"nodeType": "YulFunctionCall",
																"src": "15356:42:14"
															},
															"nativeSrc": "15356:42:14",
															"nodeType": "YulExpressionStatement",
															"src": "15356:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
												"nativeSrc": "15239:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15337:6:14",
														"nodeType": "YulTypedName",
														"src": "15337:6:14",
														"type": ""
													}
												],
												"src": "15239:166:14"
											},
											{
												"body": {
													"nativeSrc": "15557:220:14",
													"nodeType": "YulBlock",
													"src": "15557:220:14",
													"statements": [
														{
															"nativeSrc": "15567:74:14",
															"nodeType": "YulAssignment",
															"src": "15567:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15633:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15633:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15638:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15638:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15574:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15574:58:14"
																},
																"nativeSrc": "15574:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15574:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15567:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15567:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15739:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15739:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
																	"nativeSrc": "15650:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15650:88:14"
																},
																"nativeSrc": "15650:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15650:93:14"
															},
															"nativeSrc": "15650:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15650:93:14"
														},
														{
															"nativeSrc": "15752:19:14",
															"nodeType": "YulAssignment",
															"src": "15752:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15763:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15763:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15768:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15768:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15759:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15759:3:14"
																},
																"nativeSrc": "15759:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15759:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15752:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15752:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15411:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15545:3:14",
														"nodeType": "YulTypedName",
														"src": "15545:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15553:3:14",
														"nodeType": "YulTypedName",
														"src": "15553:3:14",
														"type": ""
													}
												],
												"src": "15411:366:14"
											},
											{
												"body": {
													"nativeSrc": "15954:248:14",
													"nodeType": "YulBlock",
													"src": "15954:248:14",
													"statements": [
														{
															"nativeSrc": "15964:26:14",
															"nodeType": "YulAssignment",
															"src": "15964:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15976:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15976:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15987:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15987:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15972:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15972:3:14"
																},
																"nativeSrc": "15972:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15972:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15964:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15964:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16011:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16011:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16022:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16022:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16007:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16007:3:14"
																		},
																		"nativeSrc": "16007:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16007:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16030:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16030:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16036:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16036:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16026:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16026:3:14"
																		},
																		"nativeSrc": "16026:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16026:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16000:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16000:6:14"
																},
																"nativeSrc": "16000:47:14",
																"nodeType": "YulFunctionCall",
																"src": "16000:47:14"
															},
															"nativeSrc": "16000:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "16000:47:14"
														},
														{
															"nativeSrc": "16056:139:14",
															"nodeType": "YulAssignment",
															"src": "16056:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16190:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16190:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16064:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16064:124:14"
																},
																"nativeSrc": "16064:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16064:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16056:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16056:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15783:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15934:9:14",
														"nodeType": "YulTypedName",
														"src": "15934:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15949:4:14",
														"nodeType": "YulTypedName",
														"src": "15949:4:14",
														"type": ""
													}
												],
												"src": "15783:419:14"
											},
											{
												"body": {
													"nativeSrc": "16362:288:14",
													"nodeType": "YulBlock",
													"src": "16362:288:14",
													"statements": [
														{
															"nativeSrc": "16372:26:14",
															"nodeType": "YulAssignment",
															"src": "16372:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16384:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16384:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16395:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16395:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16380:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16380:3:14"
																},
																"nativeSrc": "16380:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16380:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16372:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16372:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16452:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16452:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16465:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16465:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16476:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16476:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16461:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16461:3:14"
																		},
																		"nativeSrc": "16461:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16461:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16408:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16408:43:14"
																},
																"nativeSrc": "16408:71:14",
																"nodeType": "YulFunctionCall",
																"src": "16408:71:14"
															},
															"nativeSrc": "16408:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "16408:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16533:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16533:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16546:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16546:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16557:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16557:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16542:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16542:3:14"
																		},
																		"nativeSrc": "16542:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16542:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16489:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16489:43:14"
																},
																"nativeSrc": "16489:72:14",
																"nodeType": "YulFunctionCall",
																"src": "16489:72:14"
															},
															"nativeSrc": "16489:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "16489:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16615:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16615:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16628:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16628:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16639:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16639:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16624:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16624:3:14"
																		},
																		"nativeSrc": "16624:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16624:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16571:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16571:43:14"
																},
																"nativeSrc": "16571:72:14",
																"nodeType": "YulFunctionCall",
																"src": "16571:72:14"
															},
															"nativeSrc": "16571:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "16571:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16208:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16318:9:14",
														"nodeType": "YulTypedName",
														"src": "16318:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16330:6:14",
														"nodeType": "YulTypedName",
														"src": "16330:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16338:6:14",
														"nodeType": "YulTypedName",
														"src": "16338:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16346:6:14",
														"nodeType": "YulTypedName",
														"src": "16346:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16357:4:14",
														"nodeType": "YulTypedName",
														"src": "16357:4:14",
														"type": ""
													}
												],
												"src": "16208:442:14"
											},
											{
												"body": {
													"nativeSrc": "16762:60:14",
													"nodeType": "YulBlock",
													"src": "16762:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16784:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "16784:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16792:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16792:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16780:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16780:3:14"
																		},
																		"nativeSrc": "16780:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16780:14:14"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "16796:18:14",
																		"nodeType": "YulLiteral",
																		"src": "16796:18:14",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16773:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16773:6:14"
																},
																"nativeSrc": "16773:42:14",
																"nodeType": "YulFunctionCall",
																"src": "16773:42:14"
															},
															"nativeSrc": "16773:42:14",
															"nodeType": "YulExpressionStatement",
															"src": "16773:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "16656:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16754:6:14",
														"nodeType": "YulTypedName",
														"src": "16754:6:14",
														"type": ""
													}
												],
												"src": "16656:166:14"
											},
											{
												"body": {
													"nativeSrc": "16974:220:14",
													"nodeType": "YulBlock",
													"src": "16974:220:14",
													"statements": [
														{
															"nativeSrc": "16984:74:14",
															"nodeType": "YulAssignment",
															"src": "16984:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17050:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17050:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17055:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17055:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16991:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "16991:58:14"
																},
																"nativeSrc": "16991:67:14",
																"nodeType": "YulFunctionCall",
																"src": "16991:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16984:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16984:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17156:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17156:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "17067:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17067:88:14"
																},
																"nativeSrc": "17067:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17067:93:14"
															},
															"nativeSrc": "17067:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17067:93:14"
														},
														{
															"nativeSrc": "17169:19:14",
															"nodeType": "YulAssignment",
															"src": "17169:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17180:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17180:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17185:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17185:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17176:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17176:3:14"
																},
																"nativeSrc": "17176:12:14",
																"nodeType": "YulFunctionCall",
																"src": "17176:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17169:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17169:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16828:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16962:3:14",
														"nodeType": "YulTypedName",
														"src": "16962:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16970:3:14",
														"nodeType": "YulTypedName",
														"src": "16970:3:14",
														"type": ""
													}
												],
												"src": "16828:366:14"
											},
											{
												"body": {
													"nativeSrc": "17371:248:14",
													"nodeType": "YulBlock",
													"src": "17371:248:14",
													"statements": [
														{
															"nativeSrc": "17381:26:14",
															"nodeType": "YulAssignment",
															"src": "17381:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17393:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17393:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17404:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17404:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17389:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17389:3:14"
																},
																"nativeSrc": "17389:18:14",
																"nodeType": "YulFunctionCall",
																"src": "17389:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17381:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17381:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17428:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17428:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17439:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17439:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17424:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17424:3:14"
																		},
																		"nativeSrc": "17424:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17424:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17447:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "17447:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17453:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17453:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17443:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17443:3:14"
																		},
																		"nativeSrc": "17443:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17443:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17417:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17417:6:14"
																},
																"nativeSrc": "17417:47:14",
																"nodeType": "YulFunctionCall",
																"src": "17417:47:14"
															},
															"nativeSrc": "17417:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "17417:47:14"
														},
														{
															"nativeSrc": "17473:139:14",
															"nodeType": "YulAssignment",
															"src": "17473:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17607:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17607:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17481:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "17481:124:14"
																},
																"nativeSrc": "17481:131:14",
																"nodeType": "YulFunctionCall",
																"src": "17481:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17473:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17473:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17200:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17351:9:14",
														"nodeType": "YulTypedName",
														"src": "17351:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17366:4:14",
														"nodeType": "YulTypedName",
														"src": "17366:4:14",
														"type": ""
													}
												],
												"src": "17200:419:14"
											},
											{
												"body": {
													"nativeSrc": "17731:75:14",
													"nodeType": "YulBlock",
													"src": "17731:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17753:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17753:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17761:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17761:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17749:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17749:3:14"
																		},
																		"nativeSrc": "17749:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17749:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "17765:33:14",
																		"nodeType": "YulLiteral",
																		"src": "17765:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17742:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17742:6:14"
																},
																"nativeSrc": "17742:57:14",
																"nodeType": "YulFunctionCall",
																"src": "17742:57:14"
															},
															"nativeSrc": "17742:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "17742:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "17625:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17723:6:14",
														"nodeType": "YulTypedName",
														"src": "17723:6:14",
														"type": ""
													}
												],
												"src": "17625:181:14"
											},
											{
												"body": {
													"nativeSrc": "17958:220:14",
													"nodeType": "YulBlock",
													"src": "17958:220:14",
													"statements": [
														{
															"nativeSrc": "17968:74:14",
															"nodeType": "YulAssignment",
															"src": "17968:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18034:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18034:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18039:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18039:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17975:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17975:58:14"
																},
																"nativeSrc": "17975:67:14",
																"nodeType": "YulFunctionCall",
																"src": "17975:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17968:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17968:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18140:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18140:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "18051:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18051:88:14"
																},
																"nativeSrc": "18051:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18051:93:14"
															},
															"nativeSrc": "18051:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18051:93:14"
														},
														{
															"nativeSrc": "18153:19:14",
															"nodeType": "YulAssignment",
															"src": "18153:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18164:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18164:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18169:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18169:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18160:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18160:3:14"
																},
																"nativeSrc": "18160:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18160:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18153:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18153:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17812:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17946:3:14",
														"nodeType": "YulTypedName",
														"src": "17946:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17954:3:14",
														"nodeType": "YulTypedName",
														"src": "17954:3:14",
														"type": ""
													}
												],
												"src": "17812:366:14"
											},
											{
												"body": {
													"nativeSrc": "18355:248:14",
													"nodeType": "YulBlock",
													"src": "18355:248:14",
													"statements": [
														{
															"nativeSrc": "18365:26:14",
															"nodeType": "YulAssignment",
															"src": "18365:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18377:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18377:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18388:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18388:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18373:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18373:3:14"
																},
																"nativeSrc": "18373:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18373:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18365:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18365:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18412:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18412:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18423:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18423:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18408:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18408:3:14"
																		},
																		"nativeSrc": "18408:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18408:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18431:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18431:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18437:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18437:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18427:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18427:3:14"
																		},
																		"nativeSrc": "18427:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18427:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18401:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18401:6:14"
																},
																"nativeSrc": "18401:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18401:47:14"
															},
															"nativeSrc": "18401:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18401:47:14"
														},
														{
															"nativeSrc": "18457:139:14",
															"nodeType": "YulAssignment",
															"src": "18457:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18591:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18591:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18465:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18465:124:14"
																},
																"nativeSrc": "18465:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18465:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18457:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18457:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18184:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18335:9:14",
														"nodeType": "YulTypedName",
														"src": "18335:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18350:4:14",
														"nodeType": "YulTypedName",
														"src": "18350:4:14",
														"type": ""
													}
												],
												"src": "18184:419:14"
											},
											{
												"body": {
													"nativeSrc": "18763:288:14",
													"nodeType": "YulBlock",
													"src": "18763:288:14",
													"statements": [
														{
															"nativeSrc": "18773:26:14",
															"nodeType": "YulAssignment",
															"src": "18773:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18785:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18785:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18796:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18796:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18781:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18781:3:14"
																},
																"nativeSrc": "18781:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18781:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18773:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18773:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18853:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18853:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18866:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18866:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18877:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18877:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18862:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18862:3:14"
																		},
																		"nativeSrc": "18862:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18862:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18809:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "18809:43:14"
																},
																"nativeSrc": "18809:71:14",
																"nodeType": "YulFunctionCall",
																"src": "18809:71:14"
															},
															"nativeSrc": "18809:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "18809:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18934:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18934:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18947:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18947:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18958:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18958:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18943:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18943:3:14"
																		},
																		"nativeSrc": "18943:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18943:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18890:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "18890:43:14"
																},
																"nativeSrc": "18890:72:14",
																"nodeType": "YulFunctionCall",
																"src": "18890:72:14"
															},
															"nativeSrc": "18890:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "18890:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19016:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19016:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19029:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19029:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19040:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19040:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19025:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19025:3:14"
																		},
																		"nativeSrc": "19025:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19025:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18972:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "18972:43:14"
																},
																"nativeSrc": "18972:72:14",
																"nodeType": "YulFunctionCall",
																"src": "18972:72:14"
															},
															"nativeSrc": "18972:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "18972:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18609:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18719:9:14",
														"nodeType": "YulTypedName",
														"src": "18719:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18731:6:14",
														"nodeType": "YulTypedName",
														"src": "18731:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18739:6:14",
														"nodeType": "YulTypedName",
														"src": "18739:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18747:6:14",
														"nodeType": "YulTypedName",
														"src": "18747:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18758:4:14",
														"nodeType": "YulTypedName",
														"src": "18758:4:14",
														"type": ""
													}
												],
												"src": "18609:442:14"
											},
											{
												"body": {
													"nativeSrc": "19183:206:14",
													"nodeType": "YulBlock",
													"src": "19183:206:14",
													"statements": [
														{
															"nativeSrc": "19193:26:14",
															"nodeType": "YulAssignment",
															"src": "19193:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19205:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19205:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19216:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19216:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19201:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19201:3:14"
																},
																"nativeSrc": "19201:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19201:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19193:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19193:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19273:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19273:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19286:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19286:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19297:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19297:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19282:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19282:3:14"
																		},
																		"nativeSrc": "19282:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19282:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19229:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19229:43:14"
																},
																"nativeSrc": "19229:71:14",
																"nodeType": "YulFunctionCall",
																"src": "19229:71:14"
															},
															"nativeSrc": "19229:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "19229:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19354:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19354:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19367:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19367:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19378:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19378:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19363:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19363:3:14"
																		},
																		"nativeSrc": "19363:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19363:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19310:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19310:43:14"
																},
																"nativeSrc": "19310:72:14",
																"nodeType": "YulFunctionCall",
																"src": "19310:72:14"
															},
															"nativeSrc": "19310:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "19310:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19057:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19147:9:14",
														"nodeType": "YulTypedName",
														"src": "19147:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19159:6:14",
														"nodeType": "YulTypedName",
														"src": "19159:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19167:6:14",
														"nodeType": "YulTypedName",
														"src": "19167:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19178:4:14",
														"nodeType": "YulTypedName",
														"src": "19178:4:14",
														"type": ""
													}
												],
												"src": "19057:332:14"
											},
											{
												"body": {
													"nativeSrc": "19501:64:14",
													"nodeType": "YulBlock",
													"src": "19501:64:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19523:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19523:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19531:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19531:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19519:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19519:3:14"
																		},
																		"nativeSrc": "19519:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19519:14:14"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "19535:22:14",
																		"nodeType": "YulLiteral",
																		"src": "19535:22:14",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19512:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19512:6:14"
																},
																"nativeSrc": "19512:46:14",
																"nodeType": "YulFunctionCall",
																"src": "19512:46:14"
															},
															"nativeSrc": "19512:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "19512:46:14"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "19395:170:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19493:6:14",
														"nodeType": "YulTypedName",
														"src": "19493:6:14",
														"type": ""
													}
												],
												"src": "19395:170:14"
											},
											{
												"body": {
													"nativeSrc": "19717:220:14",
													"nodeType": "YulBlock",
													"src": "19717:220:14",
													"statements": [
														{
															"nativeSrc": "19727:74:14",
															"nodeType": "YulAssignment",
															"src": "19727:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19793:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19793:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19798:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19798:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19734:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "19734:58:14"
																},
																"nativeSrc": "19734:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19734:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19727:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19727:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19899:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19899:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "19810:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "19810:88:14"
																},
																"nativeSrc": "19810:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19810:93:14"
															},
															"nativeSrc": "19810:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "19810:93:14"
														},
														{
															"nativeSrc": "19912:19:14",
															"nodeType": "YulAssignment",
															"src": "19912:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19923:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19923:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19928:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19928:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19919:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19919:3:14"
																},
																"nativeSrc": "19919:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19919:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19912:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19912:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19571:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19705:3:14",
														"nodeType": "YulTypedName",
														"src": "19705:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19713:3:14",
														"nodeType": "YulTypedName",
														"src": "19713:3:14",
														"type": ""
													}
												],
												"src": "19571:366:14"
											},
											{
												"body": {
													"nativeSrc": "20114:248:14",
													"nodeType": "YulBlock",
													"src": "20114:248:14",
													"statements": [
														{
															"nativeSrc": "20124:26:14",
															"nodeType": "YulAssignment",
															"src": "20124:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20136:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20136:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20147:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20147:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20132:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20132:3:14"
																},
																"nativeSrc": "20132:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20132:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20124:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20124:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20171:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20171:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20182:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20182:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20167:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20167:3:14"
																		},
																		"nativeSrc": "20167:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20167:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20190:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20190:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20196:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20196:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20186:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20186:3:14"
																		},
																		"nativeSrc": "20186:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20186:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20160:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20160:6:14"
																},
																"nativeSrc": "20160:47:14",
																"nodeType": "YulFunctionCall",
																"src": "20160:47:14"
															},
															"nativeSrc": "20160:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "20160:47:14"
														},
														{
															"nativeSrc": "20216:139:14",
															"nodeType": "YulAssignment",
															"src": "20216:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20350:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "20350:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20224:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "20224:124:14"
																},
																"nativeSrc": "20224:131:14",
																"nodeType": "YulFunctionCall",
																"src": "20224:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20216:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20216:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19943:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20094:9:14",
														"nodeType": "YulTypedName",
														"src": "20094:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20109:4:14",
														"nodeType": "YulTypedName",
														"src": "20109:4:14",
														"type": ""
													}
												],
												"src": "19943:419:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1140_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1140_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1140_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1140__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1140_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mint fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378(memPtr) {\n\n        mstore(add(memPtr, 0), \"Redeem fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid treasury\")\n\n    }\n\n    function abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1641": [
									{
										"length": 32,
										"start": 1343
									},
									{
										"length": 32,
										"start": 2311
									},
									{
										"length": 32,
										"start": 2802
									},
									{
										"length": 32,
										"start": 2918
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610171575f3560e01c8063715018a6116100dc578063a0712d6811610095578063dd62ed3e1161006f578063dd62ed3e146103f1578063f0f4426014610421578063f2fde38b1461043d578063fd967f471461045957610171565b8063a0712d6814610389578063a9059cbb146103a5578063db006a75146103d557610171565b8063715018a6146102ff5780638456cb59146103095780638da5cb5b1461031357806395d89b411461033157806397c8bcc11461034f5780639ef833d41461036d57610171565b8063313ce5671161012e578063313ce5671461024d57806332cb6b0c1461026b5780633f4ba83a146102895780635c975abb1461029357806361d027b3146102b157806370a08231146102cf57610171565b806306fdde0314610175578063095ea7b31461019357806309f6442c146101c35780630c577bdc146101e157806318160ddd146101ff57806323b872dd1461021d575b5f80fd5b61017d610477565b60405161018a919061198e565b60405180910390f35b6101ad60048036038101906101a89190611a3f565b610507565b6040516101ba9190611a97565b60405180910390f35b6101cb610529565b6040516101d89190611acc565b60405180910390f35b6101e961053d565b6040516101f69190611b40565b60405180910390f35b610207610561565b6040516102149190611b68565b60405180910390f35b61023760048036038101906102329190611b81565b61056a565b6040516102449190611a97565b60405180910390f35b610255610598565b6040516102629190611bec565b60405180910390f35b6102736105a0565b6040516102809190611b68565b60405180910390f35b6102916105b0565b005b61029b6105c2565b6040516102a89190611a97565b60405180910390f35b6102b96105d8565b6040516102c69190611c14565b60405180910390f35b6102e960048036038101906102e49190611c2d565b6105fd565b6040516102f69190611b68565b60405180910390f35b610307610642565b005b610311610655565b005b61031b610667565b6040516103289190611c14565b60405180910390f35b61033961068f565b604051610346919061198e565b60405180910390f35b61035761071f565b6040516103649190611acc565b60405180910390f35b61038760048036038101906103829190611c82565b610733565b005b6103a3600480360381019061039e9190611cc0565b61084c565b005b6103bf60048036038101906103ba9190611a3f565b610a2a565b6040516103cc9190611a97565b60405180910390f35b6103ef60048036038101906103ea9190611cc0565b610a4c565b005b61040b60048036038101906104069190611ceb565b610c0a565b6040516104189190611b68565b60405180910390f35b61043b60048036038101906104369190611c2d565b610c8c565b005b61045760048036038101906104529190611c2d565b610d7c565b005b610461610e00565b60405161046e9190611acc565b60405180910390f35b60606003805461048690611d56565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290611d56565b80156104fd5780601f106104d4576101008083540402835291602001916104fd565b820191905f5260205f20905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b5f80610511610e06565b905061051e818585610e0d565b600191505092915050565b600760169054906101000a900461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b5f80610574610e06565b9050610581858285610e1f565b61058c858585610eb1565b60019150509392505050565b5f6012905090565b6b033b2e3c9fd0803ce800000081565b6105b8610fa1565b6105c0611028565b565b5f600560149054906101000a900460ff16905090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61064a610fa1565b6106535f61108a565b565b61065d610fa1565b61066561114d565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069e90611d56565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca90611d56565b80156107155780601f106106ec57610100808354040283529160200191610715565b820191905f5260205f20905b8154815290600101906020018083116106f857829003601f168201915b5050505050905090565b600760149054906101000a900461ffff1681565b61073b610fa1565b61271061ffff168261ffff161115610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90611dd0565b60405180910390fd5b61271061ffff168161ffff1611156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90611e38565b60405180910390fd5b81600760146101000a81548161ffff021916908361ffff16021790555080600760166101000a81548161ffff021916908361ffff1602179055507f2ac80c14c28700f7b5e36f947d572149fe2e3947bac32c3a8c098f3e03722c118282604051610840929190611e56565b60405180910390a15050565b6108546111b0565b61085c6111fa565b5f811161089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089590611ec7565b60405180910390fd5b6b033b2e3c9fd0803ce8000000816108b4610561565b6108be9190611f12565b11156108ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f690611f8f565b60405180910390fd5b61094c3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611249909392919063ffffffff16565b5f61271061ffff16600760149054906101000a900461ffff1661ffff16836109749190611fad565b61097e919061201b565b90505f818361098d919061204b565b905061099933826112cb565b5f8211156109cd576109cc60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836112cb565b5b3373ffffffffffffffffffffffffffffffffffffffff167f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff8284604051610a1592919061207e565b60405180910390a25050610a2761134a565b50565b5f80610a34610e06565b9050610a41818585610eb1565b600191505092915050565b610a546111b0565b610a5c6111fa565b5f8111610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611ec7565b60405180910390fd5b5f61271061ffff16600760169054906101000a900461ffff1661ffff1683610ac69190611fad565b610ad0919061201b565b90505f8183610adf919061204b565b9050610aeb3384611354565b610b3633827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113d39092919063ffffffff16565b5f821115610bab57610baa60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113d39092919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167f484c40561359f3e3b8be9101897f8680aa82fbe1df9fd9038e0dbc6284032646848385604051610bf5939291906120a5565b60405180910390a25050610c0761134a565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c94610fa1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf990612124565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d181604051610d719190611c14565b60405180910390a150565b610d84610fa1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610df4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610deb9190611c14565b60405180910390fd5b610dfd8161108a565b50565b61271081565b5f33905090565b610e1a8383836001611452565b505050565b5f610e2a8484610c0a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610eab5781811015610e9c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e9393929190612142565b60405180910390fd5b610eaa84848484035f611452565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f21575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f189190611c14565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f91575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f889190611c14565b60405180910390fd5b610f9c838383611621565b505050565b610fa9610e06565b73ffffffffffffffffffffffffffffffffffffffff16610fc7610667565b73ffffffffffffffffffffffffffffffffffffffff161461102657610fea610e06565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161101d9190611c14565b60405180910390fd5b565b61103061183a565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611073610e06565b6040516110809190611c14565b60405180910390a1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111556111b0565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611199610e06565b6040516111a69190611c14565b60405180910390a1565b6111b86105c2565b156111f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ef906121c1565b60405180910390fd5b565b60026006540361123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123690612229565b60405180910390fd5b6002600681905550565b6112c5848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161127e93929190612247565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611883565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361133b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113329190611c14565b60405180910390fd5b6113465f8383611621565b5050565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113c4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113bb9190611c14565b60405180910390fd5b6113cf825f83611621565b5050565b61144d838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161140692919061227c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611883565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114c2575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114b99190611c14565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611532575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115299190611c14565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561161b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116129190611b68565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611671578060025f8282546116659190611f12565b9250508190555061173f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116fa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116f193929190612142565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611786578060025f82825403925050819055506117d0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161182d9190611b68565b60405180910390a3505050565b6118426105c2565b611881576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611878906122ed565b60405180910390fd5b565b5f8060205f8451602086015f885af1806118a2576040513d5f823e3d81fd5b3d92505f519150505f82146118bb5760018114156118d6565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561191857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161190f9190611c14565b60405180910390fd5b50505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119608261191e565b61196a8185611928565b935061197a818560208601611938565b61198381611946565b840191505092915050565b5f6020820190508181035f8301526119a68184611956565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119db826119b2565b9050919050565b6119eb816119d1565b81146119f5575f80fd5b50565b5f81359050611a06816119e2565b92915050565b5f819050919050565b611a1e81611a0c565b8114611a28575f80fd5b50565b5f81359050611a3981611a15565b92915050565b5f8060408385031215611a5557611a546119ae565b5b5f611a62858286016119f8565b9250506020611a7385828601611a2b565b9150509250929050565b5f8115159050919050565b611a9181611a7d565b82525050565b5f602082019050611aaa5f830184611a88565b92915050565b5f61ffff82169050919050565b611ac681611ab0565b82525050565b5f602082019050611adf5f830184611abd565b92915050565b5f819050919050565b5f611b08611b03611afe846119b2565b611ae5565b6119b2565b9050919050565b5f611b1982611aee565b9050919050565b5f611b2a82611b0f565b9050919050565b611b3a81611b20565b82525050565b5f602082019050611b535f830184611b31565b92915050565b611b6281611a0c565b82525050565b5f602082019050611b7b5f830184611b59565b92915050565b5f805f60608486031215611b9857611b976119ae565b5b5f611ba5868287016119f8565b9350506020611bb6868287016119f8565b9250506040611bc786828701611a2b565b9150509250925092565b5f60ff82169050919050565b611be681611bd1565b82525050565b5f602082019050611bff5f830184611bdd565b92915050565b611c0e816119d1565b82525050565b5f602082019050611c275f830184611c05565b92915050565b5f60208284031215611c4257611c416119ae565b5b5f611c4f848285016119f8565b91505092915050565b611c6181611ab0565b8114611c6b575f80fd5b50565b5f81359050611c7c81611c58565b92915050565b5f8060408385031215611c9857611c976119ae565b5b5f611ca585828601611c6e565b9250506020611cb685828601611c6e565b9150509250929050565b5f60208284031215611cd557611cd46119ae565b5b5f611ce284828501611a2b565b91505092915050565b5f8060408385031215611d0157611d006119ae565b5b5f611d0e858286016119f8565b9250506020611d1f858286016119f8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611d6d57607f821691505b602082108103611d8057611d7f611d29565b5b50919050565b7f4d696e742066656520746f6f20686967680000000000000000000000000000005f82015250565b5f611dba601183611928565b9150611dc582611d86565b602082019050919050565b5f6020820190508181035f830152611de781611dae565b9050919050565b7f52656465656d2066656520746f6f2068696768000000000000000000000000005f82015250565b5f611e22601383611928565b9150611e2d82611dee565b602082019050919050565b5f6020820190508181035f830152611e4f81611e16565b9050919050565b5f604082019050611e695f830185611abd565b611e766020830184611abd565b9392505050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611eb1601283611928565b9150611ebc82611e7d565b602082019050919050565b5f6020820190508181035f830152611ede81611ea5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f1c82611a0c565b9150611f2783611a0c565b9250828201905080821115611f3f57611f3e611ee5565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f611f79601283611928565b9150611f8482611f45565b602082019050919050565b5f6020820190508181035f830152611fa681611f6d565b9050919050565b5f611fb782611a0c565b9150611fc283611a0c565b9250828202611fd081611a0c565b91508282048414831517611fe757611fe6611ee5565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61202582611a0c565b915061203083611a0c565b9250826120405761203f611fee565b5b828204905092915050565b5f61205582611a0c565b915061206083611a0c565b925082820390508181111561207857612077611ee5565b5b92915050565b5f6040820190506120915f830185611b59565b61209e6020830184611b59565b9392505050565b5f6060820190506120b85f830186611b59565b6120c56020830185611b59565b6120d26040830184611b59565b949350505050565b7f496e76616c6964207472656173757279000000000000000000000000000000005f82015250565b5f61210e601083611928565b9150612119826120da565b602082019050919050565b5f6020820190508181035f83015261213b81612102565b9050919050565b5f6060820190506121555f830186611c05565b6121626020830185611b59565b61216f6040830184611b59565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6121ab601083611928565b91506121b682612177565b602082019050919050565b5f6020820190508181035f8301526121d88161219f565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612213601f83611928565b915061221e826121df565b602082019050919050565b5f6020820190508181035f83015261224081612207565b9050919050565b5f60608201905061225a5f830186611c05565b6122676020830185611c05565b6122746040830184611b59565b949350505050565b5f60408201905061228f5f830185611c05565b61229c6020830184611b59565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6122d7601483611928565b91506122e2826122a3565b602082019050919050565b5f6020820190508181035f830152612304816122cb565b905091905056fea264697066735822122078a243665dadd9c7bff54dc5b192d101192b6720b707f1b847b4dd41c79c7d8a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0x459 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x3D5 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x97C8BCC1 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x9EF833D4 EQ PUSH2 0x36D JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CF JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x9F6442C EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xC577BDC EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x642 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH2 0x655 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0x667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x461 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x511 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH2 0x51E DUP2 DUP6 DUP6 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x574 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH2 0x581 DUP6 DUP3 DUP6 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x58C DUP6 DUP6 DUP6 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x1028 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64A PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x653 PUSH0 PUSH2 0x108A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x65D PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x665 PUSH2 0x114D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x1D56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x715 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x715 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x73B PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2AC80C14C28700F7B5E36F947D572149FE2E3947BAC32C3A8C098F3E03722C11 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x840 SWAP3 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x854 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x85C PUSH2 0x11FA JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 PUSH2 0x8B4 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST GT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F6 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94C CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1249 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xFFFF AND PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x201B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP PUSH2 0x999 CALLER DUP3 PUSH2 0x12CB JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x9CD JUMPI PUSH2 0x9CC PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x12CB JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25B428DFDE728CCFADDAD7E29E4AC23C24ED7FD1A6E3E3F91894A9A073F5DFFF DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA15 SWAP3 SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xA27 PUSH2 0x134A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA34 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH2 0xA41 DUP2 DUP6 DUP6 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0xA5C PUSH2 0x11FA JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xFFFF AND PUSH1 0x7 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x201B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP PUSH2 0xAEB CALLER DUP5 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xB36 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBAA PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x484C40561359F3E3B8BE9101897F8680AA82FBE1DF9FD9038E0DBC6284032646 DUP5 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xC07 PUSH2 0x134A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC94 PUSH2 0xFA1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF9 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD71 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xD84 PUSH2 0xFA1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0x108A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE1A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1452 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE2A DUP5 DUP5 PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEAB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE9C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1452 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF21 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF91 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9C DUP4 DUP4 DUP4 PUSH2 0x1621 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFA9 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC7 PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1026 JUMPI PUSH2 0xFEA PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x183A JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1073 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1155 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1199 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A6 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x11B8 PUSH2 0x5C2 JUMP JUMPDEST ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1236 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x12C5 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x127E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1883 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1346 PUSH0 DUP4 DUP4 PUSH2 0x1621 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CF DUP3 PUSH0 DUP4 PUSH2 0x1621 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x144D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1406 SWAP3 SWAP2 SWAP1 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1883 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1532 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x161B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1612 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1671 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1665 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x173F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16FA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1786 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17D0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x182D SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1842 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x18BB JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x18D6 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1918 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1960 DUP3 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x196A DUP2 DUP6 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP PUSH2 0x197A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1983 DUP2 PUSH2 0x1946 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A6 DUP2 DUP5 PUSH2 0x1956 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DB DUP3 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EB DUP2 PUSH2 0x19D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A06 DUP2 PUSH2 0x19E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A39 DUP2 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A62 DUP6 DUP3 DUP7 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A73 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAA PUSH0 DUP4 ADD DUP5 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ADF PUSH0 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B08 PUSH2 0x1B03 PUSH2 0x1AFE DUP5 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B19 DUP3 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2A DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3A DUP2 PUSH2 0x1B20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B53 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7B PUSH0 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B97 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA5 DUP7 DUP3 DUP8 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BB6 DUP7 DUP3 DUP8 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BC7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE6 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BFF PUSH0 DUP4 ADD DUP5 PUSH2 0x1BDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C0E DUP2 PUSH2 0x19D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C27 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4F DUP5 DUP3 DUP6 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C61 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7C DUP2 PUSH2 0x1C58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C98 JUMPI PUSH2 0x1C97 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA5 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1D00 PUSH2 0x19AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0E DUP6 DUP3 DUP7 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1F DUP6 DUP3 DUP7 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D6D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D80 JUMPI PUSH2 0x1D7F PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E742066656520746F6F2068696768000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBA PUSH1 0x11 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC5 DUP3 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE7 DUP2 PUSH2 0x1DAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52656465656D2066656520746F6F206869676800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E22 PUSH1 0x13 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2D DUP3 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4F DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E69 PUSH0 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1E76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB1 PUSH1 0x12 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBC DUP3 PUSH2 0x1E7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDE DUP2 PUSH2 0x1EA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F1C DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F3F JUMPI PUSH2 0x1F3E PUSH2 0x1EE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F79 PUSH1 0x12 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB7 DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FD0 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FE7 JUMPI PUSH2 0x1FE6 PUSH2 0x1EE5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2025 DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x2030 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2055 DUP3 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH2 0x2060 DUP4 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2078 JUMPI PUSH2 0x2077 PUSH2 0x1EE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2091 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x209E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20B8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x20C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x20D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420747265617375727900000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x210E PUSH1 0x10 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x2119 DUP3 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x213B DUP2 PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2155 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x2162 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x216F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21AB PUSH1 0x10 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B6 DUP3 PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D8 DUP2 PUSH2 0x219F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2213 PUSH1 0x1F DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x221E DUP3 PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2240 DUP2 PUSH2 0x2207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x225A PUSH0 DUP4 ADD DUP7 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x2267 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x2274 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228F PUSH0 DUP4 ADD DUP6 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x229C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22D7 PUSH1 0x14 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E2 DUP3 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2304 DUP2 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xA243665DADD9C7BFF54DC5B192D101192B6720B707F1B847B4 0xDD COINBASE 0xC7 SWAP13 PUSH30 0x8A64736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "607:4839:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1122:26:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;771:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1230:59:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5062:65;;;:::i;:::-;;1615:84:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;858:23:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;4937:61:13;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1044:24:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2764:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3495:643;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4269:590:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3166:199:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;936:39:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:7;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1122:26:13:-;;;;;;;;;;;;;:::o;771:28::-;;;:::o;2849:97:7:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;1230:59:13:-;1267:22;1230:59;:::o;5062:65::-;1531:13:0;:11;:13::i;:::-;5110:10:13::1;:8;:10::i;:::-;5062:65::o:0;1615:84:5:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;858:23:13:-;;;;;;;;;;;;;:::o;3004:116:7:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4937:61:13:-;1531:13:0;:11;:13::i;:::-;4983:8:13::1;:6;:8::i;:::-;4937:61::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:7:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1044:24:13:-;;;;;;;;;;;;;:::o;2764:339::-;1531:13:0;:11;:13::i;:::-;969:6:13::1;2860:22;;:11;:22;;;;2852:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;969:6;2922:24;;:13;:24;;;;2914:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2993:11;2980:10;;:24;;;;;;;;;;;;;;;;;;3029:13;3014:12;;:28;;;;;;;;;;;;;;;;;;3057:39;3069:11;3082:13;3057:39;;;;;;;:::i;:::-;;;;;;;;2764:339:::0;;:::o;3495:643::-;1239:19:5;:17;:19::i;:::-;2261:21:6::1;:19;:21::i;:::-;3616:1:13::2;3607:6;:10;3599:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1267:22;3674:6;3658:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;3650:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3758:56;3780:10;3800:4;3807:6;3758:4;:21;;;;:56;;;;;;:::i;:::-;3861:11;969:6;3875:31;;3885:10;;;;;;;;;;;3876:19;;:6;:19;;;;:::i;:::-;3875:31;;;;:::i;:::-;3861:45;;3916:11;3939:3;3930:6;:12;;;;:::i;:::-;3916:26;;3998:22;4004:10;4016:3;3998:5;:22::i;:::-;4040:1;4034:3;:7;4030:58;;;4057:20;4063:8;;;;;;;;;;;4073:3;4057:5;:20::i;:::-;4030:58;4110:10;4103:28;;;4122:3;4127;4103:28;;;;;;;:::i;:::-;;;;;;;;3589:549;;2303:20:6::1;:18;:20::i;:::-;3495:643:13::0;:::o;3315:178:7:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;4269:590:13:-;1239:19:5;:17;:19::i;:::-;2261:21:6::1;:19;:21::i;:::-;4392:1:13::2;4383:6;:10;4375:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4465:11;969:6;4479:33;;4489:12;;;;;;;;;;;4480:21;;:6;:21;;;;:::i;:::-;4479:33;;;;:::i;:::-;4465:47;;4522:11;4545:3;4536:6;:12;;;;:::i;:::-;4522:26;;4598:25;4604:10;4616:6;4598:5;:25::i;:::-;4685:34;4703:10;4715:3;4685:4;:17;;;;:34;;;;;:::i;:::-;4739:1;4733:3;:7;4729:70;;;4756:32;4774:8;;;;;;;;;;;4784:3;4756:4;:17;;;;:32;;;;;:::i;:::-;4729:70;4823:10;4814:38;;;4835:6;4843:3;4848;4814:38;;;;;;;;:::i;:::-;;;;;;;;4365:494;;2303:20:6::1;:18;:20::i;:::-;4269:590:13::0;:::o;3551:140:7:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;3166:199:13:-;1531:13:0;:11;:13::i;:::-;3264:1:13::1;3243:23;;:9;:23;;::::0;3235:52:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3308:9;3297:8;;:20;;;;;;;;;;;;;;;;;;3332:26;3348:9;3332:26;;;;;;:::i;:::-;;;;;;;;3166:199:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;936:39:13:-;969:6;936:39;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;8726:128:7:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:5:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:5:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;2336:287:6:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1618:188:10:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;7458:208:7:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2629:209:6:-;1716:1;2809:7;:22;;;;2629:209::o;7984:206:7:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1219:160:10:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;9701:432:7:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;1945:106:5:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7686:720:10:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:89::-;3375:7;3415:6;3408:5;3404:18;3393:29;;3339:89;;;:::o;3434:115::-;3519:23;3536:5;3519:23;:::i;:::-;3514:3;3507:36;3434:115;;:::o;3555:218::-;3646:4;3684:2;3673:9;3669:18;3661:26;;3697:69;3763:1;3752:9;3748:17;3739:6;3697:69;:::i;:::-;3555:218;;;;:::o;3779:60::-;3807:3;3828:5;3821:12;;3779:60;;;:::o;3845:142::-;3895:9;3928:53;3946:34;3955:24;3973:5;3955:24;:::i;:::-;3946:34;:::i;:::-;3928:53;:::i;:::-;3915:66;;3845:142;;;:::o;3993:126::-;4043:9;4076:37;4107:5;4076:37;:::i;:::-;4063:50;;3993:126;;;:::o;4125:141::-;4190:9;4223:37;4254:5;4223:37;:::i;:::-;4210:50;;4125:141;;;:::o;4272:161::-;4374:52;4420:5;4374:52;:::i;:::-;4369:3;4362:65;4272:161;;:::o;4439:252::-;4547:4;4585:2;4574:9;4570:18;4562:26;;4598:86;4681:1;4670:9;4666:17;4657:6;4598:86;:::i;:::-;4439:252;;;;:::o;4697:118::-;4784:24;4802:5;4784:24;:::i;:::-;4779:3;4772:37;4697:118;;:::o;4821:222::-;4914:4;4952:2;4941:9;4937:18;4929:26;;4965:71;5033:1;5022:9;5018:17;5009:6;4965:71;:::i;:::-;4821:222;;;;:::o;5049:619::-;5126:6;5134;5142;5191:2;5179:9;5170:7;5166:23;5162:32;5159:119;;;5197:79;;:::i;:::-;5159:119;5317:1;5342:53;5387:7;5378:6;5367:9;5363:22;5342:53;:::i;:::-;5332:63;;5288:117;5444:2;5470:53;5515:7;5506:6;5495:9;5491:22;5470:53;:::i;:::-;5460:63;;5415:118;5572:2;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;:::i;:::-;5588:63;;5543:118;5049:619;;;;;:::o;5674:86::-;5709:7;5749:4;5742:5;5738:16;5727:27;;5674:86;;;:::o;5766:112::-;5849:22;5865:5;5849:22;:::i;:::-;5844:3;5837:35;5766:112;;:::o;5884:214::-;5973:4;6011:2;6000:9;5996:18;5988:26;;6024:67;6088:1;6077:9;6073:17;6064:6;6024:67;:::i;:::-;5884:214;;;;:::o;6104:118::-;6191:24;6209:5;6191:24;:::i;:::-;6186:3;6179:37;6104:118;;:::o;6228:222::-;6321:4;6359:2;6348:9;6344:18;6336:26;;6372:71;6440:1;6429:9;6425:17;6416:6;6372:71;:::i;:::-;6228:222;;;;:::o;6456:329::-;6515:6;6564:2;6552:9;6543:7;6539:23;6535:32;6532:119;;;6570:79;;:::i;:::-;6532:119;6690:1;6715:53;6760:7;6751:6;6740:9;6736:22;6715:53;:::i;:::-;6705:63;;6661:117;6456:329;;;;:::o;6791:120::-;6863:23;6880:5;6863:23;:::i;:::-;6856:5;6853:34;6843:62;;6901:1;6898;6891:12;6843:62;6791:120;:::o;6917:137::-;6962:5;7000:6;6987:20;6978:29;;7016:32;7042:5;7016:32;:::i;:::-;6917:137;;;;:::o;7060:470::-;7126:6;7134;7183:2;7171:9;7162:7;7158:23;7154:32;7151:119;;;7189:79;;:::i;:::-;7151:119;7309:1;7334:52;7378:7;7369:6;7358:9;7354:22;7334:52;:::i;:::-;7324:62;;7280:116;7435:2;7461:52;7505:7;7496:6;7485:9;7481:22;7461:52;:::i;:::-;7451:62;;7406:117;7060:470;;;;;:::o;7536:329::-;7595:6;7644:2;7632:9;7623:7;7619:23;7615:32;7612:119;;;7650:79;;:::i;:::-;7612:119;7770:1;7795:53;7840:7;7831:6;7820:9;7816:22;7795:53;:::i;:::-;7785:63;;7741:117;7536:329;;;;:::o;7871:474::-;7939:6;7947;7996:2;7984:9;7975:7;7971:23;7967:32;7964:119;;;8002:79;;:::i;:::-;7964:119;8122:1;8147:53;8192:7;8183:6;8172:9;8168:22;8147:53;:::i;:::-;8137:63;;8093:117;8249:2;8275:53;8320:7;8311:6;8300:9;8296:22;8275:53;:::i;:::-;8265:63;;8220:118;7871:474;;;;;:::o;8351:180::-;8399:77;8396:1;8389:88;8496:4;8493:1;8486:15;8520:4;8517:1;8510:15;8537:320;8581:6;8618:1;8612:4;8608:12;8598:22;;8665:1;8659:4;8655:12;8686:18;8676:81;;8742:4;8734:6;8730:17;8720:27;;8676:81;8804:2;8796:6;8793:14;8773:18;8770:38;8767:84;;8823:18;;:::i;:::-;8767:84;8588:269;8537:320;;;:::o;8863:167::-;9003:19;8999:1;8991:6;8987:14;8980:43;8863:167;:::o;9036:366::-;9178:3;9199:67;9263:2;9258:3;9199:67;:::i;:::-;9192:74;;9275:93;9364:3;9275:93;:::i;:::-;9393:2;9388:3;9384:12;9377:19;;9036:366;;;:::o;9408:419::-;9574:4;9612:2;9601:9;9597:18;9589:26;;9661:9;9655:4;9651:20;9647:1;9636:9;9632:17;9625:47;9689:131;9815:4;9689:131;:::i;:::-;9681:139;;9408:419;;;:::o;9833:169::-;9973:21;9969:1;9961:6;9957:14;9950:45;9833:169;:::o;10008:366::-;10150:3;10171:67;10235:2;10230:3;10171:67;:::i;:::-;10164:74;;10247:93;10336:3;10247:93;:::i;:::-;10365:2;10360:3;10356:12;10349:19;;10008:366;;;:::o;10380:419::-;10546:4;10584:2;10573:9;10569:18;10561:26;;10633:9;10627:4;10623:20;10619:1;10608:9;10604:17;10597:47;10661:131;10787:4;10661:131;:::i;:::-;10653:139;;10380:419;;;:::o;10805:324::-;10922:4;10960:2;10949:9;10945:18;10937:26;;10973:69;11039:1;11028:9;11024:17;11015:6;10973:69;:::i;:::-;11052:70;11118:2;11107:9;11103:18;11094:6;11052:70;:::i;:::-;10805:324;;;;;:::o;11135:168::-;11275:20;11271:1;11263:6;11259:14;11252:44;11135:168;:::o;11309:366::-;11451:3;11472:67;11536:2;11531:3;11472:67;:::i;:::-;11465:74;;11548:93;11637:3;11548:93;:::i;:::-;11666:2;11661:3;11657:12;11650:19;;11309:366;;;:::o;11681:419::-;11847:4;11885:2;11874:9;11870:18;11862:26;;11934:9;11928:4;11924:20;11920:1;11909:9;11905:17;11898:47;11962:131;12088:4;11962:131;:::i;:::-;11954:139;;11681:419;;;:::o;12106:180::-;12154:77;12151:1;12144:88;12251:4;12248:1;12241:15;12275:4;12272:1;12265:15;12292:191;12332:3;12351:20;12369:1;12351:20;:::i;:::-;12346:25;;12385:20;12403:1;12385:20;:::i;:::-;12380:25;;12428:1;12425;12421:9;12414:16;;12449:3;12446:1;12443:10;12440:36;;;12456:18;;:::i;:::-;12440:36;12292:191;;;;:::o;12489:168::-;12629:20;12625:1;12617:6;12613:14;12606:44;12489:168;:::o;12663:366::-;12805:3;12826:67;12890:2;12885:3;12826:67;:::i;:::-;12819:74;;12902:93;12991:3;12902:93;:::i;:::-;13020:2;13015:3;13011:12;13004:19;;12663:366;;;:::o;13035:419::-;13201:4;13239:2;13228:9;13224:18;13216:26;;13288:9;13282:4;13278:20;13274:1;13263:9;13259:17;13252:47;13316:131;13442:4;13316:131;:::i;:::-;13308:139;;13035:419;;;:::o;13460:410::-;13500:7;13523:20;13541:1;13523:20;:::i;:::-;13518:25;;13557:20;13575:1;13557:20;:::i;:::-;13552:25;;13612:1;13609;13605:9;13634:30;13652:11;13634:30;:::i;:::-;13623:41;;13813:1;13804:7;13800:15;13797:1;13794:22;13774:1;13767:9;13747:83;13724:139;;13843:18;;:::i;:::-;13724:139;13508:362;13460:410;;;;:::o;13876:180::-;13924:77;13921:1;13914:88;14021:4;14018:1;14011:15;14045:4;14042:1;14035:15;14062:185;14102:1;14119:20;14137:1;14119:20;:::i;:::-;14114:25;;14153:20;14171:1;14153:20;:::i;:::-;14148:25;;14192:1;14182:35;;14197:18;;:::i;:::-;14182:35;14239:1;14236;14232:9;14227:14;;14062:185;;;;:::o;14253:194::-;14293:4;14313:20;14331:1;14313:20;:::i;:::-;14308:25;;14347:20;14365:1;14347:20;:::i;:::-;14342:25;;14391:1;14388;14384:9;14376:17;;14415:1;14409:4;14406:11;14403:37;;;14420:18;;:::i;:::-;14403:37;14253:194;;;;:::o;14453:332::-;14574:4;14612:2;14601:9;14597:18;14589:26;;14625:71;14693:1;14682:9;14678:17;14669:6;14625:71;:::i;:::-;14706:72;14774:2;14763:9;14759:18;14750:6;14706:72;:::i;:::-;14453:332;;;;;:::o;14791:442::-;14940:4;14978:2;14967:9;14963:18;14955:26;;14991:71;15059:1;15048:9;15044:17;15035:6;14991:71;:::i;:::-;15072:72;15140:2;15129:9;15125:18;15116:6;15072:72;:::i;:::-;15154;15222:2;15211:9;15207:18;15198:6;15154:72;:::i;:::-;14791:442;;;;;;:::o;15239:166::-;15379:18;15375:1;15367:6;15363:14;15356:42;15239:166;:::o;15411:366::-;15553:3;15574:67;15638:2;15633:3;15574:67;:::i;:::-;15567:74;;15650:93;15739:3;15650:93;:::i;:::-;15768:2;15763:3;15759:12;15752:19;;15411:366;;;:::o;15783:419::-;15949:4;15987:2;15976:9;15972:18;15964:26;;16036:9;16030:4;16026:20;16022:1;16011:9;16007:17;16000:47;16064:131;16190:4;16064:131;:::i;:::-;16056:139;;15783:419;;;:::o;16208:442::-;16357:4;16395:2;16384:9;16380:18;16372:26;;16408:71;16476:1;16465:9;16461:17;16452:6;16408:71;:::i;:::-;16489:72;16557:2;16546:9;16542:18;16533:6;16489:72;:::i;:::-;16571;16639:2;16628:9;16624:18;16615:6;16571:72;:::i;:::-;16208:442;;;;;;:::o;16656:166::-;16796:18;16792:1;16784:6;16780:14;16773:42;16656:166;:::o;16828:366::-;16970:3;16991:67;17055:2;17050:3;16991:67;:::i;:::-;16984:74;;17067:93;17156:3;17067:93;:::i;:::-;17185:2;17180:3;17176:12;17169:19;;16828:366;;;:::o;17200:419::-;17366:4;17404:2;17393:9;17389:18;17381:26;;17453:9;17447:4;17443:20;17439:1;17428:9;17424:17;17417:47;17481:131;17607:4;17481:131;:::i;:::-;17473:139;;17200:419;;;:::o;17625:181::-;17765:33;17761:1;17753:6;17749:14;17742:57;17625:181;:::o;17812:366::-;17954:3;17975:67;18039:2;18034:3;17975:67;:::i;:::-;17968:74;;18051:93;18140:3;18051:93;:::i;:::-;18169:2;18164:3;18160:12;18153:19;;17812:366;;;:::o;18184:419::-;18350:4;18388:2;18377:9;18373:18;18365:26;;18437:9;18431:4;18427:20;18423:1;18412:9;18408:17;18401:47;18465:131;18591:4;18465:131;:::i;:::-;18457:139;;18184:419;;;:::o;18609:442::-;18758:4;18796:2;18785:9;18781:18;18773:26;;18809:71;18877:1;18866:9;18862:17;18853:6;18809:71;:::i;:::-;18890:72;18958:2;18947:9;18943:18;18934:6;18890:72;:::i;:::-;18972;19040:2;19029:9;19025:18;19016:6;18972:72;:::i;:::-;18609:442;;;;;;:::o;19057:332::-;19178:4;19216:2;19205:9;19201:18;19193:26;;19229:71;19297:1;19286:9;19282:17;19273:6;19229:71;:::i;:::-;19310:72;19378:2;19367:9;19363:18;19354:6;19310:72;:::i;:::-;19057:332;;;;;:::o;19395:170::-;19535:22;19531:1;19523:6;19519:14;19512:46;19395:170;:::o;19571:366::-;19713:3;19734:67;19798:2;19793:3;19734:67;:::i;:::-;19727:74;;19810:93;19899:3;19810:93;:::i;:::-;19928:2;19923:3;19919:12;19912:19;;19571:366;;;:::o;19943:419::-;20109:4;20147:2;20136:9;20132:18;20124:26;;20196:9;20190:4;20186:20;20182:1;20171:9;20167:17;20160:47;20224:131;20350:4;20224:131;:::i;:::-;20216:139;;19943:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1805000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_BPS()": "441",
								"MAX_SUPPLY()": "370",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"cusd()": "infinite",
								"decimals()": "361",
								"mint(uint256)": "infinite",
								"mintFeeBps()": "2628",
								"name()": "infinite",
								"owner()": "2582",
								"pause()": "infinite",
								"paused()": "2613",
								"redeem(uint256)": "infinite",
								"redeemFeeBps()": "2585",
								"renounceOwnership()": "infinite",
								"setFees(uint16,uint16)": "infinite",
								"setTreasury(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasury()": "2619",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2104,
									"end": 2699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2272,
									"end": 2282,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "5061646920546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "5041444900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2335,
									"end": 2336,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2311,
									"end": 2337,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2311,
									"end": 2337,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2311,
									"end": 2323,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2311,
									"end": 2337,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2311,
									"end": 2337,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2311,
									"end": 2337,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2303,
									"end": 2362,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2303,
									"end": 2362,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2401,
									"end": 2402,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2403,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2380,
									"end": 2403,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2380,
									"end": 2389,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2380,
									"end": 2403,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2380,
									"end": 2403,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2380,
									"end": 2403,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2372,
									"end": 2424,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 2372,
									"end": 2424,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 969,
									"end": 975,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "2710"
								},
								{
									"begin": 2442,
									"end": 2464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2442,
									"end": 2464,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2442,
									"end": 2453,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2442,
									"end": 2464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2442,
									"end": 2464,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2442,
									"end": 2464,
									"modifierDepth": 2,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2442,
									"end": 2464,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2434,
									"end": 2486,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2434,
									"end": 2486,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 969,
									"end": 975,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "2710"
								},
								{
									"begin": 2504,
									"end": 2528,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2504,
									"end": 2528,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2517,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2528,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2504,
									"end": 2528,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2528,
									"modifierDepth": 2,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2528,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2496,
									"end": 2552,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2496,
									"end": 2552,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2577,
									"end": 2589,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2563,
									"end": 2590,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2563,
									"end": 2590,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2611,
									"end": 2620,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2608,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 2600,
									"end": 2608,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2643,
									"end": 2654,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2640,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 2630,
									"end": 2640,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2630,
									"end": 2654,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2679,
									"end": 2692,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2676,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 2664,
									"end": 2676,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFF"
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2692,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2699,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 934,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 845,
									"end": 934,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 927,
									"name": "PUSH",
									"source": 14,
									"value": "FFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 910,
									"end": 928,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 899,
									"end": 928,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 899,
									"end": 928,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 934,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 845,
									"end": 934,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 845,
									"end": 934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1012,
									"end": 1035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "tag",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1005,
									"end": 1010,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1002,
									"end": 1036,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1127,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1153,
									"end": 1159,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1147,
									"end": 1160,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1138,
									"end": 1160,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1138,
									"end": 1160,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 1195,
									"end": 1200,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1169,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1308,
									"end": 1314,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1324,
									"end": 1330,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1381,
									"end": 1384,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1369,
									"end": 1378,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1360,
									"end": 1367,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1356,
									"end": 1379,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1352,
									"end": 1385,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1349,
									"end": 1469,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1349,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 1349,
									"end": 1469,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1388,
									"end": 1467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1349,
									"end": 1469,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 1349,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 1589,
									"end": 1596,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1580,
									"end": 1586,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1569,
									"end": 1578,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 1565,
									"end": 1587,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1533,
									"end": 1597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "tag",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1523,
									"end": 1597,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 1523,
									"end": 1597,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1479,
									"end": 1607,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1648,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 1728,
									"end": 1735,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1719,
									"end": 1725,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1708,
									"end": 1717,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 1704,
									"end": 1726,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1672,
									"end": 1736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "tag",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1736,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1736,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1617,
									"end": 1746,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1785,
									"end": 1787,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1811,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 1866,
									"end": 1873,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1846,
									"end": 1855,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 1842,
									"end": 1864,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1811,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1811,
									"end": 1874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1811,
									"end": 1874,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 1811,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1801,
									"end": 1874,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1801,
									"end": 1874,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1756,
									"end": 1884,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1923,
									"end": 1925,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1949,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 2004,
									"end": 2011,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1995,
									"end": 2001,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1984,
									"end": 1993,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 1980,
									"end": 2002,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1949,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1949,
									"end": 2012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1949,
									"end": 2012,
									"name": "tag",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1949,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1939,
									"end": 2012,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1939,
									"end": 2012,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1894,
									"end": 2022,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 2029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2035,
									"end": 2134,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 2035,
									"end": 2134,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2087,
									"end": 2093,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2126,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2115,
									"end": 2127,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2105,
									"end": 2127,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2105,
									"end": 2127,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2035,
									"end": 2134,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2035,
									"end": 2134,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2035,
									"end": 2134,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2035,
									"end": 2134,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2140,
									"end": 2320,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2140,
									"end": 2320,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2188,
									"end": 2265,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2185,
									"end": 2186,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2178,
									"end": 2266,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2285,
									"end": 2289,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2282,
									"end": 2283,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2275,
									"end": 2290,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2309,
									"end": 2313,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2299,
									"end": 2314,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2326,
									"end": 2506,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2326,
									"end": 2506,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2374,
									"end": 2451,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2371,
									"end": 2372,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2364,
									"end": 2452,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2471,
									"end": 2475,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 2468,
									"end": 2469,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2461,
									"end": 2476,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2492,
									"end": 2493,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2485,
									"end": 2500,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2512,
									"end": 2832,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 2512,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2556,
									"end": 2562,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2594,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 2587,
									"end": 2591,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2583,
									"end": 2595,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 2573,
									"end": 2595,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2573,
									"end": 2595,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2640,
									"end": 2641,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2634,
									"end": 2638,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2630,
									"end": 2642,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2661,
									"end": 2679,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2651,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 2651,
									"end": 2732,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2717,
									"end": 2721,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 2709,
									"end": 2715,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2705,
									"end": 2722,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2695,
									"end": 2722,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2695,
									"end": 2722,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2651,
									"end": 2732,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 2651,
									"end": 2732,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2779,
									"end": 2781,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2771,
									"end": 2777,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2748,
									"end": 2766,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2745,
									"end": 2783,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2742,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 2742,
									"end": 2826,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2798,
									"end": 2816,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 2798,
									"end": 2816,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2798,
									"end": 2816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2798,
									"end": 2816,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 2798,
									"end": 2816,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2742,
									"end": 2826,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 2742,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2563,
									"end": 2832,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2512,
									"end": 2832,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2512,
									"end": 2832,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2512,
									"end": 2832,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2512,
									"end": 2832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2838,
									"end": 2979,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 2838,
									"end": 2979,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2887,
									"end": 2891,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2910,
									"end": 2913,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2902,
									"end": 2913,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2902,
									"end": 2913,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2933,
									"end": 2936,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2930,
									"end": 2931,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2923,
									"end": 2937,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2967,
									"end": 2971,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2964,
									"end": 2965,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2972,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2946,
									"end": 2972,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2946,
									"end": 2972,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2838,
									"end": 2979,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2838,
									"end": 2979,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2838,
									"end": 2979,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2838,
									"end": 2979,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2985,
									"end": 3078,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 2985,
									"end": 3078,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3022,
									"end": 3028,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3069,
									"end": 3071,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3064,
									"end": 3066,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 3057,
									"end": 3062,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3053,
									"end": 3067,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3049,
									"end": 3072,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 3039,
									"end": 3072,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3039,
									"end": 3072,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2985,
									"end": 3078,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2985,
									"end": 3078,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2985,
									"end": 3078,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2985,
									"end": 3078,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3084,
									"end": 3191,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 3084,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3128,
									"end": 3136,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3183,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3172,
									"end": 3176,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3168,
									"end": 3184,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3147,
									"end": 3184,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3147,
									"end": 3184,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3084,
									"end": 3191,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3084,
									"end": 3191,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3084,
									"end": 3191,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3084,
									"end": 3191,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3084,
									"end": 3191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3197,
									"end": 3590,
									"name": "tag",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 3197,
									"end": 3590,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3266,
									"end": 3272,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3316,
									"end": 3317,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 3304,
									"end": 3314,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3300,
									"end": 3318,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3339,
									"end": 3436,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 3369,
									"end": 3435,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3358,
									"end": 3367,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3339,
									"end": 3436,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 3339,
									"end": 3436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3339,
									"end": 3436,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 3339,
									"end": 3436,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3457,
									"end": 3496,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 3487,
									"end": 3495,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3476,
									"end": 3485,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3457,
									"end": 3496,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 3457,
									"end": 3496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3457,
									"end": 3496,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 3457,
									"end": 3496,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3445,
									"end": 3496,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 3445,
									"end": 3496,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3529,
									"end": 3533,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3525,
									"end": 3534,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3518,
									"end": 3523,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3514,
									"end": 3535,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3505,
									"end": 3535,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 3505,
									"end": 3535,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3578,
									"end": 3582,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3568,
									"end": 3576,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3564,
									"end": 3583,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3554,
									"end": 3584,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3544,
									"end": 3584,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3544,
									"end": 3584,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3273,
									"end": 3590,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3273,
									"end": 3590,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3197,
									"end": 3590,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 3197,
									"end": 3590,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3197,
									"end": 3590,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3197,
									"end": 3590,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3197,
									"end": 3590,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3197,
									"end": 3590,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3596,
									"end": 3673,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 3596,
									"end": 3673,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3633,
									"end": 3640,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3662,
									"end": 3667,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3651,
									"end": 3667,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3651,
									"end": 3667,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3596,
									"end": 3673,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3596,
									"end": 3673,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3596,
									"end": 3673,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3596,
									"end": 3673,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3679,
									"end": 3739,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 3679,
									"end": 3739,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3707,
									"end": 3710,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3728,
									"end": 3733,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3721,
									"end": 3733,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3721,
									"end": 3733,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3679,
									"end": 3739,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3679,
									"end": 3739,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3679,
									"end": 3739,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3679,
									"end": 3739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3745,
									"end": 3887,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 3745,
									"end": 3887,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3795,
									"end": 3804,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3828,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 3846,
									"end": 3880,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 3855,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 3873,
									"end": 3878,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3855,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 3855,
									"end": 3879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3855,
									"end": 3879,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 3855,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3846,
									"end": 3880,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 3846,
									"end": 3880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3846,
									"end": 3880,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 3846,
									"end": 3880,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3828,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 3828,
									"end": 3881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3828,
									"end": 3881,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 3828,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3815,
									"end": 3881,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3815,
									"end": 3881,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3745,
									"end": 3887,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3745,
									"end": 3887,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3745,
									"end": 3887,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3745,
									"end": 3887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3893,
									"end": 3968,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 3893,
									"end": 3968,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3936,
									"end": 3939,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3957,
									"end": 3962,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3962,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3962,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3893,
									"end": 3968,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3893,
									"end": 3968,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3893,
									"end": 3968,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3893,
									"end": 3968,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3974,
									"end": 4243,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3974,
									"end": 4243,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4084,
									"end": 4123,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 4115,
									"end": 4122,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4084,
									"end": 4123,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 4084,
									"end": 4123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4084,
									"end": 4123,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 4084,
									"end": 4123,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4145,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 4194,
									"end": 4235,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 4218,
									"end": 4234,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4235,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 4194,
									"end": 4235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4235,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 4194,
									"end": 4235,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4186,
									"end": 4192,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4179,
									"end": 4183,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4173,
									"end": 4184,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 4145,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 4145,
									"end": 4236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4145,
									"end": 4236,
									"name": "tag",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 4145,
									"end": 4236,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4139,
									"end": 4143,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4132,
									"end": 4237,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4050,
									"end": 4243,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3974,
									"end": 4243,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3974,
									"end": 4243,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3974,
									"end": 4243,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3974,
									"end": 4243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4249,
									"end": 4322,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 4249,
									"end": 4322,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4294,
									"end": 4297,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4249,
									"end": 4322,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4249,
									"end": 4322,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4517,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 4328,
									"end": 4517,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4405,
									"end": 4437,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 4405,
									"end": 4437,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 4405,
									"end": 4437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4405,
									"end": 4437,
									"name": "tag",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 4405,
									"end": 4437,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4446,
									"end": 4511,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 4504,
									"end": 4510,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4496,
									"end": 4502,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4490,
									"end": 4494,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4446,
									"end": 4511,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 4446,
									"end": 4511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4446,
									"end": 4511,
									"name": "tag",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 4446,
									"end": 4511,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4381,
									"end": 4517,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4517,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4517,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4517,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4523,
									"end": 4709,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 4523,
									"end": 4709,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4600,
									"end": 4603,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4593,
									"end": 4598,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4590,
									"end": 4604,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4654,
									"end": 4693,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 4691,
									"end": 4692,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4684,
									"end": 4689,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4654,
									"end": 4693,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 4654,
									"end": 4693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4654,
									"end": 4693,
									"name": "tag",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 4654,
									"end": 4693,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4627,
									"end": 4628,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4620,
									"end": 4625,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4616,
									"end": 4629,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4607,
									"end": 4629,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4607,
									"end": 4629,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "tag",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 4583,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4523,
									"end": 4709,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4523,
									"end": 4709,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4523,
									"end": 4709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 5258,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 4715,
									"end": 5258,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4816,
									"end": 4818,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4811,
									"end": 4814,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4808,
									"end": 4819,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4805,
									"end": 5251,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4805,
									"end": 5251,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 4805,
									"end": 5251,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4850,
									"end": 4888,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 4882,
									"end": 4887,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4850,
									"end": 4888,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 4850,
									"end": 4888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4850,
									"end": 4888,
									"name": "tag",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 4850,
									"end": 4888,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4934,
									"end": 4963,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 4952,
									"end": 4962,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4934,
									"end": 4963,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 4934,
									"end": 4963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4934,
									"end": 4963,
									"name": "tag",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 4934,
									"end": 4963,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4924,
									"end": 4932,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4920,
									"end": 4964,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5117,
									"end": 5119,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5105,
									"end": 5115,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5102,
									"end": 5120,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5099,
									"end": 5148,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5099,
									"end": 5148,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 5099,
									"end": 5148,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5138,
									"end": 5146,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5123,
									"end": 5146,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5123,
									"end": 5146,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5099,
									"end": 5148,
									"name": "tag",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 5099,
									"end": 5148,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5161,
									"end": 5241,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 5217,
									"end": 5239,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 5235,
									"end": 5238,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5217,
									"end": 5239,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 5217,
									"end": 5239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5217,
									"end": 5239,
									"name": "tag",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 5217,
									"end": 5239,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5207,
									"end": 5215,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5203,
									"end": 5240,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5190,
									"end": 5201,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5161,
									"end": 5241,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 5161,
									"end": 5241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5161,
									"end": 5241,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 5161,
									"end": 5241,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4820,
									"end": 5251,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4820,
									"end": 5251,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4805,
									"end": 5251,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 4805,
									"end": 5251,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 5258,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 5258,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 5258,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 5258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5381,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 5264,
									"end": 5381,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5368,
									"end": 5373,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5362,
									"end": 5366,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5358,
									"end": 5374,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 5337,
									"end": 5374,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5337,
									"end": 5374,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5381,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5381,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5381,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5381,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5387,
									"end": 5556,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 5387,
									"end": 5556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5431,
									"end": 5437,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5464,
									"end": 5515,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 5512,
									"end": 5513,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5508,
									"end": 5514,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5500,
									"end": 5505,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5497,
									"end": 5498,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 5493,
									"end": 5506,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 5464,
									"end": 5515,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 5464,
									"end": 5515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5464,
									"end": 5515,
									"name": "tag",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 5464,
									"end": 5515,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5460,
									"end": 5516,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5545,
									"end": 5549,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5539,
									"end": 5543,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5535,
									"end": 5550,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5525,
									"end": 5550,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5525,
									"end": 5550,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5438,
									"end": 5556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5387,
									"end": 5556,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5387,
									"end": 5556,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5387,
									"end": 5556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5387,
									"end": 5556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5387,
									"end": 5556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5561,
									"end": 5856,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 5561,
									"end": 5856,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5637,
									"end": 5641,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5783,
									"end": 5812,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5802,
									"end": 5806,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5783,
									"end": 5812,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 5783,
									"end": 5812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5783,
									"end": 5812,
									"name": "tag",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 5783,
									"end": 5812,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5775,
									"end": 5812,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5775,
									"end": 5812,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5845,
									"end": 5848,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5842,
									"end": 5843,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 5838,
									"end": 5849,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 5832,
									"end": 5836,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5829,
									"end": 5850,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 5821,
									"end": 5850,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5821,
									"end": 5850,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5561,
									"end": 5856,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5561,
									"end": 5856,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5561,
									"end": 5856,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5561,
									"end": 5856,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5561,
									"end": 5856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5861,
									"end": 7256,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 5861,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5978,
									"end": 6015,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 6011,
									"end": 6014,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5978,
									"end": 6015,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 5978,
									"end": 6015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5978,
									"end": 6015,
									"name": "tag",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 5978,
									"end": 6015,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6080,
									"end": 6098,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6072,
									"end": 6078,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6069,
									"end": 6099,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6066,
									"end": 6122,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6066,
									"end": 6122,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 6066,
									"end": 6122,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6102,
									"end": 6120,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 6102,
									"end": 6120,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 6102,
									"end": 6120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6102,
									"end": 6120,
									"name": "tag",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 6102,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6066,
									"end": 6122,
									"name": "tag",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 6066,
									"end": 6122,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6146,
									"end": 6184,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 6178,
									"end": 6182,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6172,
									"end": 6183,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 6146,
									"end": 6184,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 6146,
									"end": 6184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6146,
									"end": 6184,
									"name": "tag",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 6146,
									"end": 6184,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6231,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6283,
									"end": 6289,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6277,
									"end": 6281,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6231,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 6231,
									"end": 6298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6231,
									"end": 6298,
									"name": "tag",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 6231,
									"end": 6298,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6325,
									"end": 6326,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6349,
									"end": 6353,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6336,
									"end": 6353,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6336,
									"end": 6353,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6381,
									"end": 6383,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6373,
									"end": 6379,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6370,
									"end": 6384,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6398,
									"end": 6399,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6393,
									"end": 7011,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6393,
									"end": 7011,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 6393,
									"end": 7011,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 6393,
									"end": 7011,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7055,
									"end": 7056,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7072,
									"end": 7078,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7069,
									"end": 7146,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7069,
									"end": 7146,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "154"
								},
								{
									"begin": 7069,
									"end": 7146,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7121,
									"end": 7130,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7116,
									"end": 7119,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 7112,
									"end": 7131,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7106,
									"end": 7132,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 7097,
									"end": 7132,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7097,
									"end": 7132,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7069,
									"end": 7146,
									"name": "tag",
									"source": 14,
									"value": "154"
								},
								{
									"begin": 7069,
									"end": 7146,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7172,
									"end": 7239,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 7232,
									"end": 7238,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7172,
									"end": 7239,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 7172,
									"end": 7239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7172,
									"end": 7239,
									"name": "tag",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 7172,
									"end": 7239,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7166,
									"end": 7170,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 7159,
									"end": 7240,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 7028,
									"end": 7250,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6363,
									"end": 7250,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "152"
								},
								{
									"begin": 6363,
									"end": 7250,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6393,
									"end": 7011,
									"name": "tag",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 6393,
									"end": 7011,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6445,
									"end": 6449,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6441,
									"end": 6450,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 6433,
									"end": 6439,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6429,
									"end": 6451,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6479,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "156"
								},
								{
									"begin": 6511,
									"end": 6515,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6479,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 6479,
									"end": 6516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6479,
									"end": 6516,
									"name": "tag",
									"source": 14,
									"value": "156"
								},
								{
									"begin": 6479,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6538,
									"end": 6539,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "tag",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6566,
									"end": 6573,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6563,
									"end": 6564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6560,
									"end": 6574,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6645,
									"end": 6654,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6640,
									"end": 6643,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6636,
									"end": 6655,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6630,
									"end": 6656,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6622,
									"end": 6628,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6615,
									"end": 6657,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6696,
									"end": 6697,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6688,
									"end": 6694,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6684,
									"end": 6698,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6674,
									"end": 6698,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6674,
									"end": 6698,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6743,
									"end": 6745,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6732,
									"end": 6741,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6728,
									"end": 6746,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6715,
									"end": 6746,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 6715,
									"end": 6746,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6589,
									"end": 6593,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6586,
									"end": 6587,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6582,
									"end": 6594,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6577,
									"end": 6594,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6577,
									"end": 6594,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "tag",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 6552,
									"end": 6760,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6788,
									"end": 6794,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6779,
									"end": 6786,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6776,
									"end": 6795,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6773,
									"end": 6952,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6773,
									"end": 6952,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 6773,
									"end": 6952,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6846,
									"end": 6855,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6841,
									"end": 6844,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6837,
									"end": 6856,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6831,
									"end": 6857,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6889,
									"end": 6937,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 6931,
									"end": 6935,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6923,
									"end": 6929,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6919,
									"end": 6936,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6908,
									"end": 6917,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6889,
									"end": 6937,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 6889,
									"end": 6937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6889,
									"end": 6937,
									"name": "tag",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 6889,
									"end": 6937,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6881,
									"end": 6887,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6874,
									"end": 6938,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6796,
									"end": 6952,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6773,
									"end": 6952,
									"name": "tag",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 6773,
									"end": 6952,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6998,
									"end": 6999,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6994,
									"end": 6995,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 6986,
									"end": 6992,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6982,
									"end": 6996,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 6978,
									"end": 7000,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6972,
									"end": 6976,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6965,
									"end": 7001,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6400,
									"end": 7011,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6400,
									"end": 7011,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6400,
									"end": 7011,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6363,
									"end": 7250,
									"name": "tag",
									"source": 14,
									"value": "152"
								},
								{
									"begin": 6363,
									"end": 7250,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6363,
									"end": 7250,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5953,
									"end": 7256,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5953,
									"end": 7256,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5953,
									"end": 7256,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5861,
									"end": 7256,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5861,
									"end": 7256,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5861,
									"end": 7256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7380,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 7262,
									"end": 7380,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7349,
									"end": 7373,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 7367,
									"end": 7372,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7349,
									"end": 7373,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 7349,
									"end": 7373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7349,
									"end": 7373,
									"name": "tag",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 7349,
									"end": 7373,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7344,
									"end": 7347,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7337,
									"end": 7374,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7380,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7380,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7262,
									"end": 7380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7386,
									"end": 7608,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 7386,
									"end": 7608,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7479,
									"end": 7483,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7517,
									"end": 7519,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7506,
									"end": 7515,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7502,
									"end": 7520,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7494,
									"end": 7520,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7494,
									"end": 7520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7530,
									"end": 7601,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 7598,
									"end": 7599,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7587,
									"end": 7596,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7583,
									"end": 7600,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7574,
									"end": 7580,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7530,
									"end": 7601,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 7530,
									"end": 7601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7530,
									"end": 7601,
									"name": "tag",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 7530,
									"end": 7601,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7386,
									"end": 7608,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7386,
									"end": 7608,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7386,
									"end": 7608,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7386,
									"end": 7608,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7386,
									"end": 7608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7698,
									"end": 7709,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7732,
									"end": 7738,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7727,
									"end": 7730,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7720,
									"end": 7739,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 7772,
									"end": 7776,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7767,
									"end": 7770,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7763,
									"end": 7777,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7748,
									"end": 7777,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7748,
									"end": 7777,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7614,
									"end": 7783,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7789,
									"end": 7959,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 7789,
									"end": 7959,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7929,
									"end": 7951,
									"name": "PUSH",
									"source": 14,
									"value": "496E76616C696420435553442061646472657373000000000000000000000000"
								},
								{
									"begin": 7925,
									"end": 7926,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7917,
									"end": 7923,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7913,
									"end": 7927,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7906,
									"end": 7952,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 7789,
									"end": 7959,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7789,
									"end": 7959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7965,
									"end": 8331,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 7965,
									"end": 8331,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8107,
									"end": 8110,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8128,
									"end": 8195,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "169"
								},
								{
									"begin": 8192,
									"end": 8194,
									"name": "PUSH",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 8187,
									"end": 8190,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8128,
									"end": 8195,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 8128,
									"end": 8195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8128,
									"end": 8195,
									"name": "tag",
									"source": 14,
									"value": "169"
								},
								{
									"begin": 8128,
									"end": 8195,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8121,
									"end": 8195,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8121,
									"end": 8195,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8204,
									"end": 8297,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "170"
								},
								{
									"begin": 8293,
									"end": 8296,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8204,
									"end": 8297,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 8204,
									"end": 8297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8204,
									"end": 8297,
									"name": "tag",
									"source": 14,
									"value": "170"
								},
								{
									"begin": 8204,
									"end": 8297,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8322,
									"end": 8324,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8317,
									"end": 8320,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8313,
									"end": 8325,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8306,
									"end": 8325,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8306,
									"end": 8325,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7965,
									"end": 8331,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7965,
									"end": 8331,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7965,
									"end": 8331,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7965,
									"end": 8331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8337,
									"end": 8756,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 8337,
									"end": 8756,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8503,
									"end": 8507,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8541,
									"end": 8543,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8530,
									"end": 8539,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8526,
									"end": 8544,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8518,
									"end": 8544,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8518,
									"end": 8544,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8590,
									"end": 8599,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8584,
									"end": 8588,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8580,
									"end": 8600,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 8576,
									"end": 8577,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8565,
									"end": 8574,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8561,
									"end": 8578,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8554,
									"end": 8601,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 8618,
									"end": 8749,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "172"
								},
								{
									"begin": 8744,
									"end": 8748,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8618,
									"end": 8749,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 8618,
									"end": 8749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8618,
									"end": 8749,
									"name": "tag",
									"source": 14,
									"value": "172"
								},
								{
									"begin": 8618,
									"end": 8749,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8610,
									"end": 8749,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8610,
									"end": 8749,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8337,
									"end": 8756,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8337,
									"end": 8756,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8337,
									"end": 8756,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8337,
									"end": 8756,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8762,
									"end": 8928,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 8762,
									"end": 8928,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8902,
									"end": 8920,
									"name": "PUSH",
									"source": 14,
									"value": "496E76616C696420747265617375727900000000000000000000000000000000"
								},
								{
									"begin": 8898,
									"end": 8899,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8890,
									"end": 8896,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8886,
									"end": 8900,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8879,
									"end": 8921,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 8762,
									"end": 8928,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8762,
									"end": 8928,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8934,
									"end": 9300,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 8934,
									"end": 9300,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9076,
									"end": 9079,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9097,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "175"
								},
								{
									"begin": 9161,
									"end": 9163,
									"name": "PUSH",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 9156,
									"end": 9159,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 9097,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 9097,
									"end": 9164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9097,
									"end": 9164,
									"name": "tag",
									"source": 14,
									"value": "175"
								},
								{
									"begin": 9097,
									"end": 9164,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9090,
									"end": 9164,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9090,
									"end": 9164,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9173,
									"end": 9266,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "176"
								},
								{
									"begin": 9262,
									"end": 9265,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9173,
									"end": 9266,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 9173,
									"end": 9266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9173,
									"end": 9266,
									"name": "tag",
									"source": 14,
									"value": "176"
								},
								{
									"begin": 9173,
									"end": 9266,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9291,
									"end": 9293,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 9286,
									"end": 9289,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9282,
									"end": 9294,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9275,
									"end": 9294,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9275,
									"end": 9294,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8934,
									"end": 9300,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8934,
									"end": 9300,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8934,
									"end": 9300,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8934,
									"end": 9300,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9306,
									"end": 9725,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 9306,
									"end": 9725,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9472,
									"end": 9476,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9510,
									"end": 9512,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 9499,
									"end": 9508,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9495,
									"end": 9513,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9487,
									"end": 9513,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9487,
									"end": 9513,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9559,
									"end": 9568,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 9553,
									"end": 9557,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 9549,
									"end": 9569,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 9545,
									"end": 9546,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9534,
									"end": 9543,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 9530,
									"end": 9547,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9523,
									"end": 9570,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 9587,
									"end": 9718,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "178"
								},
								{
									"begin": 9713,
									"end": 9717,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 9587,
									"end": 9718,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 9587,
									"end": 9718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9587,
									"end": 9718,
									"name": "tag",
									"source": 14,
									"value": "178"
								},
								{
									"begin": 9587,
									"end": 9718,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9579,
									"end": 9718,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9579,
									"end": 9718,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9306,
									"end": 9725,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9306,
									"end": 9725,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9306,
									"end": 9725,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9306,
									"end": 9725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9731,
									"end": 9898,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 9731,
									"end": 9898,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9871,
									"end": 9890,
									"name": "PUSH",
									"source": 14,
									"value": "4D696E742066656520746F6F2068696768000000000000000000000000000000"
								},
								{
									"begin": 9867,
									"end": 9868,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9859,
									"end": 9865,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9855,
									"end": 9869,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9848,
									"end": 9891,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 9731,
									"end": 9898,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9731,
									"end": 9898,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9904,
									"end": 10270,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 9904,
									"end": 10270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10046,
									"end": 10049,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 10067,
									"end": 10134,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "181"
								},
								{
									"begin": 10131,
									"end": 10133,
									"name": "PUSH",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 10126,
									"end": 10129,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 10067,
									"end": 10134,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 10067,
									"end": 10134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10067,
									"end": 10134,
									"name": "tag",
									"source": 14,
									"value": "181"
								},
								{
									"begin": 10067,
									"end": 10134,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10060,
									"end": 10134,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 10060,
									"end": 10134,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10143,
									"end": 10236,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "182"
								},
								{
									"begin": 10232,
									"end": 10235,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 10143,
									"end": 10236,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 10143,
									"end": 10236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10143,
									"end": 10236,
									"name": "tag",
									"source": 14,
									"value": "182"
								},
								{
									"begin": 10143,
									"end": 10236,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10261,
									"end": 10263,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 10256,
									"end": 10259,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 10252,
									"end": 10264,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 10245,
									"end": 10264,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 10245,
									"end": 10264,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9904,
									"end": 10270,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9904,
									"end": 10270,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9904,
									"end": 10270,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9904,
									"end": 10270,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10276,
									"end": 10695,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 10276,
									"end": 10695,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10442,
									"end": 10446,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 10480,
									"end": 10482,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 10469,
									"end": 10478,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 10457,
									"end": 10483,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 10457,
									"end": 10483,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10529,
									"end": 10538,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 10523,
									"end": 10527,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 10519,
									"end": 10539,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 10515,
									"end": 10516,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 10504,
									"end": 10513,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 10500,
									"end": 10517,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 10493,
									"end": 10540,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 10557,
									"end": 10688,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "184"
								},
								{
									"begin": 10683,
									"end": 10687,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 10557,
									"end": 10688,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 10557,
									"end": 10688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10557,
									"end": 10688,
									"name": "tag",
									"source": 14,
									"value": "184"
								},
								{
									"begin": 10557,
									"end": 10688,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10549,
									"end": 10688,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 10549,
									"end": 10688,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10276,
									"end": 10695,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 10276,
									"end": 10695,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 10276,
									"end": 10695,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10276,
									"end": 10695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10701,
									"end": 10870,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 10701,
									"end": 10870,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10841,
									"end": 10862,
									"name": "PUSH",
									"source": 14,
									"value": "52656465656D2066656520746F6F206869676800000000000000000000000000"
								},
								{
									"begin": 10837,
									"end": 10838,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 10829,
									"end": 10835,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 10825,
									"end": 10839,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 10818,
									"end": 10863,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 10701,
									"end": 10870,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10701,
									"end": 10870,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10876,
									"end": 11242,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 10876,
									"end": 11242,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 11018,
									"end": 11021,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 11039,
									"end": 11106,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "187"
								},
								{
									"begin": 11103,
									"end": 11105,
									"name": "PUSH",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 11098,
									"end": 11101,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 11039,
									"end": 11106,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 11039,
									"end": 11106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 11039,
									"end": 11106,
									"name": "tag",
									"source": 14,
									"value": "187"
								},
								{
									"begin": 11039,
									"end": 11106,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 11032,
									"end": 11106,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 11032,
									"end": 11106,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 11115,
									"end": 11208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "188"
								},
								{
									"begin": 11204,
									"end": 11207,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 11115,
									"end": 11208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 11115,
									"end": 11208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 11115,
									"end": 11208,
									"name": "tag",
									"source": 14,
									"value": "188"
								},
								{
									"begin": 11115,
									"end": 11208,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 11233,
									"end": 11235,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 11228,
									"end": 11231,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 11224,
									"end": 11236,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 11217,
									"end": 11236,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 11217,
									"end": 11236,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10876,
									"end": 11242,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 10876,
									"end": 11242,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 10876,
									"end": 11242,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10876,
									"end": 11242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 11248,
									"end": 11667,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 11248,
									"end": 11667,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 11414,
									"end": 11418,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 11452,
									"end": 11454,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 11441,
									"end": 11450,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 11437,
									"end": 11455,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 11429,
									"end": 11455,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 11429,
									"end": 11455,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 11501,
									"end": 11510,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 11495,
									"end": 11499,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 11491,
									"end": 11511,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 11487,
									"end": 11488,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 11476,
									"end": 11485,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 11472,
									"end": 11489,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 11465,
									"end": 11512,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 11529,
									"end": 11660,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "190"
								},
								{
									"begin": 11655,
									"end": 11659,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 11529,
									"end": 11660,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 11529,
									"end": 11660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 11529,
									"end": 11660,
									"name": "tag",
									"source": 14,
									"value": "190"
								},
								{
									"begin": 11529,
									"end": 11660,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 11521,
									"end": 11660,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 11521,
									"end": 11660,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 11248,
									"end": 11667,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 11248,
									"end": 11667,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 11248,
									"end": 11667,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 11248,
									"end": 11667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1641"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 5446,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078a243665dadd9c7bff54dc5b192d101192b6720b707f1b847b4dd41c79c7d8a64736f6c634300081a0033",
									".code": [
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "A0712D68"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "F0F44260"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "FD967F47"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "A0712D68"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "DB006A75"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "97C8BCC1"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "9EF833D4"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "32CB6B0C"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "3F4BA83A"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "61D027B3"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "9F6442C"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "C577BDC"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 5446,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1122,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1122,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 771,
											"end": 799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 771,
											"end": 799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1230,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 1230,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5062,
											"end": 5127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 858,
											"end": 881,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 858,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 858,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4937,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1044,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1044,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2764,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2764,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3495,
											"end": 4138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3495,
											"end": 4138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 4269,
											"end": 4859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 4269,
											"end": 4859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 3166,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3166,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 975,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 936,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 936,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1641"
										},
										{
											"begin": 771,
											"end": 799,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 771,
											"end": 799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1267,
											"end": 1289,
											"name": "PUSH",
											"source": 13,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 1230,
											"end": 1289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5062,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 5110,
											"end": 5118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 5110,
											"end": 5120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5110,
											"end": 5120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 5110,
											"end": 5120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 858,
											"end": 881,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 858,
											"end": 881,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 858,
											"end": 881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4983,
											"end": 4991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4983,
											"end": 4989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4983,
											"end": 4991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 4991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4983,
											"end": 4991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4937,
											"end": 4998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 2860,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 2860,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 2860,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2882,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 2852,
											"end": 2904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2852,
											"end": 2904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 969,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 2922,
											"end": 2946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 2922,
											"end": 2946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 2922,
											"end": 2946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2946,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2946,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2914,
											"end": 2970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2914,
											"end": 2970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2980,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3029,
											"end": 3042,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3014,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3042,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2AC80C14C28700F7B5E36F947D572149FE2E3947BAC32C3A8C098F3E03722C11"
										},
										{
											"begin": 3069,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 3057,
											"end": 3096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3096,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3613,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3607,
											"end": 3617,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 3599,
											"end": 3640,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 3599,
											"end": 3640,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1267,
											"end": 1289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 3674,
											"end": 3680,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3671,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3658,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 3658,
											"end": 3671,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3671,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3658,
											"end": 3671,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3680,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3658,
											"end": 3680,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3680,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3680,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 3658,
											"end": 3680,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3680,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3658,
											"end": 3680,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3694,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3694,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3650,
											"end": 3717,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3650,
											"end": 3717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3780,
											"end": 3790,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3800,
											"end": 3804,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3813,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1641"
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3758,
											"end": 3814,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3882,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3876,
											"end": 3895,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 3876,
											"end": 3895,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 3875,
											"end": 3906,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3875,
											"end": 3906,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3906,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3906,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 3927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3942,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3936,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3930,
											"end": 3942,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 3942,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 3942,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3998,
											"end": 4020,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4004,
											"end": 4014,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4016,
											"end": 4019,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3998,
											"end": 4003,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 3998,
											"end": 4020,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3998,
											"end": 4020,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3998,
											"end": 4020,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4037,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4041,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4088,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4088,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4030,
											"end": 4088,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4077,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4063,
											"end": 4071,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4076,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4062,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4057,
											"end": 4077,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4077,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4057,
											"end": 4077,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4088,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4030,
											"end": 4088,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4110,
											"end": 4120,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "25B428DFDE728CCFADDAD7E29E4AC23C24ED7FD1A6E3E3F91894A9A073F5DFFF"
										},
										{
											"begin": 4122,
											"end": 4125,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4130,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4103,
											"end": 4131,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4131,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 3589,
											"end": 4138,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3589,
											"end": 4138,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 4138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 4138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4393,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4389,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4393,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 4375,
											"end": 4416,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4486,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 4480,
											"end": 4501,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4480,
											"end": 4501,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 4479,
											"end": 4512,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4479,
											"end": 4512,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4512,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4512,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4522,
											"end": 4533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4548,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4536,
											"end": 4542,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4536,
											"end": 4548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4536,
											"end": 4548,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4536,
											"end": 4548,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4536,
											"end": 4548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4536,
											"end": 4548,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4536,
											"end": 4548,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4536,
											"end": 4548,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4522,
											"end": 4548,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4522,
											"end": 4548,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4604,
											"end": 4614,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4616,
											"end": 4622,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4603,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4598,
											"end": 4623,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4623,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4598,
											"end": 4623,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4703,
											"end": 4713,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4715,
											"end": 4718,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4689,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1641"
										},
										{
											"begin": 4685,
											"end": 4702,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4685,
											"end": 4702,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4702,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4685,
											"end": 4702,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4719,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4685,
											"end": 4719,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4736,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4733,
											"end": 4740,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4729,
											"end": 4799,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4729,
											"end": 4799,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4729,
											"end": 4799,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4774,
											"end": 4782,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4784,
											"end": 4787,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4760,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1641"
										},
										{
											"begin": 4756,
											"end": 4773,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4756,
											"end": 4773,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4773,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4756,
											"end": 4773,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4788,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4756,
											"end": 4788,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4729,
											"end": 4799,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4729,
											"end": 4799,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4833,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "484C40561359F3E3B8BE9101897F8680AA82FBE1DF9FD9038E0DBC6284032646"
										},
										{
											"begin": 4835,
											"end": 4841,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4846,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4851,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4814,
											"end": 4852,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4852,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3235,
											"end": 3287,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3308,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3297,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1"
										},
										{
											"begin": 3348,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3332,
											"end": 3358,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 975,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 969,
											"end": 975,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 936,
											"end": 975,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 936,
											"end": 975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 7,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 7,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 7,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 7,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 7,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 7,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 7,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 10,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3428,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3339,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3375,
											"end": 3382,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3421,
											"name": "PUSH",
											"source": 14,
											"value": "FFFF"
										},
										{
											"begin": 3408,
											"end": 3413,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3428,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3428,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3549,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3434,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 3536,
											"end": 3541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3519,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3507,
											"end": 3543,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3646,
											"end": 3650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3682,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3661,
											"end": 3687,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3661,
											"end": 3687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3765,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3745,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3697,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3766,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 3697,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3555,
											"end": 3773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3807,
											"end": 3810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3833,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3779,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 3987,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3845,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 3955,
											"end": 3979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3946,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 3928,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 3981,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3928,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 3987,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 3987,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 3987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4119,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 3993,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4043,
											"end": 4052,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4076,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 4076,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4076,
											"end": 4113,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 4076,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4063,
											"end": 4113,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4063,
											"end": 4113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4119,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4119,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4125,
											"end": 4266,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 4125,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 4254,
											"end": 4259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4223,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 4223,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4223,
											"end": 4260,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 4223,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4125,
											"end": 4266,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4125,
											"end": 4266,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4125,
											"end": 4266,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4125,
											"end": 4266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4433,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 4272,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4374,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 4420,
											"end": 4425,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4374,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 4374,
											"end": 4426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4374,
											"end": 4426,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 4374,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4369,
											"end": 4372,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4427,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4691,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 4439,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4547,
											"end": 4551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4666,
											"end": 4683,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 4598,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4684,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4598,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4691,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4691,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4815,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4697,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4784,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4802,
											"end": 4807,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4784,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4784,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4784,
											"end": 4808,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4784,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5043,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 4821,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4914,
											"end": 4918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4950,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4937,
											"end": 4955,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 4955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 4955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4965,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 5033,
											"end": 5034,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5018,
											"end": 5035,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4965,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4965,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4965,
											"end": 5036,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 4965,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5043,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5043,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 5043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5179,
											"end": 5188,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5170,
											"end": 5177,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5162,
											"end": 5194,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5197,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 5387,
											"end": 5394,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5363,
											"end": 5385,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 5342,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5395,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5395,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 5515,
											"end": 5522,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5506,
											"end": 5512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5495,
											"end": 5504,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5491,
											"end": 5513,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 5470,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5460,
											"end": 5523,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5460,
											"end": 5523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5415,
											"end": 5533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5619,
											"end": 5641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 5598,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5543,
											"end": 5661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5049,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5709,
											"end": 5716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 5742,
											"end": 5747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5738,
											"end": 5754,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5727,
											"end": 5754,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5727,
											"end": 5754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 5865,
											"end": 5870,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 5849,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5837,
											"end": 5872,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5766,
											"end": 5878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5973,
											"end": 5977,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6000,
											"end": 6009,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 6014,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 6014,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 6014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6086,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6073,
											"end": 6090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6064,
											"end": 6070,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 6024,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5884,
											"end": 6098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6104,
											"end": 6222,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 6104,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 6209,
											"end": 6214,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6191,
											"end": 6215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6215,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 6191,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6179,
											"end": 6216,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6104,
											"end": 6222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6104,
											"end": 6222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6104,
											"end": 6222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6450,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 6228,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6361,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6348,
											"end": 6357,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6362,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6362,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6372,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6438,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6425,
											"end": 6442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6416,
											"end": 6422,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6372,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 6372,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6372,
											"end": 6443,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 6372,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6450,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6450,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6456,
											"end": 6785,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 6456,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6515,
											"end": 6521,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6543,
											"end": 6550,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6539,
											"end": 6562,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6535,
											"end": 6567,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 6570,
											"end": 6649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6691,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 6760,
											"end": 6767,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6751,
											"end": 6757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6740,
											"end": 6749,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 6758,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6715,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6715,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6715,
											"end": 6768,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 6715,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6705,
											"end": 6768,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6705,
											"end": 6768,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6661,
											"end": 6778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6456,
											"end": 6785,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6456,
											"end": 6785,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6456,
											"end": 6785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6456,
											"end": 6785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6456,
											"end": 6785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6791,
											"end": 6911,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 6791,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6863,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6880,
											"end": 6885,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6863,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 6863,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6863,
											"end": 6886,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6863,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6856,
											"end": 6861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6853,
											"end": 6887,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6843,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6843,
											"end": 6905,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6901,
											"end": 6902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6899,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6891,
											"end": 6903,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6843,
											"end": 6905,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6843,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6791,
											"end": 6911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6791,
											"end": 6911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6917,
											"end": 7054,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 6917,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6962,
											"end": 6967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 7007,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6978,
											"end": 7007,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6978,
											"end": 7007,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7016,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 7042,
											"end": 7047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7016,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 7016,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7016,
											"end": 7048,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 7016,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6917,
											"end": 7054,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6917,
											"end": 7054,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6917,
											"end": 7054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6917,
											"end": 7054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6917,
											"end": 7054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7530,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 7060,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7126,
											"end": 7132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7140,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7183,
											"end": 7185,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7171,
											"end": 7180,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7162,
											"end": 7169,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7181,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7154,
											"end": 7186,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7151,
											"end": 7270,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7151,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 7151,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7189,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 7189,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 7189,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7189,
											"end": 7268,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 7189,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7151,
											"end": 7270,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 7151,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7309,
											"end": 7310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 7378,
											"end": 7385,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7369,
											"end": 7375,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7354,
											"end": 7376,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7334,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 7334,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7334,
											"end": 7386,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 7334,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7324,
											"end": 7386,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7324,
											"end": 7386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7437,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7505,
											"end": 7512,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7496,
											"end": 7502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7485,
											"end": 7494,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7481,
											"end": 7503,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7461,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 7461,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7461,
											"end": 7513,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7461,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7451,
											"end": 7513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7451,
											"end": 7513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7406,
											"end": 7523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7530,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7530,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7530,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7865,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 7536,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7646,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7632,
											"end": 7641,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7623,
											"end": 7630,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7619,
											"end": 7642,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7647,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 7650,
											"end": 7729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 7840,
											"end": 7847,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7816,
											"end": 7838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7795,
											"end": 7848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7785,
											"end": 7848,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7785,
											"end": 7848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7741,
											"end": 7858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7865,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7865,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7865,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7865,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8345,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 7871,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7939,
											"end": 7945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 7953,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7996,
											"end": 7998,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7984,
											"end": 7993,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7975,
											"end": 7982,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7971,
											"end": 7994,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7967,
											"end": 7999,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8083,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7964,
											"end": 8083,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8002,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 8002,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 8002,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8002,
											"end": 8081,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 8002,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8083,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7964,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8122,
											"end": 8123,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 8192,
											"end": 8199,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8172,
											"end": 8181,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8168,
											"end": 8190,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8147,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 8147,
											"end": 8200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8147,
											"end": 8200,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 8147,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8137,
											"end": 8200,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8137,
											"end": 8200,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8093,
											"end": 8210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8249,
											"end": 8251,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 8320,
											"end": 8327,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8311,
											"end": 8317,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8300,
											"end": 8309,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8296,
											"end": 8318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8275,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 8275,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8275,
											"end": 8328,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 8275,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8265,
											"end": 8328,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8265,
											"end": 8328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8220,
											"end": 8338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8345,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7871,
											"end": 8345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8351,
											"end": 8531,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 8351,
											"end": 8531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8399,
											"end": 8476,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8396,
											"end": 8397,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8477,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8500,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 8493,
											"end": 8494,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8486,
											"end": 8501,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8517,
											"end": 8518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8525,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8857,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 8537,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8581,
											"end": 8587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8620,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8665,
											"end": 8666,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8659,
											"end": 8663,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8655,
											"end": 8667,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8676,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8676,
											"end": 8757,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8742,
											"end": 8746,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 8734,
											"end": 8740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 8747,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8720,
											"end": 8747,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8720,
											"end": 8747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8676,
											"end": 8757,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8676,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8804,
											"end": 8806,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8807,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8770,
											"end": 8808,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8767,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 8767,
											"end": 8851,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 8823,
											"end": 8841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8767,
											"end": 8851,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 8767,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8588,
											"end": 8857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8857,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8857,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8863,
											"end": 9030,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 8863,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9003,
											"end": 9022,
											"name": "PUSH",
											"source": 14,
											"value": "4D696E742066656520746F6F2068696768000000000000000000000000000000"
										},
										{
											"begin": 8999,
											"end": 9000,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8997,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8987,
											"end": 9001,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8980,
											"end": 9023,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8863,
											"end": 9030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8863,
											"end": 9030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9036,
											"end": 9402,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 9036,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9178,
											"end": 9181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9199,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 9263,
											"end": 9265,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9258,
											"end": 9261,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9199,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 9199,
											"end": 9266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9199,
											"end": 9266,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 9199,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9192,
											"end": 9266,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9192,
											"end": 9266,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9275,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 9364,
											"end": 9367,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9275,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 9275,
											"end": 9368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9275,
											"end": 9368,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 9275,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9393,
											"end": 9395,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9388,
											"end": 9391,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9384,
											"end": 9396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9377,
											"end": 9396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9377,
											"end": 9396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9036,
											"end": 9402,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9036,
											"end": 9402,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9036,
											"end": 9402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9036,
											"end": 9402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9614,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9601,
											"end": 9610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9589,
											"end": 9615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9589,
											"end": 9615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9661,
											"end": 9670,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9655,
											"end": 9659,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9651,
											"end": 9671,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9647,
											"end": 9648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9625,
											"end": 9672,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 9815,
											"end": 9819,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 9689,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9681,
											"end": 9820,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9681,
											"end": 9820,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9833,
											"end": 10002,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 9833,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9973,
											"end": 9994,
											"name": "PUSH",
											"source": 14,
											"value": "52656465656D2066656520746F6F206869676800000000000000000000000000"
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9957,
											"end": 9971,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9950,
											"end": 9995,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9833,
											"end": 10002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9833,
											"end": 10002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10008,
											"end": 10374,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 10008,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10150,
											"end": 10153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 10235,
											"end": 10237,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 10230,
											"end": 10233,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 10171,
											"end": 10238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10238,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 10171,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10164,
											"end": 10238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10164,
											"end": 10238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10247,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 10336,
											"end": 10339,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10247,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 10247,
											"end": 10340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10247,
											"end": 10340,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 10247,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10365,
											"end": 10367,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10360,
											"end": 10363,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10356,
											"end": 10368,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10349,
											"end": 10368,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10349,
											"end": 10368,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10008,
											"end": 10374,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10008,
											"end": 10374,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10008,
											"end": 10374,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10008,
											"end": 10374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10799,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 10380,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10546,
											"end": 10550,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10586,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10573,
											"end": 10582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10569,
											"end": 10587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10561,
											"end": 10587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10561,
											"end": 10587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10633,
											"end": 10642,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10623,
											"end": 10643,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10619,
											"end": 10620,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10608,
											"end": 10617,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10604,
											"end": 10621,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10597,
											"end": 10644,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10661,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 10787,
											"end": 10791,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10661,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 10661,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10661,
											"end": 10792,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 10661,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10653,
											"end": 10792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10653,
											"end": 10792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10799,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 11129,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 10805,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10922,
											"end": 10926,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10960,
											"end": 10962,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10949,
											"end": 10958,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10937,
											"end": 10963,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10937,
											"end": 10963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10973,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 11039,
											"end": 11040,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11037,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11024,
											"end": 11041,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11015,
											"end": 11021,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10973,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10973,
											"end": 11042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10973,
											"end": 11042,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 10973,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11052,
											"end": 11122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11118,
											"end": 11120,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11107,
											"end": 11116,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11094,
											"end": 11100,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11052,
											"end": 11122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 11052,
											"end": 11122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11052,
											"end": 11122,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11052,
											"end": 11122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 11129,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 11129,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 11129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 11129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 11129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 11129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11303,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 11135,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11275,
											"end": 11295,
											"name": "PUSH",
											"source": 14,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 11271,
											"end": 11272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11269,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11259,
											"end": 11273,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11252,
											"end": 11296,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11309,
											"end": 11675,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 11309,
											"end": 11675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11451,
											"end": 11454,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 11536,
											"end": 11538,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 11531,
											"end": 11534,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11472,
											"end": 11539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 11472,
											"end": 11539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11472,
											"end": 11539,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 11472,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11465,
											"end": 11539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11465,
											"end": 11539,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11548,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 11637,
											"end": 11640,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11548,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 11548,
											"end": 11641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11548,
											"end": 11641,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 11548,
											"end": 11641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11666,
											"end": 11668,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11661,
											"end": 11664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11657,
											"end": 11669,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11309,
											"end": 11675,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11309,
											"end": 11675,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11309,
											"end": 11675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11309,
											"end": 11675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 12100,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 11681,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11847,
											"end": 11851,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11885,
											"end": 11887,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11883,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11870,
											"end": 11888,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11862,
											"end": 11888,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11862,
											"end": 11888,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11934,
											"end": 11943,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11928,
											"end": 11932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11924,
											"end": 11944,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11920,
											"end": 11921,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11909,
											"end": 11918,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11905,
											"end": 11922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11945,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11962,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 12088,
											"end": 12092,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11962,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 11962,
											"end": 12093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11962,
											"end": 12093,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 11962,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11954,
											"end": 12093,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11954,
											"end": 12093,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 12100,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 12100,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 12100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 12100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12106,
											"end": 12286,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 12106,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12231,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12144,
											"end": 12232,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12251,
											"end": 12255,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12241,
											"end": 12256,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12275,
											"end": 12279,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12272,
											"end": 12273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12483,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 12292,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12332,
											"end": 12335,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 12369,
											"end": 12370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12351,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 12351,
											"end": 12371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12351,
											"end": 12371,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 12351,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12346,
											"end": 12371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 12385,
											"end": 12405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12380,
											"end": 12405,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12380,
											"end": 12405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12428,
											"end": 12429,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12425,
											"end": 12426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12421,
											"end": 12430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12449,
											"end": 12452,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12446,
											"end": 12447,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12443,
											"end": 12453,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12440,
											"end": 12476,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12440,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 12440,
											"end": 12476,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12456,
											"end": 12474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 12456,
											"end": 12474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 12456,
											"end": 12474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12456,
											"end": 12474,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 12456,
											"end": 12474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12440,
											"end": 12476,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 12440,
											"end": 12476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12483,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12489,
											"end": 12657,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 12489,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "PUSH",
											"source": 14,
											"value": "45786365656473206D617820737570706C790000000000000000000000000000"
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12617,
											"end": 12623,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12613,
											"end": 12627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12606,
											"end": 12650,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12489,
											"end": 12657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12489,
											"end": 12657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12663,
											"end": 13029,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 12663,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 12808,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12826,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 12890,
											"end": 12892,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 12885,
											"end": 12888,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12826,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 12826,
											"end": 12893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12826,
											"end": 12893,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 12826,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12819,
											"end": 12893,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12819,
											"end": 12893,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12902,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 12991,
											"end": 12994,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12902,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 12902,
											"end": 12995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12902,
											"end": 12995,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 12902,
											"end": 12995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13020,
											"end": 13022,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13015,
											"end": 13018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13011,
											"end": 13023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13004,
											"end": 13023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13004,
											"end": 13023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12663,
											"end": 13029,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12663,
											"end": 13029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12663,
											"end": 13029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12663,
											"end": 13029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13035,
											"end": 13454,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 13035,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13201,
											"end": 13205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13239,
											"end": 13241,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13228,
											"end": 13237,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13224,
											"end": 13242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13216,
											"end": 13242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13216,
											"end": 13242,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13288,
											"end": 13297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13282,
											"end": 13286,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13278,
											"end": 13298,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13274,
											"end": 13275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13263,
											"end": 13272,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13259,
											"end": 13276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13252,
											"end": 13299,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13316,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 13442,
											"end": 13446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13316,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 13316,
											"end": 13447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13316,
											"end": 13447,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 13316,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13308,
											"end": 13447,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13308,
											"end": 13447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13035,
											"end": 13454,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13035,
											"end": 13454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13035,
											"end": 13454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13035,
											"end": 13454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13870,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 13460,
											"end": 13870,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13507,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 13541,
											"end": 13542,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13523,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 13523,
											"end": 13543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13523,
											"end": 13543,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 13523,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13518,
											"end": 13543,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13518,
											"end": 13543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13557,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 13575,
											"end": 13576,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13557,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 13557,
											"end": 13577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13557,
											"end": 13577,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 13557,
											"end": 13577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13577,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13577,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13612,
											"end": 13613,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13609,
											"end": 13610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13605,
											"end": 13614,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13634,
											"end": 13664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 13652,
											"end": 13663,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13634,
											"end": 13664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 13634,
											"end": 13664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13634,
											"end": 13664,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 13634,
											"end": 13664,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13623,
											"end": 13664,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13623,
											"end": 13664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13813,
											"end": 13814,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13804,
											"end": 13811,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13800,
											"end": 13815,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 13797,
											"end": 13798,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13794,
											"end": 13816,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13774,
											"end": 13775,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13767,
											"end": 13776,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13747,
											"end": 13830,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 13724,
											"end": 13863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 13724,
											"end": 13863,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 13843,
											"end": 13861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13724,
											"end": 13863,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 13724,
											"end": 13863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13508,
											"end": 13870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13870,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13870,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13876,
											"end": 14056,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 13876,
											"end": 14056,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13924,
											"end": 14001,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13921,
											"end": 13922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13914,
											"end": 14002,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14021,
											"end": 14025,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 14018,
											"end": 14019,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14011,
											"end": 14026,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14045,
											"end": 14049,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14042,
											"end": 14043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14035,
											"end": 14050,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14247,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 14062,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14102,
											"end": 14103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14119,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 14137,
											"end": 14138,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14119,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 14119,
											"end": 14139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14119,
											"end": 14139,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 14119,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14153,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 14171,
											"end": 14172,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14153,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 14153,
											"end": 14173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14153,
											"end": 14173,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 14153,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14148,
											"end": 14173,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14148,
											"end": 14173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14182,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 14182,
											"end": 14217,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14197,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 14197,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 14197,
											"end": 14215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14197,
											"end": 14215,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 14197,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14182,
											"end": 14217,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 14182,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14239,
											"end": 14240,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14236,
											"end": 14237,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14232,
											"end": 14241,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 14227,
											"end": 14241,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14227,
											"end": 14241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14247,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14247,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14253,
											"end": 14447,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 14253,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14293,
											"end": 14297,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14313,
											"end": 14333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 14331,
											"end": 14332,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14313,
											"end": 14333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 14313,
											"end": 14333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14313,
											"end": 14333,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 14313,
											"end": 14333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14308,
											"end": 14333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14308,
											"end": 14333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14347,
											"end": 14367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 14365,
											"end": 14366,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14347,
											"end": 14367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 14347,
											"end": 14367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14347,
											"end": 14367,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 14347,
											"end": 14367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14342,
											"end": 14367,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14342,
											"end": 14367,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14391,
											"end": 14392,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14388,
											"end": 14389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14384,
											"end": 14393,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14376,
											"end": 14393,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14376,
											"end": 14393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14415,
											"end": 14416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14409,
											"end": 14413,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14406,
											"end": 14417,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14403,
											"end": 14440,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14403,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 14403,
											"end": 14440,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 14420,
											"end": 14438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14403,
											"end": 14440,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 14403,
											"end": 14440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14253,
											"end": 14447,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14253,
											"end": 14447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14253,
											"end": 14447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14253,
											"end": 14447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14253,
											"end": 14447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14785,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 14453,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14574,
											"end": 14578,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14612,
											"end": 14614,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14601,
											"end": 14610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14597,
											"end": 14615,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14589,
											"end": 14615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14589,
											"end": 14615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14625,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 14693,
											"end": 14694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14682,
											"end": 14691,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14678,
											"end": 14695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14669,
											"end": 14675,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14625,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 14625,
											"end": 14696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14625,
											"end": 14696,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 14625,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14706,
											"end": 14778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 14774,
											"end": 14776,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14763,
											"end": 14772,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14759,
											"end": 14777,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14750,
											"end": 14756,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14706,
											"end": 14778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 14706,
											"end": 14778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14706,
											"end": 14778,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 14706,
											"end": 14778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14785,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14785,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14940,
											"end": 14944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14978,
											"end": 14980,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14963,
											"end": 14981,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14955,
											"end": 14981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14955,
											"end": 14981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14991,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 15059,
											"end": 15060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15048,
											"end": 15057,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15044,
											"end": 15061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15035,
											"end": 15041,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14991,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 14991,
											"end": 15062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14991,
											"end": 15062,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 14991,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15072,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 15140,
											"end": 15142,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15129,
											"end": 15138,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15125,
											"end": 15143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15116,
											"end": 15122,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15072,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 15072,
											"end": 15144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15072,
											"end": 15144,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 15072,
											"end": 15144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15154,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 15222,
											"end": 15224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15211,
											"end": 15220,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15207,
											"end": 15225,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15198,
											"end": 15204,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15154,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 15154,
											"end": 15226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15154,
											"end": 15226,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 15154,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14791,
											"end": 15233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15239,
											"end": 15405,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 15239,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15379,
											"end": 15397,
											"name": "PUSH",
											"source": 14,
											"value": "496E76616C696420747265617375727900000000000000000000000000000000"
										},
										{
											"begin": 15375,
											"end": 15376,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15367,
											"end": 15373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15363,
											"end": 15377,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15356,
											"end": 15398,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15239,
											"end": 15405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15239,
											"end": 15405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15411,
											"end": 15777,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 15411,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15553,
											"end": 15556,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15574,
											"end": 15641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 15638,
											"end": 15640,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 15633,
											"end": 15636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15574,
											"end": 15641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 15574,
											"end": 15641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15574,
											"end": 15641,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 15574,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15567,
											"end": 15641,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15567,
											"end": 15641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15650,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 15739,
											"end": 15742,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15650,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 15650,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15650,
											"end": 15743,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 15650,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15768,
											"end": 15770,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15763,
											"end": 15766,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15759,
											"end": 15771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15752,
											"end": 15771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15752,
											"end": 15771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15411,
											"end": 15777,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15411,
											"end": 15777,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15411,
											"end": 15777,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15411,
											"end": 15777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15949,
											"end": 15953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15987,
											"end": 15989,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15976,
											"end": 15985,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15972,
											"end": 15990,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15964,
											"end": 15990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15964,
											"end": 15990,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16036,
											"end": 16045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16030,
											"end": 16034,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16026,
											"end": 16046,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16022,
											"end": 16023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16011,
											"end": 16020,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16007,
											"end": 16024,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16000,
											"end": 16047,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 16190,
											"end": 16194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 16064,
											"end": 16195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16056,
											"end": 16195,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16056,
											"end": 16195,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15783,
											"end": 16202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16357,
											"end": 16361,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16395,
											"end": 16397,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16384,
											"end": 16393,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16380,
											"end": 16398,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16372,
											"end": 16398,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16372,
											"end": 16398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16408,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 16476,
											"end": 16477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16465,
											"end": 16474,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16461,
											"end": 16478,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16452,
											"end": 16458,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16408,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 16408,
											"end": 16479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16408,
											"end": 16479,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 16408,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 16557,
											"end": 16559,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16546,
											"end": 16555,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16542,
											"end": 16560,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16533,
											"end": 16539,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 16489,
											"end": 16561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16561,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 16489,
											"end": 16561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16571,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 16639,
											"end": 16641,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16628,
											"end": 16637,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16615,
											"end": 16621,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16571,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 16571,
											"end": 16643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16571,
											"end": 16643,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 16571,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16208,
											"end": 16650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16656,
											"end": 16822,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 16656,
											"end": 16822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16796,
											"end": 16814,
											"name": "PUSH",
											"source": 14,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 16792,
											"end": 16793,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16784,
											"end": 16790,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16780,
											"end": 16794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16773,
											"end": 16815,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16656,
											"end": 16822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16656,
											"end": 16822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 17194,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 16828,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16970,
											"end": 16973,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16991,
											"end": 17058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 17055,
											"end": 17057,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 17050,
											"end": 17053,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16991,
											"end": 17058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 16991,
											"end": 17058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16991,
											"end": 17058,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 16991,
											"end": 17058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16984,
											"end": 17058,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16984,
											"end": 17058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17067,
											"end": 17160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 17156,
											"end": 17159,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17067,
											"end": 17160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 17067,
											"end": 17160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17067,
											"end": 17160,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 17067,
											"end": 17160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17185,
											"end": 17187,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17180,
											"end": 17183,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17176,
											"end": 17188,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17169,
											"end": 17188,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17169,
											"end": 17188,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 17194,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 17194,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 17194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 17194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17200,
											"end": 17619,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 17200,
											"end": 17619,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17366,
											"end": 17370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17404,
											"end": 17406,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17393,
											"end": 17402,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17389,
											"end": 17407,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17381,
											"end": 17407,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17381,
											"end": 17407,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17453,
											"end": 17462,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17447,
											"end": 17451,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17443,
											"end": 17463,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17439,
											"end": 17440,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17428,
											"end": 17437,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17424,
											"end": 17441,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17417,
											"end": 17464,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 17607,
											"end": 17611,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 17481,
											"end": 17612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17612,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 17481,
											"end": 17612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17473,
											"end": 17612,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17473,
											"end": 17612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17200,
											"end": 17619,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17200,
											"end": 17619,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17200,
											"end": 17619,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17200,
											"end": 17619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17625,
											"end": 17806,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 17625,
											"end": 17806,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17765,
											"end": 17798,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 17761,
											"end": 17762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17753,
											"end": 17759,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17749,
											"end": 17763,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17742,
											"end": 17799,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17625,
											"end": 17806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17625,
											"end": 17806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17812,
											"end": 18178,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 17812,
											"end": 18178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17954,
											"end": 17957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17975,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 18039,
											"end": 18041,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 18034,
											"end": 18037,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17975,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 17975,
											"end": 18042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17975,
											"end": 18042,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 17975,
											"end": 18042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 18042,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 18042,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18051,
											"end": 18144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 18140,
											"end": 18143,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18051,
											"end": 18144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 18051,
											"end": 18144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18051,
											"end": 18144,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 18051,
											"end": 18144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18169,
											"end": 18171,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18164,
											"end": 18167,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18160,
											"end": 18172,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18153,
											"end": 18172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18153,
											"end": 18172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17812,
											"end": 18178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17812,
											"end": 18178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17812,
											"end": 18178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17812,
											"end": 18178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18603,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 18184,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18350,
											"end": 18354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18388,
											"end": 18390,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18377,
											"end": 18386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18373,
											"end": 18391,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18365,
											"end": 18391,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18365,
											"end": 18391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18437,
											"end": 18446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18431,
											"end": 18435,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18427,
											"end": 18447,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18423,
											"end": 18424,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18412,
											"end": 18421,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18425,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18401,
											"end": 18448,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18465,
											"end": 18596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 18591,
											"end": 18595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18465,
											"end": 18596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 18465,
											"end": 18596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18465,
											"end": 18596,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 18465,
											"end": 18596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18457,
											"end": 18596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18457,
											"end": 18596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18603,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18603,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18758,
											"end": 18762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18796,
											"end": 18798,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 18785,
											"end": 18794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18781,
											"end": 18799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18773,
											"end": 18799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18773,
											"end": 18799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18809,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 18877,
											"end": 18878,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18866,
											"end": 18875,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18862,
											"end": 18879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18853,
											"end": 18859,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18809,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 18809,
											"end": 18880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18809,
											"end": 18880,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 18809,
											"end": 18880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18890,
											"end": 18962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 18958,
											"end": 18960,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18947,
											"end": 18956,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18943,
											"end": 18961,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18934,
											"end": 18940,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18890,
											"end": 18962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 18890,
											"end": 18962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18890,
											"end": 18962,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 18890,
											"end": 18962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18972,
											"end": 19044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 19040,
											"end": 19042,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19029,
											"end": 19038,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19025,
											"end": 19043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19016,
											"end": 19022,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18972,
											"end": 19044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 18972,
											"end": 19044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18972,
											"end": 19044,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 18972,
											"end": 19044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 19051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19057,
											"end": 19389,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 19057,
											"end": 19389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19178,
											"end": 19182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19216,
											"end": 19218,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19205,
											"end": 19214,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19201,
											"end": 19219,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19193,
											"end": 19219,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19193,
											"end": 19219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19229,
											"end": 19300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 19297,
											"end": 19298,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19286,
											"end": 19295,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19282,
											"end": 19299,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19273,
											"end": 19279,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19229,
											"end": 19300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 19229,
											"end": 19300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19229,
											"end": 19300,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 19229,
											"end": 19300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19310,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 19378,
											"end": 19380,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19367,
											"end": 19376,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19363,
											"end": 19381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19354,
											"end": 19360,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19310,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 19310,
											"end": 19382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19310,
											"end": 19382,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 19310,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19057,
											"end": 19389,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19057,
											"end": 19389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19057,
											"end": 19389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19057,
											"end": 19389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19057,
											"end": 19389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19057,
											"end": 19389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19395,
											"end": 19565,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 19395,
											"end": 19565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19535,
											"end": 19557,
											"name": "PUSH",
											"source": 14,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 19531,
											"end": 19532,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19523,
											"end": 19529,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19519,
											"end": 19533,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19512,
											"end": 19558,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19395,
											"end": 19565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19395,
											"end": 19565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19571,
											"end": 19937,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 19571,
											"end": 19937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19713,
											"end": 19716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19734,
											"end": 19801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 19798,
											"end": 19800,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 19793,
											"end": 19796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19734,
											"end": 19801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 19734,
											"end": 19801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19734,
											"end": 19801,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 19734,
											"end": 19801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19727,
											"end": 19801,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19727,
											"end": 19801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19810,
											"end": 19903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 19899,
											"end": 19902,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19810,
											"end": 19903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 19810,
											"end": 19903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19810,
											"end": 19903,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 19810,
											"end": 19903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19928,
											"end": 19930,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19923,
											"end": 19926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19919,
											"end": 19931,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19912,
											"end": 19931,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19912,
											"end": 19931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19571,
											"end": 19937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19571,
											"end": 19937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19571,
											"end": 19937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19571,
											"end": 19937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19943,
											"end": 20362,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 19943,
											"end": 20362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20109,
											"end": 20113,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20147,
											"end": 20149,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20136,
											"end": 20145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20132,
											"end": 20150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20124,
											"end": 20150,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20124,
											"end": 20150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20196,
											"end": 20205,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20190,
											"end": 20194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20186,
											"end": 20206,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20182,
											"end": 20183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20171,
											"end": 20180,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20167,
											"end": 20184,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20160,
											"end": 20207,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20224,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 20350,
											"end": 20354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20224,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 20224,
											"end": 20355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20224,
											"end": 20355,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 20224,
											"end": 20355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20216,
											"end": 20355,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20216,
											"end": 20355,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19943,
											"end": 20362,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19943,
											"end": 20362,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19943,
											"end": 20362,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19943,
											"end": 20362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/PadiTokenStable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_BPS()": "fd967f47",
							"MAX_SUPPLY()": "32cb6b0c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cusd()": "0c577bdc",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"mintFeeBps()": "97c8bcc1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"redeemFeeBps()": "09f6442c",
							"renounceOwnership()": "715018a6",
							"setFees(uint16,uint16)": "9ef833d4",
							"setTreasury(address)": "f0f44260",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cusdAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_mintFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_redeemFeeBps\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newMintFeeBps\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newRedeemFeeBps\",\"type\":\"uint16\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netCUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BPS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cusd\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintFeeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemFeeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_mintFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_redeemFeeBps\",\"type\":\"uint16\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Fees accrue to a designated treasury; owner can update fees & treasury.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"FeesUpdated(uint16,uint16)\":{\"details\":\"Emitted when fees are updated\"},\"Minted(address,uint256,uint256)\":{\"details\":\"Emitted when PADI are minted: `to` receives `netAmount`, `fee` goes to `treasury`\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Redeemed(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when PADI are redeemed: `from` burns `amount`, `netCUSD` returned, `fee` sent to `treasury`\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"TreasuryUpdated(address)\":{\"details\":\"Emitted when treasury address is changed\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"_cusdAddress\":\"The deployed CUSD token address\",\"_mintFeeBps\":\"Initial mint fee (bps)\",\"_redeemFeeBps\":\"Initial redeem fee (bps)\",\"_treasury\":\"The address to collect fees\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(uint256)\":{\"params\":{\"amount\":\"The gross amount of CUSD to deposit\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"redeem(uint256)\":{\"params\":{\"amount\":\"The gross amount of PADI to burn\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Basis points denominator (100.00%)\"}},\"title\":\"Padi Token (PADI) \\u2014 1:1 CUSD\\u2011backed, pausable, fee\\u2011on\\u2011mint/redeem\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAX_SUPPLY()\":{\"notice\":\"Maximum PADI that can ever exist (1\\u00a0billion * 10\\u207b\\u00b9\\u2078)\"},\"cusd()\":{\"notice\":\"Celo Stable USD (CUSD) token on Celo Mainnet\"},\"mint(uint256)\":{\"notice\":\"Lock CUSD and mint PADI, after deducting mint fee\"},\"mintFeeBps()\":{\"notice\":\"Fee on mint, in basis points (e.g. 2 = 0.02%)\"},\"pause()\":{\"notice\":\"Pause minting & redemption in an emergency (only owner)\"},\"redeem(uint256)\":{\"notice\":\"Burn PADI and redeem CUSD, after deducting redeem fee\"},\"redeemFeeBps()\":{\"notice\":\"Fee on redeem, in basis points\"},\"setFees(uint16,uint16)\":{\"notice\":\"Update the mint & redeem fees (only owner)\"},\"setTreasury(address)\":{\"notice\":\"Change the treasury address (only owner)\"},\"treasury()\":{\"notice\":\"Address that receives protocol fees\"},\"unpause()\":{\"notice\":\"Unpause minting & redemption (only owner)\"}},\"notice\":\"Mint and redeem at exactly 1\\u00a0CUSD per PADI, minus a small protocol fee.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PadiTokenStable.sol\":\"PadiToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/PadiTokenStable.sol\":{\"keccak256\":\"0x1357a8cb38df7d034b4e3f44cc1e6c516d22474b11d7f763aca05394753487e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdaf18a60c65b077fd36f5ba998e35e831d46c213f3b2dd6853fb2cbdc69b09\",\"dweb:/ipfs/QmcN1UZMdERTURUu8mmAkvhVM52taus47b2x8y3Ut9UjyS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 570,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 576,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 578,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 580,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 582,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 392,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 493,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1644,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "treasury",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1651,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "mintFeeBps",
								"offset": 20,
								"slot": "7",
								"type": "t_uint16"
							},
							{
								"astId": 1654,
								"contract": "contracts/PadiTokenStable.sol:PadiToken",
								"label": "redeemFeeBps",
								"offset": 22,
								"slot": "7",
								"type": "t_uint16"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"MAX_SUPPLY()": {
								"notice": "Maximum PADI that can ever exist (1 billion * 10⁻¹⁸)"
							},
							"cusd()": {
								"notice": "Celo Stable USD (CUSD) token on Celo Mainnet"
							},
							"mint(uint256)": {
								"notice": "Lock CUSD and mint PADI, after deducting mint fee"
							},
							"mintFeeBps()": {
								"notice": "Fee on mint, in basis points (e.g. 2 = 0.02%)"
							},
							"pause()": {
								"notice": "Pause minting & redemption in an emergency (only owner)"
							},
							"redeem(uint256)": {
								"notice": "Burn PADI and redeem CUSD, after deducting redeem fee"
							},
							"redeemFeeBps()": {
								"notice": "Fee on redeem, in basis points"
							},
							"setFees(uint16,uint16)": {
								"notice": "Update the mint & redeem fees (only owner)"
							},
							"setTreasury(address)": {
								"notice": "Change the treasury address (only owner)"
							},
							"treasury()": {
								"notice": "Address that receives protocol fees"
							},
							"unpause()": {
								"notice": "Unpause minting & redemption (only owner)"
							}
						},
						"notice": "Mint and redeem at exactly 1 CUSD per PADI, minus a small protocol fee.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1605
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1606,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1605,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1605,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1605
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1587,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1617
						],
						"IERC20": [
							1140
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1140,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1617,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1140,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1617,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1617,
								1140
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								1074,
								1083
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1617
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1618,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1617,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1140
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 1141,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1140,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							374
						],
						"IERC20Errors": [
							279
						],
						"IERC721Errors": [
							327
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 249,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 254,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 259,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 268,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 273,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 278,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 375,
							"src": "280:1764:4",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 285,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 290,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 299,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 304,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 309,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 316,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 321,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 326,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 375,
							"src": "2190:2092:4",
							"usedErrors": [
								285,
								290,
								299,
								304,
								309,
								316,
								321,
								326
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 339,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 344,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 349,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 356,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 361,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 366,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 373,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 375,
							"src": "4430:2107:4",
							"usedErrors": [
								339,
								344,
								349,
								356,
								361,
								366,
								373
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1605
						],
						"Pausable": [
							482
						]
					},
					"id": 483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 483,
							"sourceUnit": 1606,
							"src": "130:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 379,
										"name": "Context",
										"nameLocations": [
											"632:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1605,
										"src": "632:7:5"
									},
									"id": 380,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 378,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 482,
							"linearizedBaseContracts": [
								482,
								1605
							],
							"name": "Pausable",
							"nameLocation": "620:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 385,
									"name": "Paused",
									"nameLocation": "730:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:5"
									},
									"src": "724:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 390,
									"name": "Unpaused",
									"nameLocation": "841:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "850:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:5"
									},
									"src": "835:32:5"
								},
								{
									"constant": false,
									"id": 392,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "873:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 391,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "986:32:5",
										"statements": [
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "996:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "996:15:5"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:5"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:5"
									},
									"scope": 482,
									"src": "972:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "1229:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 404,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1239:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:5"
											},
											{
												"id": 407,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:5"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 409,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:5"
									},
									"src": "1204:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1476:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 412,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1486:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:5"
											},
											{
												"id": 415,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:5"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 417,
									"name": "whenPaused",
									"nameLocation": "1463:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:5"
									},
									"src": "1454:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1668:31:5",
										"statements": [
											{
												"expression": {
													"id": 423,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 392,
													"src": "1685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 422,
												"id": 424,
												"nodeType": "Return",
												"src": "1678:14:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:5"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:5"
									},
									"scope": 482,
									"src": "1615:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "1818:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:5",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 431,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "1837:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:5"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:5"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:5"
									},
									"scope": 482,
									"src": "1767:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "1993:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 443,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "2011:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:5"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:5"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:5"
									},
									"scope": 482,
									"src": "1945:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2235:66:5",
										"statements": [
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2245:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 460,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "2281:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 459,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2274:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "2269:25:5"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 452,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 409,
												"src": "2221:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:5"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:5"
									},
									"scope": 482,
									"src": "2186:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2481:69:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 471,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2491:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 476,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "2530:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 475,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2521:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "EmitStatement",
												"src": "2516:27:5"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 469,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 468,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 417,
												"src": "2470:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:5"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:5"
									},
									"scope": 482,
									"src": "2433:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 483,
							"src": "602:1950:5",
							"usedErrors": [],
							"usedEvents": [
								385,
								390
							]
						}
					],
					"src": "105:2448:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							547
						]
					},
					"id": 548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 484,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 485,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 547,
							"linearizedBaseContracts": [
								547
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 488,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 547,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 491,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 547,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 489,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 493,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 547,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 492,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 497,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 501,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 547,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 504,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 507,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 508,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 512,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 517,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 547,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 547,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 541,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 542,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 540,
												"id": 544,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 547,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 548,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1605
						],
						"ERC20": [
							1062
						],
						"IERC20": [
							1140
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							1166
						]
					},
					"id": 1063,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 549,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 1141,
							"src": "131:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 550,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1140,
										"src": "139:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 1167,
							"src": "168:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 552,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1166,
										"src": "176:14:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 1606,
							"src": "232:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 554,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1605,
										"src": "240:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 557,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 375,
							"src": "281:65:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 556,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 279,
										"src": "289:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 559,
										"name": "Context",
										"nameLocations": [
											"1133:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1605,
										"src": "1133:7:7"
									},
									"id": 560,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:7"
								},
								{
									"baseName": {
										"id": 561,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1140,
										"src": "1142:6:7"
									},
									"id": 562,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:7"
								},
								{
									"baseName": {
										"id": 563,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1166,
										"src": "1150:14:7"
									},
									"id": 564,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:7"
								},
								{
									"baseName": {
										"id": 565,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "1166:12:7"
									},
									"id": 566,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:7"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 558,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:7",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1062,
							"linearizedBaseContracts": [
								1062,
								279,
								1166,
								1140,
								1605
							],
							"name": "ERC20",
							"nameLocation": "1124:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 570,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "1185:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 569,
										"keyName": "account",
										"keyNameLocation": "1201:7:7",
										"keyType": {
											"id": 567,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 568,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 576,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "1245:83:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 575,
										"keyName": "account",
										"keyNameLocation": "1261:7:7",
										"keyType": {
											"id": 571,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 574,
											"keyName": "spender",
											"keyNameLocation": "1288:7:7",
											"keyType": {
												"id": 572,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 573,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 578,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "1335:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 577,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 580,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "1370:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 579,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 582,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "1396:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 581,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "1657:57:7",
										"statements": [
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 590,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "1667:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 591,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "1675:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:7"
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 594,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "1690:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 595,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "1700:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:7"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:7",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 599,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1613:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1634:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:7"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:7"
									},
									"scope": 1062,
									"src": "1601:113:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1153
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1839:29:7",
										"statements": [
											{
												"expression": {
													"id": 605,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 580,
													"src": "1856:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 604,
												"id": 606,
												"nodeType": "Return",
												"src": "1849:12:7"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:7"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1824:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:7"
									},
									"scope": 1062,
									"src": "1779:89:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1159
									],
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "2043:31:7",
										"statements": [
											{
												"expression": {
													"id": 614,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 582,
													"src": "2060:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 613,
												"id": 615,
												"nodeType": "Return",
												"src": "2053:14:7"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:7",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:7"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2028:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:7"
									},
									"scope": 1062,
									"src": "1981:93:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "2763:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 622,
												"id": 624,
												"nodeType": "Return",
												"src": "2773:9:7"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:7",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:7"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2756:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 620,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:7"
									},
									"scope": 1062,
									"src": "2707:82:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1089
									],
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "2910:36:7",
										"statements": [
											{
												"expression": {
													"id": 632,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 578,
													"src": "2927:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 631,
												"id": 633,
												"nodeType": "Return",
												"src": "2920:19:7"
											}
										]
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:7",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:7"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2901:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:7"
									},
									"scope": 1062,
									"src": "2849:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1097
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3078:42:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 643,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "3095:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 645,
													"indexExpression": {
														"id": 644,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3105:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 642,
												"id": 646,
												"nodeType": "Return",
												"src": "3088:25:7"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:7",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3023:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:7"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:7"
									},
									"scope": 1062,
									"src": "3004:116:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "3390:103:7",
										"statements": [
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "3400:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 658,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 660,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "3416:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3448:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3455:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "3459:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "3438:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 657,
												"id": 670,
												"nodeType": "Return",
												"src": "3475:11:7"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:7",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "3333:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "3345:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:7"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "3384:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:7"
									},
									"scope": 1062,
									"src": "3315:178:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1117
									],
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "3640:51:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 682,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "3657:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 684,
														"indexExpression": {
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "3669:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 686,
													"indexExpression": {
														"id": 685,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "3676:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 681,
												"id": 687,
												"nodeType": "Return",
												"src": "3650:34:7"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:7",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3570:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3585:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:7"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3631:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:7"
									},
									"scope": 1062,
									"src": "3551:140:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4077:107:7",
										"statements": [
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "4087:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 699,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 701,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "4103:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4134:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "4141:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4150:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															953,
															1013
														],
														"referencedDeclaration": 953,
														"src": "4125:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 698,
												"id": 711,
												"nodeType": "Return",
												"src": "4166:11:7"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:7",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4015:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4032:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:7"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4071:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:7"
									},
									"scope": 1062,
									"src": "3998:186:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1139
									],
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "4869:151:7",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "4879:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 727,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "4897:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4935:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4941:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4950:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "4919:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4976:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4982:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4986:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 736,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "4966:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 724,
												"id": 743,
												"nodeType": "Return",
												"src": "5002:11:7"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:7",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4798:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4812:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4824:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:7"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4863:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:7"
									},
									"scope": 1062,
									"src": "4776:244:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "5462:231:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "5476:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "5472:86:7",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "5496:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5517:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "5510:37:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "5571:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "5567:86:7",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "5589:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 777,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 776,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "5610:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 782,
															"nodeType": "RevertStatement",
															"src": "5603:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "5670:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5676:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "5680:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 785,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "5662:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:7"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "5412:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "5426:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "5438:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:7"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:7"
									},
									"scope": 1062,
									"src": "5393:300:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "6083:1032:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "6097:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 803,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "6271:362:7",
													"statements": [
														{
															"assignments": [
																814
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 814,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 839,
																	"src": "6285:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 813,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 818,
															"initialValue": {
																"baseExpression": {
																	"id": 815,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "6307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"id": 816,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "6317:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 819,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "6340:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 820,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "6354:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 829,
															"nodeType": "IfStatement",
															"src": "6336:115:7",
															"trueBody": {
																"id": 828,
																"nodeType": "Block",
																"src": "6361:90:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 823,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 795,
																					"src": "6411:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 824,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "6417:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 825,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6430:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 822,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "6386:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 827,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:7"
																	}
																]
															}
														},
														{
															"id": 838,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:7",
															"statements": [
																{
																	"expression": {
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 830,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 570,
																				"src": "6571:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 832,
																			"indexExpression": {
																				"id": 831,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "6581:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 833,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "6589:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 834,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "6603:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 837,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:7"
																}
															]
														}
													]
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "6093:540:7",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "6117:148:7",
													"statements": [
														{
															"expression": {
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 808,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "6233:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 809,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "6249:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 811,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 841,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "6647:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 842,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "6862:206:7",
													"statements": [
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:7",
															"statements": [
																{
																	"expression": {
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 853,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 570,
																				"src": "7021:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 855,
																			"indexExpression": {
																				"id": 854,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "7031:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 856,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "7038:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:7"
																}
															]
														}
													]
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "6643:425:7",
												"trueBody": {
													"id": 852,
													"nodeType": "Block",
													"src": "6665:191:7",
													"statements": [
														{
															"id": 851,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:7",
															"statements": [
																{
																	"expression": {
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 847,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "6810:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "6826:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 850,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:7"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 863,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "7092:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "7098:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "7102:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "7083:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "EmitStatement",
												"src": "7078:30:7"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:7",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6025:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6039:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6051:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:7"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:7"
									},
									"scope": 1062,
									"src": "6008:1107:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "7514:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 877,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "7528:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 878,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 891,
												"nodeType": "IfStatement",
												"src": "7524:91:7",
												"trueBody": {
													"id": 890,
													"nodeType": "Block",
													"src": "7551:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 884,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 883,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "7572:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 889,
															"nodeType": "RevertStatement",
															"src": "7565:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 893,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "7644:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "7653:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "7624:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:7"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:7",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "7473:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "7490:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:7"
									},
									"scope": 1062,
									"src": "7458:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "8040:150:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8054:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "8050:89:7",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "8077:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8098:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "8091:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "8156:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 927,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "8177:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "8148:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:7"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:7",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7999:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "8016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:7"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:7"
									},
									"scope": 1062,
									"src": "7984:206:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "8800:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 946,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8819:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8826:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "8835:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 945,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															953,
															1013
														],
														"referencedDeclaration": 1013,
														"src": "8810:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:7"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:7",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8744:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8759:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8776:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:7"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:7"
									},
									"scope": 1062,
									"src": "8726:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "9799:334:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "9813:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "9809:89:7",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "9834:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "9855:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "9848:39:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "9911:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 981,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "9907:90:7",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "9934:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 987,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 986,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9955:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 992,
															"nodeType": "RevertStatement",
															"src": "9948:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 995,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "10006:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 998,
															"indexExpression": {
																"id": 996,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "10018:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 999,
														"indexExpression": {
															"id": 997,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "10025:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1000,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "10036:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:7"
											},
											{
												"condition": {
													"id": 1003,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 962,
													"src": "10055:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "IfStatement",
												"src": "10051:76:7",
												"trueBody": {
													"id": 1010,
													"nodeType": "Block",
													"src": "10066:61:7",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1005,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "10094:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1006,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "10101:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "10110:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1004,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "10085:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1009,
															"nodeType": "EmitStatement",
															"src": "10080:36:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:7",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "9719:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "9734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "9751:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "9766:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:7"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:7"
									},
									"scope": 1062,
									"src": "9701:432:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "10504:388:7",
										"statements": [
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1060,
														"src": "10514:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "10551:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "10558:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1025,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "10541:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1030,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "10580:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1032,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1031,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "10576:310:7",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "10619:267:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1037,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "10637:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "10656:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1047,
															"nodeType": "IfStatement",
															"src": "10633:130:7",
															"trueBody": {
																"id": 1046,
																"nodeType": "Block",
																"src": "10663:100:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1041,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1018,
																					"src": "10715:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1042,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1024,
																					"src": "10724:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1043,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1020,
																					"src": "10742:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1040,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "10688:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1045,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:7"
																	}
																]
															}
														},
														{
															"id": 1057,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1049,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "10813:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1050,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1018,
																				"src": "10820:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1051,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1024,
																					"src": "10829:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1052,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1020,
																					"src": "10848:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1048,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				953,
																				1013
																			],
																			"referencedDeclaration": 1013,
																			"src": "10804:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1056,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:7"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:7",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "10440:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "10455:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "10472:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:7"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:7"
									},
									"scope": 1062,
									"src": "10415:477:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1063,
							"src": "1106:9788:7",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": [
								1074,
								1083
							]
						}
					],
					"src": "105:10790:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1140
						]
					},
					"id": 1141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1064,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1065,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:8",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1140,
							"linearizedBaseContracts": [
								1140
							],
							"name": "IERC20",
							"nameLocation": "214:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1074,
									"name": "Transfer",
									"nameLocation": "396:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "405:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "427:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "447:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:8"
									},
									"src": "390:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1083,
									"name": "Approval",
									"nameLocation": "627:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "636:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "659:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:8"
									},
									"src": "621:78:8"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:8",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "821:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:8"
									},
									"scope": 1140,
									"src": "775:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:8",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:8"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:8"
									},
									"scope": 1140,
									"src": "912:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:8",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1234:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:8"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1267:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:8"
									},
									"scope": 1140,
									"src": "1204:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1567:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1622:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:8"
									},
									"scope": 1140,
									"src": "1548:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:8",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2326:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:8"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:8"
									},
									"scope": 1140,
									"src": "2309:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2712:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2726:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:8"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2771:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:8"
									},
									"scope": 1140,
									"src": "2690:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1141,
							"src": "204:2575:8",
							"usedErrors": [],
							"usedEvents": [
								1074,
								1083
							]
						}
					],
					"src": "106:2674:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1140
						],
						"IERC20Metadata": [
							1166
						]
					},
					"id": 1167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1142,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1167,
							"sourceUnit": 1141,
							"src": "151:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1143,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1140,
										"src": "159:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1146,
										"name": "IERC20",
										"nameLocations": [
											"306:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1140,
										"src": "306:6:9"
									},
									"id": 1147,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:9"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1145,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:9",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1166,
							"linearizedBaseContracts": [
								1166,
								1140
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:9",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:9"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "417:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:9"
									},
									"scope": 1166,
									"src": "378:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:9",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "540:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:9"
									},
									"scope": 1166,
									"src": "499:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:9",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:9"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "674:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1162,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:9"
									},
									"scope": 1166,
									"src": "631:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1167,
							"src": "278:405:9",
							"usedErrors": [],
							"usedEvents": [
								1074,
								1083
							]
						}
					],
					"src": "125:559:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							1140
						],
						"SafeERC20": [
							1575
						]
					},
					"id": 1576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 1141,
							"src": "141:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1169,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1140,
										"src": "149:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 1172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 230,
							"src": "179:58:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1171,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1173,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:10",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1575,
							"linearizedBaseContracts": [
								1575
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:10",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1178,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "823:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:10"
									},
									"src": "792:46:10"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:10",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1187,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "959:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "976:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1002:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:10"
									},
									"src": "920:109:10"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "1291:88:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "1321:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1202,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "1343:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1140",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1107,
																	"src": "1343:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1204,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "1360:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "1364:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1206,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1200,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:10",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1198,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "1301:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:10"
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:10",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1241:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1140",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1189,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1140,
														"src": "1241:6:10"
													},
													"referencedDeclaration": 1140,
													"src": "1241:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1255:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1267:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:10"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:10"
									},
									"scope": 1575,
									"src": "1219:160:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "1708:98:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "1738:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1228,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "1760:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1140",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:10",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1139,
																	"src": "1760:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1230,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "1781:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1231,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "1787:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1232,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1221,
																			"src": "1791:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1233,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1226,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:10",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1224,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "1718:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:10"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:10",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1644:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1140",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1213,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1140,
														"src": "1644:6:10"
													},
													"referencedDeclaration": 1140,
													"src": "1644:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1658:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1672:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1684:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:10"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:10"
									},
									"scope": 1575,
									"src": "1618:188:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "2548:139:10",
										"statements": [
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1268,
														"src": "2558:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1255,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1575",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1575",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2612:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1251,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "2581:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:10",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1117,
														"src": "2581:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "2643:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1262,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2650:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1263,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "2659:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1264,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "2674:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1260,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "2630:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:10"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:10",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2493:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1140",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1240,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1140,
														"src": "2493:6:10"
													},
													"referencedDeclaration": 1140,
													"src": "2493:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2507:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2524:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:10"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:10"
									},
									"scope": 1575,
									"src": "2462:225:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "3453:370:10",
										"statements": [
											{
												"id": 1310,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:10",
												"statements": [
													{
														"assignments": [
															1281
														],
														"declarations": [
															{
																"constant": false,
																"id": 1281,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:10",
																"nodeType": "VariableDeclaration",
																"scope": 1310,
																"src": "3487:24:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1280,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1290,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1575",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1575",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1288,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "3545:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1282,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3514:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1140",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:10",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1117,
																"src": "3514:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "3571:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1292,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "3590:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1301,
														"nodeType": "IfStatement",
														"src": "3567:160:10",
														"trueBody": {
															"id": 1300,
															"nodeType": "Block",
															"src": "3609:118:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1295,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1275,
																				"src": "3667:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1296,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "3676:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1297,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1277,
																				"src": "3694:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1294,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "3634:32:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1299,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1303,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3753:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1140",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1304,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "3760:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1305,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "3769:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1306,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "3788:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1140",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1302,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "3740:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1309,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:10",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3386:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1140",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1271,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1140,
														"src": "3386:6:10"
													},
													"referencedDeclaration": 1140,
													"src": "3386:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3400:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3417:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:10"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:10"
									},
									"scope": 1575,
									"src": "3355:468:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "4477:303:10",
										"statements": [
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1358,
														"src": "4487:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1323,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1327,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "4530:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1140",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:10",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "4530:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1329,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "4546:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1330,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4555:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1331,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1325,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:10",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:10"
											},
											{
												"condition": {
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1335,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "4602:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1140",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1336,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "4609:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1140",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1334,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "4578:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1357,
												"nodeType": "IfStatement",
												"src": "4573:201:10",
												"trueBody": {
													"id": 1356,
													"nodeType": "Block",
													"src": "4624:150:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1340,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "4658:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1140",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1343,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1316,
																					"src": "4680:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1140",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:10",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1127,
																				"src": "4680:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1345,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1318,
																						"src": "4696:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1346,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1347,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1341,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:10",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1140",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1339,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "4638:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1350,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1352,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "4743:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1140",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1353,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "4750:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1140",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1351,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "4723:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1355,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:10",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4422:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1140",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1314,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1140,
														"src": "4422:6:10"
													},
													"referencedDeclaration": 1140,
													"src": "4422:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4436:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4453:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:10"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:10"
									},
									"scope": 1575,
									"src": "4400:380:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "5227:219:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1372,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "5241:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 1386,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "5350:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "5354:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1388,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "5361:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1384,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "5328:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:10",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1399,
													"nodeType": "IfStatement",
													"src": "5323:117:10",
													"trueBody": {
														"id": 1398,
														"nodeType": "Block",
														"src": "5368:72:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1394,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1363,
																					"src": "5422:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1392,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1391,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "5389:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1397,
																"nodeType": "RevertStatement",
																"src": "5382:47:10"
															}
														]
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "5237:203:10",
												"trueBody": {
													"id": 1383,
													"nodeType": "Block",
													"src": "5262:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1378,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "5289:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1379,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "5296:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1380,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "5300:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1377,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "5276:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1382,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:10",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5156:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1361,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:10"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5172:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5184:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5199:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:10"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:10"
									},
									"scope": 1575,
									"src": "5124:322:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "5965:239:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1417,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "5979:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 1432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "6102:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1433,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "6108:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "6112:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1435,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1414,
																	"src": "6119:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1430,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "6076:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:10",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1446,
													"nodeType": "IfStatement",
													"src": "6071:127:10",
													"trueBody": {
														"id": 1445,
														"nodeType": "Block",
														"src": "6126:72:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1441,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1406,
																					"src": "6180:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1439,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1438,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "6147:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1444,
																"nodeType": "RevertStatement",
																"src": "6140:47:10"
															}
														]
													}
												},
												"id": 1447,
												"nodeType": "IfStatement",
												"src": "5975:223:10",
												"trueBody": {
													"id": 1429,
													"nodeType": "Block",
													"src": "6000:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1423,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "6031:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1424,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "6038:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1425,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "6044:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1426,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "6048:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1422,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "6014:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1428,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:10",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "5843:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1404,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:10"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "5867:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "5889:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "5909:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "5932:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:10"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:10"
									},
									"scope": 1575,
									"src": "5798:406:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "6971:218:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1462,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "6985:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 1476,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "7093:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1477,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "7097:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1478,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "7104:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1474,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "7072:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:10",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1489,
													"nodeType": "IfStatement",
													"src": "7067:116:10",
													"trueBody": {
														"id": 1488,
														"nodeType": "Block",
														"src": "7111:72:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1484,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1453,
																					"src": "7165:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1482,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1481,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "7132:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1487,
																"nodeType": "RevertStatement",
																"src": "7125:47:10"
															}
														]
													}
												},
												"id": 1490,
												"nodeType": "IfStatement",
												"src": "6981:202:10",
												"trueBody": {
													"id": 1473,
													"nodeType": "Block",
													"src": "7006:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1468,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "7033:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1469,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "7040:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1470,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "7044:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1467,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "7020:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:10",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "6900:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1452,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1451,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:10"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "6916:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "6928:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "6943:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:10"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:10"
									},
									"scope": 1575,
									"src": "6869:320:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "7756:650:10",
										"statements": [
											{
												"assignments": [
													1502
												],
												"declarations": [
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "7766:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:10"
											},
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "7794:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:10"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:10",
													"nodeType": "YulBlock",
													"src": "7848:396:10",
													"statements": [
														{
															"nativeSrc": "7862:75:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:10"
																		},
																		"nativeSrc": "7882:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:10"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:10",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:10"
																		},
																		"nativeSrc": "7899:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:10"
																		},
																		"nativeSrc": "7916:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:10"
																},
																"nativeSrc": "7877:60:10",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:10"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:10",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:10",
																"nodeType": "YulBlock",
																"src": "7998:157:10",
																"statements": [
																	{
																		"nativeSrc": "8016:22:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:10",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:10"
																			},
																			"nativeSrc": "8027:11:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:10"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:10",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:10",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:10"
																					},
																					"nativeSrc": "8078:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:10"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:10",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:10"
																			},
																			"nativeSrc": "8055:40:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:10"
																		},
																		"nativeSrc": "8055:40:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:10"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:10",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:10"
																					},
																					"nativeSrc": "8124:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:10"
																			},
																			"nativeSrc": "8112:29:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:10"
																		},
																		"nativeSrc": "8112:29:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:10"
																},
																"nativeSrc": "7982:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:10"
															},
															"nativeSrc": "7979:176:10",
															"nodeType": "YulIf",
															"src": "7979:176:10"
														},
														{
															"nativeSrc": "8168:30:10",
															"nodeType": "YulAssignment",
															"src": "8168:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:10",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:10"
																},
																"nativeSrc": "8182:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:10"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:10"
																}
															]
														},
														{
															"nativeSrc": "8211:23:10",
															"nodeType": "YulAssignment",
															"src": "8211:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:10"
																},
																"nativeSrc": "8226:8:10",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:10"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1498,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1498,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1502,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:10",
														"valueSize": 1
													},
													{
														"declaration": 1505,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:10",
														"valueSize": 1
													},
													{
														"declaration": 1496,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1507,
												"nodeType": "InlineAssembly",
												"src": "7823:421:10"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1508,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "8258:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1519,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "8310:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:10",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1513,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "8284:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1140",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1140",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1511,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:10",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "8254:146:10",
												"trueBody": {
													"id": 1530,
													"nodeType": "Block",
													"src": "8328:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1526,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1496,
																				"src": "8382:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1140",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1140",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1524,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1523,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "8349:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1529,
															"nodeType": "RevertStatement",
															"src": "8342:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "7715:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1140",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1494,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1140,
														"src": "7715:6:10"
													},
													"referencedDeclaration": 1140,
													"src": "7715:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "7729:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:10"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:10"
									},
									"scope": 1575,
									"src": "7686:720:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "8997:391:10",
										"statements": [
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "9007:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1546,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:10"
											},
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "9029:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1549,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:10"
											},
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "9057:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:10"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:10",
													"nodeType": "YulBlock",
													"src": "9111:174:10",
													"statements": [
														{
															"nativeSrc": "9125:71:10",
															"nodeType": "YulAssignment",
															"src": "9125:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:10"
																		},
																		"nativeSrc": "9141:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:10"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:10"
																		},
																		"nativeSrc": "9158:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:10"
																		},
																		"nativeSrc": "9175:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:10"
																},
																"nativeSrc": "9136:60:10",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:10"
																}
															]
														},
														{
															"nativeSrc": "9209:30:10",
															"nodeType": "YulAssignment",
															"src": "9209:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:10",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:10"
																},
																"nativeSrc": "9223:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:10"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:10"
																}
															]
														},
														{
															"nativeSrc": "9252:23:10",
															"nodeType": "YulAssignment",
															"src": "9252:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:10"
																},
																"nativeSrc": "9267:8:10",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:10"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1539,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1539,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1548,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:10",
														"valueSize": 1
													},
													{
														"declaration": 1551,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:10",
														"valueSize": 1
													},
													{
														"declaration": 1545,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:10",
														"valueSize": 1
													},
													{
														"declaration": 1537,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1553,
												"nodeType": "InlineAssembly",
												"src": "9086:199:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1554,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "9301:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1555,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1548,
																		"src": "9313:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1566,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "9364:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:10",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1560,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1537,
																						"src": "9339:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$1140",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$1140",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1559,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1558,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1570,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1543,
												"id": 1572,
												"nodeType": "Return",
												"src": "9294:87:10"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "8941:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1140",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1535,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1140,
														"src": "8941:6:10"
													},
													"referencedDeclaration": 1140,
													"src": "8941:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "8955:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:10"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "8991:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:10"
									},
									"scope": 1575,
									"src": "8908:480:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1576,
							"src": "698:8692:10",
							"usedErrors": [
								1178,
								1187
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1605
						]
					},
					"id": 1606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1578,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1605,
							"linearizedBaseContracts": [
								1605
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1583,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1585,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1605,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1592,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1594,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1605,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1600,
												"id": 1602,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1605,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1606,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1617
						]
					},
					"id": 1618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1607,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1608,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:12",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1617,
							"linearizedBaseContracts": [
								1617
							],
							"name": "IERC165",
							"nameLocation": "432:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "818:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:12"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "861:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:12"
									},
									"scope": 1617,
									"src": "791:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1618,
							"src": "422:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:12"
				},
				"id": 12
			},
			"contracts/PadiTokenStable.sol": {
				"ast": {
					"absolutePath": "contracts/PadiTokenStable.sol",
					"exportedSymbols": {
						"Context": [
							1605
						],
						"ERC20": [
							1062
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							1140
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							1166
						],
						"Ownable": [
							147
						],
						"PadiToken": [
							1998
						],
						"Pausable": [
							482
						],
						"ReentrancyGuard": [
							547
						],
						"SafeERC20": [
							1575
						]
					},
					"id": 1999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1619,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1999,
							"sourceUnit": 1063,
							"src": "57:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1999,
							"sourceUnit": 1576,
							"src": "113:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1999,
							"sourceUnit": 483,
							"src": "179:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1999,
							"sourceUnit": 548,
							"src": "235:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1999,
							"sourceUnit": 148,
							"src": "298:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1626,
										"name": "ERC20",
										"nameLocations": [
											"629:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1062,
										"src": "629:5:13"
									},
									"id": 1627,
									"nodeType": "InheritanceSpecifier",
									"src": "629:5:13"
								},
								{
									"baseName": {
										"id": 1628,
										"name": "Ownable",
										"nameLocations": [
											"636:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "636:7:13"
									},
									"id": 1629,
									"nodeType": "InheritanceSpecifier",
									"src": "636:7:13"
								},
								{
									"baseName": {
										"id": 1630,
										"name": "Pausable",
										"nameLocations": [
											"645:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 482,
										"src": "645:8:13"
									},
									"id": 1631,
									"nodeType": "InheritanceSpecifier",
									"src": "645:8:13"
								},
								{
									"baseName": {
										"id": 1632,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"655:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 547,
										"src": "655:15:13"
									},
									"id": 1633,
									"nodeType": "InheritanceSpecifier",
									"src": "655:15:13"
								}
							],
							"canonicalName": "PadiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1625,
								"nodeType": "StructuredDocumentation",
								"src": "352:255:13",
								"text": "@title  Padi Token (PADI) — 1:1 CUSD‑backed, pausable, fee‑on‑mint/redeem\n @notice Mint and redeem at exactly 1 CUSD per PADI, minus a small protocol fee.\n @dev    Fees accrue to a designated treasury; owner can update fees & treasury."
							},
							"fullyImplemented": true,
							"id": 1998,
							"linearizedBaseContracts": [
								1998,
								547,
								482,
								147,
								1062,
								279,
								1166,
								1140,
								1605
							],
							"name": "PadiToken",
							"nameLocation": "616:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1637,
									"libraryName": {
										"id": 1634,
										"name": "SafeERC20",
										"nameLocations": [
											"683:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1575,
										"src": "683:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "677:27:13",
									"typeName": {
										"id": 1636,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1635,
											"name": "IERC20",
											"nameLocations": [
												"697:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1140,
											"src": "697:6:13"
										},
										"referencedDeclaration": 1140,
										"src": "697:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1140",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "710:56:13",
										"text": "@notice Celo Stable USD (CUSD) token on Celo Mainnet"
									},
									"functionSelector": "0c577bdc",
									"id": 1641,
									"mutability": "immutable",
									"name": "cusd",
									"nameLocation": "795:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 1998,
									"src": "771:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1140",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1640,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1639,
											"name": "IERC20",
											"nameLocations": [
												"771:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1140,
											"src": "771:6:13"
										},
										"referencedDeclaration": 1140,
										"src": "771:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1140",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "806:47:13",
										"text": "@notice Address that receives protocol fees"
									},
									"functionSelector": "61d027b3",
									"id": 1644,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "873:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 1998,
									"src": "858:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1643,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "858:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "888:43:13",
										"text": "@dev Basis points denominator (100.00%)"
									},
									"functionSelector": "fd967f47",
									"id": 1648,
									"mutability": "constant",
									"name": "MAX_BPS",
									"nameLocation": "959:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1998,
									"src": "936:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1646,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "936:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 1647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "969:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "982:57:13",
										"text": "@notice Fee on mint, in basis points (e.g. 2 = 0.02%)"
									},
									"functionSelector": "97c8bcc1",
									"id": 1651,
									"mutability": "mutable",
									"name": "mintFeeBps",
									"nameLocation": "1058:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1998,
									"src": "1044:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1650,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1044:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "1075:42:13",
										"text": "@notice Fee on redeem, in basis points"
									},
									"functionSelector": "09f6442c",
									"id": 1654,
									"mutability": "mutable",
									"name": "redeemFeeBps",
									"nameLocation": "1136:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1998,
									"src": "1122:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1653,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1122:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "1155:70:13",
										"text": "@notice Maximum PADI that can ever exist (1 billion * 10⁻¹⁸)"
									},
									"functionSelector": "32cb6b0c",
									"id": 1662,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "1254:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1998,
									"src": "1230:59:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1656,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1230:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 1661,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 1657,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1267:13:13",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1660,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1658,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1283:2:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1659,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1287:2:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1283:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1267:22:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "1296:90:13",
										"text": "@dev Emitted when PADI are minted: `to` receives `netAmount`, `fee` goes to `treasury`"
									},
									"eventSelector": "25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff",
									"id": 1671,
									"name": "Minted",
									"nameLocation": "1397:6:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1420:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1404:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"indexed": false,
												"mutability": "mutable",
												"name": "netAmount",
												"nameLocation": "1432:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1424:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1451:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1443:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:52:13"
									},
									"src": "1391:65:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "1462:108:13",
										"text": "@dev Emitted when PADI are redeemed: `from` burns `amount`, `netCUSD` returned, `fee` sent to `treasury`"
									},
									"eventSelector": "484c40561359f3e3b8be9101897f8680aa82fbe1df9fd9038e0dbc6284032646",
									"id": 1682,
									"name": "Redeemed",
									"nameLocation": "1581:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1606:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1590:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1620:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1612:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"indexed": false,
												"mutability": "mutable",
												"name": "netCUSD",
												"nameLocation": "1636:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1628:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1653:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1645:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:68:13"
									},
									"src": "1575:83:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "1664:38:13",
										"text": "@dev Emitted when fees are updated"
									},
									"eventSelector": "2ac80c14c28700f7b5e36f947d572149fe2e3947bac32c3a8c098f3e03722c11",
									"id": 1689,
									"name": "FeesUpdated",
									"nameLocation": "1713:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMintFeeBps",
												"nameLocation": "1732:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1725:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1684,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1725:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRedeemFeeBps",
												"nameLocation": "1754:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1747:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1686,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:46:13"
									},
									"src": "1707:64:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "1777:49:13",
										"text": "@dev Emitted when treasury address is changed"
									},
									"eventSelector": "7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1",
									"id": 1694,
									"name": "TreasuryUpdated",
									"nameLocation": "1837:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "1861:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "1853:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:21:13"
									},
									"src": "1831:43:13"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "2284:415:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1715,
																"name": "_cusdAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "2311:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2335:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2327:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1716,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2327:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2327:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2311:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420435553442061646472657373",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2339:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633",
																"typeString": "literal_string \"Invalid CUSD address\""
															},
															"value": "Invalid CUSD address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5fb62f36529b8cdd5dab9051d7ec6d9f1dc09cdcb52046315bb6d5d0853b5633",
																"typeString": "literal_string \"Invalid CUSD address\""
															}
														],
														"id": 1714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2303:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:59:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "2303:59:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1725,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "2380:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2401:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2393:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1726,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2393:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2393:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2380:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207472656173757279",
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2405:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
																"typeString": "literal_string \"Invalid treasury\""
															},
															"value": "Invalid treasury"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
																"typeString": "literal_string \"Invalid treasury\""
															}
														],
														"id": 1724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2372:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2372:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "2372:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1735,
																"name": "_mintFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "2442:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1736,
																"name": "MAX_BPS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "2457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2442:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e742066656520746f6f2068696768",
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2466:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
																"typeString": "literal_string \"Mint fee too high\""
															},
															"value": "Mint fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
																"typeString": "literal_string \"Mint fee too high\""
															}
														],
														"id": 1734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2434:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2434:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "2434:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1742,
																"name": "_redeemFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "2504:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1743,
																"name": "MAX_BPS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "2521:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2504:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656465656d2066656520746f6f2068696768",
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2530:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
																"typeString": "literal_string \"Redeem fee too high\""
															},
															"value": "Redeem fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
																"typeString": "literal_string \"Redeem fee too high\""
															}
														],
														"id": 1741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2496:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "2496:56:13"
											},
											{
												"expression": {
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1748,
														"name": "cusd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "2563:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1140",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1750,
																"name": "_cusdAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "2577:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1749,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "2570:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1140_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2570:20:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1140",
															"typeString": "contract IERC20"
														}
													},
													"src": "2563:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1140",
														"typeString": "contract IERC20"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "2563:27:13"
											},
											{
												"expression": {
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1754,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "2600:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1755,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "2611:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2600:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "2600:20:13"
											},
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1758,
														"name": "mintFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "2630:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1759,
														"name": "_mintFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "2643:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2630:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "2630:24:13"
											},
											{
												"expression": {
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1762,
														"name": "redeemFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1654,
														"src": "2664:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1763,
														"name": "_redeemFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "2679:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2664:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "2664:28:13"
											}
										]
									},
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "1880:219:13",
										"text": "@param _cusdAddress  The deployed CUSD token address\n @param _treasury     The address to collect fees\n @param _mintFeeBps   Initial mint fee (bps)\n @param _redeemFeeBps Initial redeem fee (bps)"
									},
									"id": 1767,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5061646920546f6b656e",
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2243:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_521d8271182e5c7522b46338c8ad55e51488ec333914ea13398af14c52c4165e",
														"typeString": "literal_string \"Padi Token\""
													},
													"value": "Padi Token"
												},
												{
													"hexValue": "50414449",
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2257:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f1aa354eb668b6a2996f0a13374c8f17cdf6f5c1ca6bd707cd121910c7930a28",
														"typeString": "literal_string \"PADI\""
													},
													"value": "PADI"
												}
											],
											"id": 1708,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1705,
												"name": "ERC20",
												"nameLocations": [
													"2237:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "2237:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2237:27:13"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1710,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2272:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2276:6:13",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2272:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1712,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1709,
												"name": "Ownable",
												"nameLocations": [
													"2264:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2264:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2264:19:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "_cusdAddress",
												"nameLocation": "2133:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2125:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "2163:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2155:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "_mintFeeBps",
												"nameLocation": "2189:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2182:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1700,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2182:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "_redeemFeeBps",
												"nameLocation": "2217:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2210:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1702,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:121:13"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2284:0:13"
									},
									"scope": 1998,
									"src": "2104:595:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "2842:261:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1778,
																"name": "_mintFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1770,
																"src": "2860:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1779,
																"name": "MAX_BPS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "2875:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2860:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e742066656520746f6f2068696768",
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2884:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
																"typeString": "literal_string \"Mint fee too high\""
															},
															"value": "Mint fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c41ad4978eaba95811a14fcec4f85864b8e4ac32b43bfcf729c3ecd577efc08d",
																"typeString": "literal_string \"Mint fee too high\""
															}
														],
														"id": 1777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2852:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "2852:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1785,
																"name": "_redeemFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "2922:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1786,
																"name": "MAX_BPS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "2939:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2922:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656465656d2066656520746f6f2068696768",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2948:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
																"typeString": "literal_string \"Redeem fee too high\""
															},
															"value": "Redeem fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1118f7dbf23c5ab900640e7b7b955196ae241d9a6b57033f83d426096b2f378",
																"typeString": "literal_string \"Redeem fee too high\""
															}
														],
														"id": 1784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2914:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2914:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "2914:56:13"
											},
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1791,
														"name": "mintFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "2980:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1792,
														"name": "_mintFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "2993:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2980:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "2980:24:13"
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1795,
														"name": "redeemFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1654,
														"src": "3014:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1796,
														"name": "_redeemFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "3029:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3014:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "3014:28:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1800,
															"name": "_mintFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "3069:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1801,
															"name": "_redeemFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "3082:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1799,
														"name": "FeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "3057:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint16_$returns$__$",
															"typeString": "function (uint16,uint16)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "EmitStatement",
												"src": "3052:44:13"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "2705:54:13",
										"text": "@notice Update the mint & redeem fees (only owner)"
									},
									"functionSelector": "9ef833d4",
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1775,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1774,
												"name": "onlyOwner",
												"nameLocations": [
													"2832:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2832:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2832:9:13"
										}
									],
									"name": "setFees",
									"nameLocation": "2773:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "_mintFeeBps",
												"nameLocation": "2788:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2781:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1769,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2781:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "_redeemFeeBps",
												"nameLocation": "2808:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2801:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1771,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2801:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:42:13"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:0:13"
									},
									"scope": 1998,
									"src": "2764:339:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "3225:140:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1814,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "3243:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3264:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3256:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3256:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3256:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3243:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207472656173757279",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3268:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
																"typeString": "literal_string \"Invalid treasury\""
															},
															"value": "Invalid treasury"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea",
																"typeString": "literal_string \"Invalid treasury\""
															}
														],
														"id": 1813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3235:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3235:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "3235:52:13"
											},
											{
												"expression": {
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1823,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "3297:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1824,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "3308:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3297:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "3297:20:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1828,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "3348:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1827,
														"name": "TreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "3332:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "EmitStatement",
												"src": "3327:31:13"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "3109:52:13",
										"text": "@notice Change the treasury address (only owner)"
									},
									"functionSelector": "f0f44260",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1811,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1810,
												"name": "onlyOwner",
												"nameLocations": [
													"3215:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3215:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3215:9:13"
										}
									],
									"name": "setTreasury",
									"nameLocation": "3175:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "3195:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "3187:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3186:19:13"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3225:0:13"
									},
									"scope": 1998,
									"src": "3166:199:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "3589:549:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1843,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "3607:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3616:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3607:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3599:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3599:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "3599:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1850,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "3658:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3658:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1852,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "3674:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3658:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1854,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "3684:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3658:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3696:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 1849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3650:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3650:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "3650:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1862,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3780:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3784:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3780:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1866,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3800:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PadiToken_$1998",
																		"typeString": "contract PadiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PadiToken_$1998",
																		"typeString": "contract PadiToken"
																	}
																],
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3792:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1864,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3792:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1868,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "3807:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1859,
															"name": "cusd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "3758:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3763:16:13",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1238,
														"src": "3758:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1140_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3758:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "3758:56:13"
											},
											{
												"assignments": [
													1872
												],
												"declarations": [
													{
														"constant": false,
														"id": 1872,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3869:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 1909,
														"src": "3861:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1871,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3861:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1873,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "3876:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1874,
																	"name": "mintFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "3885:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "3876:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1876,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3875:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1877,
														"name": "MAX_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "3899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3875:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3861:45:13"
											},
											{
												"assignments": [
													1881
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "net",
														"nameLocation": "3924:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 1909,
														"src": "3916:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3916:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1882,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "3930:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1883,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "3939:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3930:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3916:26:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4004:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4008:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4004:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1889,
															"name": "net",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "4016:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1886,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "3998:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3998:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "3998:22:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1892,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "4034:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4040:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4034:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1901,
												"nodeType": "IfStatement",
												"src": "4030:58:13",
												"trueBody": {
													"id": 1900,
													"nodeType": "Block",
													"src": "4043:45:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1896,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "4063:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1897,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "4073:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1895,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4057:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4057:20:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1899,
															"nodeType": "ExpressionStatement",
															"src": "4057:20:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1903,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4110:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4114:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4110:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1905,
															"name": "net",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "4122:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1906,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "4127:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1902,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "4103:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1908,
												"nodeType": "EmitStatement",
												"src": "4098:33:13"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "3371:119:13",
										"text": "@notice Lock CUSD and mint PADI, after deducting mint fee\n @param amount The gross amount of CUSD to deposit"
									},
									"functionSelector": "a0712d68",
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1838,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1837,
												"name": "whenNotPaused",
												"nameLocations": [
													"3550:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 409,
												"src": "3550:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3550:13:13"
										},
										{
											"id": 1840,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1839,
												"name": "nonReentrant",
												"nameLocations": [
													"3572:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "3572:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3572:12:13"
										}
									],
									"name": "mint",
									"nameLocation": "3504:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3517:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "3509:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:16:13"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3589:0:13"
									},
									"scope": 1998,
									"src": "3495:643:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "4365:494:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1921,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "4383:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4392:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4383:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4395:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4375:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4375:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "4375:41:13"
											},
											{
												"assignments": [
													1928
												],
												"declarations": [
													{
														"constant": false,
														"id": 1928,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4473:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 1976,
														"src": "4465:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4465:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1935,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1929,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "4480:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1930,
																	"name": "redeemFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "4489:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4480:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1932,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4479:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1933,
														"name": "MAX_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "4505:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "4479:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4465:47:13"
											},
											{
												"assignments": [
													1937
												],
												"declarations": [
													{
														"constant": false,
														"id": 1937,
														"mutability": "mutable",
														"name": "net",
														"nameLocation": "4530:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 1976,
														"src": "4522:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4522:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1941,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1938,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "4536:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1939,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "4545:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4536:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4522:26:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1943,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4604:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4608:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4604:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1945,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "4616:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1942,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4598:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4598:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "4598:25:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1951,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4703:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4707:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4703:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1953,
															"name": "net",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "4715:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1948,
															"name": "cusd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "4685:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1140",
																"typeString": "contract IERC20"
															}
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4690:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1211,
														"src": "4685:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1140_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4685:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1955,
												"nodeType": "ExpressionStatement",
												"src": "4685:34:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1956,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "4733:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4739:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4733:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1967,
												"nodeType": "IfStatement",
												"src": "4729:70:13",
												"trueBody": {
													"id": 1966,
													"nodeType": "Block",
													"src": "4742:57:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1962,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "4774:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1963,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1928,
																		"src": "4784:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1959,
																		"name": "cusd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "4756:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1140",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4761:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1211,
																	"src": "4756:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1140_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1140_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4756:32:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1965,
															"nodeType": "ExpressionStatement",
															"src": "4756:32:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1969,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4823:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4823:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "4835:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1972,
															"name": "net",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "4843:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1973,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "4848:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1968,
														"name": "Redeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "4814:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4814:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1975,
												"nodeType": "EmitStatement",
												"src": "4809:43:13"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "4144:120:13",
										"text": "@notice Burn PADI and redeem CUSD, after deducting redeem fee\n @param amount The gross amount of PADI to burn"
									},
									"functionSelector": "db006a75",
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1916,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1915,
												"name": "whenNotPaused",
												"nameLocations": [
													"4326:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 409,
												"src": "4326:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4326:13:13"
										},
										{
											"id": 1918,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1917,
												"name": "nonReentrant",
												"nameLocations": [
													"4348:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "4348:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4348:12:13"
										}
									],
									"name": "redeem",
									"nameLocation": "4278:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4293:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "4285:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:16:13"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4365:0:13"
									},
									"scope": 1998,
									"src": "4269:590:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "4973:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1983,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "4983:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4983:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "4983:8:13"
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "4865:67:13",
										"text": "@notice Pause minting & redemption in an emergency (only owner)"
									},
									"functionSelector": "8456cb59",
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1981,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1980,
												"name": "onlyOwner",
												"nameLocations": [
													"4963:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4963:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4963:9:13"
										}
									],
									"name": "pause",
									"nameLocation": "4946:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4951:2:13"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4973:0:13"
									},
									"scope": 1998,
									"src": "4937:61:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "5100:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1993,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "5110:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5110:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "5110:10:13"
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "5004:53:13",
										"text": "@notice Unpause minting & redemption (only owner)"
									},
									"functionSelector": "3f4ba83a",
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1991,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1990,
												"name": "onlyOwner",
												"nameLocations": [
													"5090:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5090:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5090:9:13"
										}
									],
									"name": "unpause",
									"nameLocation": "5071:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5078:2:13"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:0:13"
									},
									"scope": 1998,
									"src": "5062:65:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1999,
							"src": "607:4839:13",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								268,
								273,
								278,
								1178
							],
							"usedEvents": [
								24,
								385,
								390,
								1074,
								1083,
								1671,
								1682,
								1689,
								1694
							]
						}
					],
					"src": "32:5415:13"
				},
				"id": 13
			}
		}
	}
}