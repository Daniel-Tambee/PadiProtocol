{
	"id": "bc5f3b30c837ebfa75253da3039aef52",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/IPadiProtocol.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPadiProtocol {\n    /**\n     * @notice Mint an NFT ID card for a new member.\n     * @param memberAddress The address of the new member.\n     * @param metadataURI The metadata URI for the NFT.\n     * @param paymentAmount The amount of the specific token to be paid.\n     */\n    function mintMembershipNFT(\n        address memberAddress,\n        string calldata metadataURI,\n        uint256 paymentAmount\n    ) external;\n\n    /**\n     * @notice Assign a legal representative (Padi) to a member.\n     * @param memberAddress The address of the member.\n     * @param representativeAddress The address of the legal representative.\n     */\n    function assignRepresentative(\n        address memberAddress,\n        address representativeAddress\n    ) external;\n\n    /**\n     * @notice Confirm that a lawyer (Padi) has responded to an emergency call from a member.\n     * @param memberAddress The address of the member calling for help.\n     * @param caseId The unique identifier for the case.\n     * @param lawyerAddress The address of the lawyer (Padi) responding to the emergency.\n     */\n    function confirmEmergencyResponse(\n        address memberAddress,\n        uint256 caseId,\n        address lawyerAddress\n    ) external;\n\n    /**\n     * @notice Reward a lawyer (Padi) after confirming their response to an emergency.\n     * @param lawyerAddress The address of the lawyer (Padi).\n     * @param caseId The unique identifier for the case.\n     * @param rewardAmount The amount of tokens to reward the lawyer.\n     */\n    function rewardLawyerForEmergency(\n        address lawyerAddress,\n        uint256 caseId,\n        uint256 rewardAmount\n    ) external;\n\n    /**\n     * @notice Sign up a lawyer as a legal representative.\n     * @param lawyerAddress The address of the lawyer signing up.\n     */\n    function signUpLawyer(address lawyerAddress,string calldata profileUri) external;\n\n    /**\n     * @notice Track a new case for a lawyer.\n     * @param lawyerAddress The address of the lawyer handling the case.\n     * @param memberAddress The address of the member involved in the case.\n     */\n    function addCase(\n       address lawyerAddress,\n    address memberAddress,\n    string calldata descriptionMetadata, // Added descriptionMetadata parameter\n    uint256 rewardAmount\n    ) external;\n\n    /**\n     * @notice Mark a case as resolved for a lawyer.\n     * @param lawyerAddress The address of the lawyer handling the case.\n     * @param caseId The unique identifier for the case.\n     */\n    function resolveCase(address lawyerAddress, uint256 caseId) external;\n\n    /**\n     * @notice Get the list of open cases for a lawyer.\n     * @param lawyerAddress The address of the lawyer.\n     * @return caseIds An array of unique identifiers for open cases.\n     */\n    function getOpenCases(\n        address lawyerAddress\n    ) external  returns (uint256[] memory caseIds);\n\n    /**\n     * @notice Check if an address is a verified member.\n     * @param memberAddress The address to check.\n     * @return isVerified True if the address is a verified member.\n     */\n    function isMember(\n        address memberAddress\n    ) external view returns (bool isVerified);\n\n    /**\n     * @notice Check if an address is a registered lawyer.\n     * @param lawyerAddress The address to check.\n     * @return isRegistered True if the address is a registered lawyer.\n     */\n    function isLawyer(\n        address lawyerAddress\n    ) external view returns (bool isRegistered);\n\n    /**\n     * @notice Get the legal representative of a member.\n     * @param memberAddress The address of the member.\n     * @return representativeAddress The address of the legal representative.\n     */\n    function getRepresentative(\n        address memberAddress\n    ) external view returns (address representativeAddress);\n\n    /**\n     * @notice Set the token contract address used for payments.\n     * @param tokenAddress The address of the token contract.\n     */\n    function setPaymentToken(address tokenAddress) external;\n\n\n\n    /**\n     * @notice Event emitted when a membership NFT is minted.\n     * @param memberAddress The address of the new member.\n     * @param tokenId The ID of the minted NFT.\n     */\n    event MembershipNFTMinted(\n        address indexed memberAddress,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @notice Event emitted when a legal representative is assigned to a member.\n     * @param memberAddress The address of the member.\n     * @param representativeAddress The address of the legal representative.\n     */\n    event RepresentativeAssigned(\n        address indexed memberAddress,\n        address indexed representativeAddress\n    );\n\n    /**\n     * @notice Event emitted when a lawyer is rewarded after confirming an emergency response.\n     * @param lawyerAddress The address of the lawyer receiving the reward.\n     * @param rewardAmount The amount of reward given to the lawyer.\n     * @param caseId The unique identifier for the case.\n     */\n    event LawyerRewarded(\n        address indexed lawyerAddress,\n        uint256 rewardAmount,\n        uint256 caseId\n    );\n\n    /**\n     * @notice Event emitted when a lawyer signs up as a legal representative.\n     * @param lawyerAddress The address of the lawyer signing up.\n     */\n    event LawyerSignedUp(address indexed lawyerAddress);\n\n    /**\n     * @notice Event emitted when a new case is added for a lawyer.\n     * @param lawyerAddress The address of the lawyer handling the case.\n     * @param caseId The unique identifier for the case.\n     * @param memberAddress The address of the member involved in the case.\n     */\n    event CaseAdded(\n        address indexed lawyerAddress,\n        uint256 indexed caseId,\n        address indexed memberAddress\n    );\n\n    /**\n     * @notice Event emitted when a case is resolved for a lawyer.\n     * @param lawyerAddress The address of the lawyer handling the case.\n     * @param caseId The unique identifier for the case.\n     */\n    event CaseResolved(address indexed lawyerAddress, uint256 indexed caseId);\n\n    /**\n     * @notice Event emitted when the payment token is updated.\n     * @param tokenAddress The new token contract address.\n     */\n    event PaymentTokenUpdated(address indexed tokenAddress);\n\n    /**\n     * @notice Event emitted when an emergency response is confirmed by a lawyer.\n     * @param lawyerAddress The address of the lawyer responding to the emergency.\n     * @param caseId The unique identifier for the case.\n     * @param memberAddress The address of the member involved.\n     * @param timestamp The time when the response was confirmed.\n     */\n    event EmergencyResponseConfirmed(\n        address indexed lawyerAddress,\n        uint256 indexed caseId,\n        address indexed memberAddress,\n        uint256 timestamp\n    );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/IPadiProtocol.sol": {
				"IPadiProtocol": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "caseId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								}
							],
							"name": "CaseAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "caseId",
									"type": "uint256"
								}
							],
							"name": "CaseResolved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "caseId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "EmergencyResponseConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "caseId",
									"type": "uint256"
								}
							],
							"name": "LawyerRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								}
							],
							"name": "LawyerSignedUp",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "MembershipNFTMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "PaymentTokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "representativeAddress",
									"type": "address"
								}
							],
							"name": "RepresentativeAssigned",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "descriptionMetadata",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "addCase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "representativeAddress",
									"type": "address"
								}
							],
							"name": "assignRepresentative",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "caseId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								}
							],
							"name": "confirmEmergencyResponse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								}
							],
							"name": "getOpenCases",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "caseIds",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								}
							],
							"name": "getRepresentative",
							"outputs": [
								{
									"internalType": "address",
									"name": "representativeAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								}
							],
							"name": "isLawyer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isRegistered",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								}
							],
							"name": "isMember",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isVerified",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "memberAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "mintMembershipNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "caseId",
									"type": "uint256"
								}
							],
							"name": "resolveCase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "caseId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "rewardLawyerForEmergency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "setPaymentToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lawyerAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "profileUri",
									"type": "string"
								}
							],
							"name": "signUpLawyer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"CaseAdded(address,uint256,address)": {
								"params": {
									"caseId": "The unique identifier for the case.",
									"lawyerAddress": "The address of the lawyer handling the case.",
									"memberAddress": "The address of the member involved in the case."
								}
							},
							"CaseResolved(address,uint256)": {
								"params": {
									"caseId": "The unique identifier for the case.",
									"lawyerAddress": "The address of the lawyer handling the case."
								}
							},
							"EmergencyResponseConfirmed(address,uint256,address,uint256)": {
								"params": {
									"caseId": "The unique identifier for the case.",
									"lawyerAddress": "The address of the lawyer responding to the emergency.",
									"memberAddress": "The address of the member involved.",
									"timestamp": "The time when the response was confirmed."
								}
							},
							"LawyerRewarded(address,uint256,uint256)": {
								"params": {
									"caseId": "The unique identifier for the case.",
									"lawyerAddress": "The address of the lawyer receiving the reward.",
									"rewardAmount": "The amount of reward given to the lawyer."
								}
							},
							"LawyerSignedUp(address)": {
								"params": {
									"lawyerAddress": "The address of the lawyer signing up."
								}
							},
							"MembershipNFTMinted(address,uint256)": {
								"params": {
									"memberAddress": "The address of the new member.",
									"tokenId": "The ID of the minted NFT."
								}
							},
							"PaymentTokenUpdated(address)": {
								"params": {
									"tokenAddress": "The new token contract address."
								}
							},
							"RepresentativeAssigned(address,address)": {
								"params": {
									"memberAddress": "The address of the member.",
									"representativeAddress": "The address of the legal representative."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addCase(address,address,string,uint256)": {
								"params": {
									"lawyerAddress": "The address of the lawyer handling the case.",
									"memberAddress": "The address of the member involved in the case."
								}
							},
							"assignRepresentative(address,address)": {
								"params": {
									"memberAddress": "The address of the member.",
									"representativeAddress": "The address of the legal representative."
								}
							},
							"confirmEmergencyResponse(address,uint256,address)": {
								"params": {
									"caseId": "The unique identifier for the case.",
									"lawyerAddress": "The address of the lawyer (Padi) responding to the emergency.",
									"memberAddress": "The address of the member calling for help."
								}
							},
							"getOpenCases(address)": {
								"params": {
									"lawyerAddress": "The address of the lawyer."
								},
								"returns": {
									"caseIds": "An array of unique identifiers for open cases."
								}
							},
							"getRepresentative(address)": {
								"params": {
									"memberAddress": "The address of the member."
								},
								"returns": {
									"representativeAddress": "The address of the legal representative."
								}
							},
							"isLawyer(address)": {
								"params": {
									"lawyerAddress": "The address to check."
								},
								"returns": {
									"isRegistered": "True if the address is a registered lawyer."
								}
							},
							"isMember(address)": {
								"params": {
									"memberAddress": "The address to check."
								},
								"returns": {
									"isVerified": "True if the address is a verified member."
								}
							},
							"mintMembershipNFT(address,string,uint256)": {
								"params": {
									"memberAddress": "The address of the new member.",
									"metadataURI": "The metadata URI for the NFT.",
									"paymentAmount": "The amount of the specific token to be paid."
								}
							},
							"resolveCase(address,uint256)": {
								"params": {
									"caseId": "The unique identifier for the case.",
									"lawyerAddress": "The address of the lawyer handling the case."
								}
							},
							"rewardLawyerForEmergency(address,uint256,uint256)": {
								"params": {
									"caseId": "The unique identifier for the case.",
									"lawyerAddress": "The address of the lawyer (Padi).",
									"rewardAmount": "The amount of tokens to reward the lawyer."
								}
							},
							"setPaymentToken(address)": {
								"params": {
									"tokenAddress": "The address of the token contract."
								}
							},
							"signUpLawyer(address,string)": {
								"params": {
									"lawyerAddress": "The address of the lawyer signing up."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCase(address,address,string,uint256)": "91b0ad5b",
							"assignRepresentative(address,address)": "4158c1b5",
							"confirmEmergencyResponse(address,uint256,address)": "241f8715",
							"getOpenCases(address)": "e1a9abf1",
							"getRepresentative(address)": "edd501fa",
							"isLawyer(address)": "5939a84e",
							"isMember(address)": "a230c524",
							"mintMembershipNFT(address,string,uint256)": "8baa5d8b",
							"resolveCase(address,uint256)": "49678605",
							"rewardLawyerForEmergency(address,uint256,uint256)": "aa9aa17a",
							"setPaymentToken(address)": "6a326ab1",
							"signUpLawyer(address,string)": "4b870a83"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"}],\"name\":\"CaseAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"}],\"name\":\"CaseResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyResponseConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"}],\"name\":\"LawyerRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"}],\"name\":\"LawyerSignedUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MembershipNFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"PaymentTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"representativeAddress\",\"type\":\"address\"}],\"name\":\"RepresentativeAssigned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"descriptionMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"addCase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"representativeAddress\",\"type\":\"address\"}],\"name\":\"assignRepresentative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"}],\"name\":\"confirmEmergencyResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"}],\"name\":\"getOpenCases\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"caseIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"}],\"name\":\"getRepresentative\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"representativeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"}],\"name\":\"isLawyer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"mintMembershipNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"}],\"name\":\"resolveCase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"rewardLawyerForEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lawyerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"profileUri\",\"type\":\"string\"}],\"name\":\"signUpLawyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CaseAdded(address,uint256,address)\":{\"params\":{\"caseId\":\"The unique identifier for the case.\",\"lawyerAddress\":\"The address of the lawyer handling the case.\",\"memberAddress\":\"The address of the member involved in the case.\"}},\"CaseResolved(address,uint256)\":{\"params\":{\"caseId\":\"The unique identifier for the case.\",\"lawyerAddress\":\"The address of the lawyer handling the case.\"}},\"EmergencyResponseConfirmed(address,uint256,address,uint256)\":{\"params\":{\"caseId\":\"The unique identifier for the case.\",\"lawyerAddress\":\"The address of the lawyer responding to the emergency.\",\"memberAddress\":\"The address of the member involved.\",\"timestamp\":\"The time when the response was confirmed.\"}},\"LawyerRewarded(address,uint256,uint256)\":{\"params\":{\"caseId\":\"The unique identifier for the case.\",\"lawyerAddress\":\"The address of the lawyer receiving the reward.\",\"rewardAmount\":\"The amount of reward given to the lawyer.\"}},\"LawyerSignedUp(address)\":{\"params\":{\"lawyerAddress\":\"The address of the lawyer signing up.\"}},\"MembershipNFTMinted(address,uint256)\":{\"params\":{\"memberAddress\":\"The address of the new member.\",\"tokenId\":\"The ID of the minted NFT.\"}},\"PaymentTokenUpdated(address)\":{\"params\":{\"tokenAddress\":\"The new token contract address.\"}},\"RepresentativeAssigned(address,address)\":{\"params\":{\"memberAddress\":\"The address of the member.\",\"representativeAddress\":\"The address of the legal representative.\"}}},\"kind\":\"dev\",\"methods\":{\"addCase(address,address,string,uint256)\":{\"params\":{\"lawyerAddress\":\"The address of the lawyer handling the case.\",\"memberAddress\":\"The address of the member involved in the case.\"}},\"assignRepresentative(address,address)\":{\"params\":{\"memberAddress\":\"The address of the member.\",\"representativeAddress\":\"The address of the legal representative.\"}},\"confirmEmergencyResponse(address,uint256,address)\":{\"params\":{\"caseId\":\"The unique identifier for the case.\",\"lawyerAddress\":\"The address of the lawyer (Padi) responding to the emergency.\",\"memberAddress\":\"The address of the member calling for help.\"}},\"getOpenCases(address)\":{\"params\":{\"lawyerAddress\":\"The address of the lawyer.\"},\"returns\":{\"caseIds\":\"An array of unique identifiers for open cases.\"}},\"getRepresentative(address)\":{\"params\":{\"memberAddress\":\"The address of the member.\"},\"returns\":{\"representativeAddress\":\"The address of the legal representative.\"}},\"isLawyer(address)\":{\"params\":{\"lawyerAddress\":\"The address to check.\"},\"returns\":{\"isRegistered\":\"True if the address is a registered lawyer.\"}},\"isMember(address)\":{\"params\":{\"memberAddress\":\"The address to check.\"},\"returns\":{\"isVerified\":\"True if the address is a verified member.\"}},\"mintMembershipNFT(address,string,uint256)\":{\"params\":{\"memberAddress\":\"The address of the new member.\",\"metadataURI\":\"The metadata URI for the NFT.\",\"paymentAmount\":\"The amount of the specific token to be paid.\"}},\"resolveCase(address,uint256)\":{\"params\":{\"caseId\":\"The unique identifier for the case.\",\"lawyerAddress\":\"The address of the lawyer handling the case.\"}},\"rewardLawyerForEmergency(address,uint256,uint256)\":{\"params\":{\"caseId\":\"The unique identifier for the case.\",\"lawyerAddress\":\"The address of the lawyer (Padi).\",\"rewardAmount\":\"The amount of tokens to reward the lawyer.\"}},\"setPaymentToken(address)\":{\"params\":{\"tokenAddress\":\"The address of the token contract.\"}},\"signUpLawyer(address,string)\":{\"params\":{\"lawyerAddress\":\"The address of the lawyer signing up.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CaseAdded(address,uint256,address)\":{\"notice\":\"Event emitted when a new case is added for a lawyer.\"},\"CaseResolved(address,uint256)\":{\"notice\":\"Event emitted when a case is resolved for a lawyer.\"},\"EmergencyResponseConfirmed(address,uint256,address,uint256)\":{\"notice\":\"Event emitted when an emergency response is confirmed by a lawyer.\"},\"LawyerRewarded(address,uint256,uint256)\":{\"notice\":\"Event emitted when a lawyer is rewarded after confirming an emergency response.\"},\"LawyerSignedUp(address)\":{\"notice\":\"Event emitted when a lawyer signs up as a legal representative.\"},\"MembershipNFTMinted(address,uint256)\":{\"notice\":\"Event emitted when a membership NFT is minted.\"},\"PaymentTokenUpdated(address)\":{\"notice\":\"Event emitted when the payment token is updated.\"},\"RepresentativeAssigned(address,address)\":{\"notice\":\"Event emitted when a legal representative is assigned to a member.\"}},\"kind\":\"user\",\"methods\":{\"addCase(address,address,string,uint256)\":{\"notice\":\"Track a new case for a lawyer.\"},\"assignRepresentative(address,address)\":{\"notice\":\"Assign a legal representative (Padi) to a member.\"},\"confirmEmergencyResponse(address,uint256,address)\":{\"notice\":\"Confirm that a lawyer (Padi) has responded to an emergency call from a member.\"},\"getOpenCases(address)\":{\"notice\":\"Get the list of open cases for a lawyer.\"},\"getRepresentative(address)\":{\"notice\":\"Get the legal representative of a member.\"},\"isLawyer(address)\":{\"notice\":\"Check if an address is a registered lawyer.\"},\"isMember(address)\":{\"notice\":\"Check if an address is a verified member.\"},\"mintMembershipNFT(address,string,uint256)\":{\"notice\":\"Mint an NFT ID card for a new member.\"},\"resolveCase(address,uint256)\":{\"notice\":\"Mark a case as resolved for a lawyer.\"},\"rewardLawyerForEmergency(address,uint256,uint256)\":{\"notice\":\"Reward a lawyer (Padi) after confirming their response to an emergency.\"},\"setPaymentToken(address)\":{\"notice\":\"Set the token contract address used for payments.\"},\"signUpLawyer(address,string)\":{\"notice\":\"Sign up a lawyer as a legal representative.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPadiProtocol.sol\":\"IPadiProtocol\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPadiProtocol.sol\":{\"keccak256\":\"0xfc1f991c069de8144118f01347cc246cf7afbec079607595eed371cd39e478d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2742293b6f76fe1774856f0b90b01684d00945aebe47598c4a25fd6a34b0e0b1\",\"dweb:/ipfs/QmSp71SMGBWWVdrfvQqAi9GnpUpu9QNRgMt4Yjpo2tkJrX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"CaseAdded(address,uint256,address)": {
								"notice": "Event emitted when a new case is added for a lawyer."
							},
							"CaseResolved(address,uint256)": {
								"notice": "Event emitted when a case is resolved for a lawyer."
							},
							"EmergencyResponseConfirmed(address,uint256,address,uint256)": {
								"notice": "Event emitted when an emergency response is confirmed by a lawyer."
							},
							"LawyerRewarded(address,uint256,uint256)": {
								"notice": "Event emitted when a lawyer is rewarded after confirming an emergency response."
							},
							"LawyerSignedUp(address)": {
								"notice": "Event emitted when a lawyer signs up as a legal representative."
							},
							"MembershipNFTMinted(address,uint256)": {
								"notice": "Event emitted when a membership NFT is minted."
							},
							"PaymentTokenUpdated(address)": {
								"notice": "Event emitted when the payment token is updated."
							},
							"RepresentativeAssigned(address,address)": {
								"notice": "Event emitted when a legal representative is assigned to a member."
							}
						},
						"kind": "user",
						"methods": {
							"addCase(address,address,string,uint256)": {
								"notice": "Track a new case for a lawyer."
							},
							"assignRepresentative(address,address)": {
								"notice": "Assign a legal representative (Padi) to a member."
							},
							"confirmEmergencyResponse(address,uint256,address)": {
								"notice": "Confirm that a lawyer (Padi) has responded to an emergency call from a member."
							},
							"getOpenCases(address)": {
								"notice": "Get the list of open cases for a lawyer."
							},
							"getRepresentative(address)": {
								"notice": "Get the legal representative of a member."
							},
							"isLawyer(address)": {
								"notice": "Check if an address is a registered lawyer."
							},
							"isMember(address)": {
								"notice": "Check if an address is a verified member."
							},
							"mintMembershipNFT(address,string,uint256)": {
								"notice": "Mint an NFT ID card for a new member."
							},
							"resolveCase(address,uint256)": {
								"notice": "Mark a case as resolved for a lawyer."
							},
							"rewardLawyerForEmergency(address,uint256,uint256)": {
								"notice": "Reward a lawyer (Padi) after confirming their response to an emergency."
							},
							"setPaymentToken(address)": {
								"notice": "Set the token contract address used for payments."
							},
							"signUpLawyer(address,string)": {
								"notice": "Sign up a lawyer as a legal representative."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IPadiProtocol.sol": {
				"ast": {
					"absolutePath": "contracts/IPadiProtocol.sol",
					"exportedSymbols": {
						"IPadiProtocol": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPadiProtocol",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IPadiProtocol",
							"nameLocation": "67:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "87:252:0",
										"text": " @notice Mint an NFT ID card for a new member.\n @param memberAddress The address of the new member.\n @param metadataURI The metadata URI for the NFT.\n @param paymentAmount The amount of the specific token to be paid."
									},
									"functionSelector": "8baa5d8b",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintMembershipNFT",
									"nameLocation": "353:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "388:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "380:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "427:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "411:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "411:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "456:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "448:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:105:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:0:0"
									},
									"scope": 167,
									"src": "344:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "491:208:0",
										"text": " @notice Assign a legal representative (Padi) to a member.\n @param memberAddress The address of the member.\n @param representativeAddress The address of the legal representative."
									},
									"functionSelector": "4158c1b5",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assignRepresentative",
									"nameLocation": "713:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "751:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "743:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "representativeAddress",
												"nameLocation": "782:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "774:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:76:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:0:0"
									},
									"scope": 167,
									"src": "704:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "825:324:0",
										"text": " @notice Confirm that a lawyer (Padi) has responded to an emergency call from a member.\n @param memberAddress The address of the member calling for help.\n @param caseId The unique identifier for the case.\n @param lawyerAddress The address of the lawyer (Padi) responding to the emergency."
									},
									"functionSelector": "241f8715",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "confirmEmergencyResponse",
									"nameLocation": "1163:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "1205:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1197:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "caseId",
												"nameLocation": "1236:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1228:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "1260:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1252:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:92:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:0"
									},
									"scope": 167,
									"src": "1154:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1295:287:0",
										"text": " @notice Reward a lawyer (Padi) after confirming their response to an emergency.\n @param lawyerAddress The address of the lawyer (Padi).\n @param caseId The unique identifier for the case.\n @param rewardAmount The amount of tokens to reward the lawyer."
									},
									"functionSelector": "aa9aa17a",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardLawyerForEmergency",
									"nameLocation": "1596:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "1638:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1630:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "caseId",
												"nameLocation": "1669:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1661:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1693:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1685:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:91:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1720:0:0"
									},
									"scope": 167,
									"src": "1587:134:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1727:136:0",
										"text": " @notice Sign up a lawyer as a legal representative.\n @param lawyerAddress The address of the lawyer signing up."
									},
									"functionSelector": "4b870a83",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "signUpLawyer",
									"nameLocation": "1877:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "1898:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1890:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "profileUri",
												"nameLocation": "1928:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1912:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 43,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1912:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:50:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:0:0"
									},
									"scope": 167,
									"src": "1868:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1955:206:0",
										"text": " @notice Track a new case for a lawyer.\n @param lawyerAddress The address of the lawyer handling the case.\n @param memberAddress The address of the member involved in the case."
									},
									"functionSelector": "91b0ad5b",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCase",
									"nameLocation": "2175:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "2199:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2191:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "2226:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2218:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "descriptionMetadata",
												"nameLocation": "2261:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2245:35:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2245:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "2333:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2325:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:169:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:0"
									},
									"scope": 167,
									"src": "2166:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2367:194:0",
										"text": " @notice Mark a case as resolved for a lawyer.\n @param lawyerAddress The address of the lawyer handling the case.\n @param caseId The unique identifier for the case."
									},
									"functionSelector": "49678605",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resolveCase",
									"nameLocation": "2575:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "2595:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2587:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "caseId",
												"nameLocation": "2618:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:39:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:0"
									},
									"scope": 167,
									"src": "2566:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2641:192:0",
										"text": " @notice Get the list of open cases for a lawyer.\n @param lawyerAddress The address of the lawyer.\n @return caseIds An array of unique identifiers for open cases."
									},
									"functionSelector": "e1a9abf1",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOpenCases",
									"nameLocation": "2847:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "2877:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2869:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:37:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "caseIds",
												"nameLocation": "2933:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2916:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 72,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2916:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 73,
													"nodeType": "ArrayTypeName",
													"src": "2916:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:26:0"
									},
									"scope": 167,
									"src": "2838:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2948:186:0",
										"text": " @notice Check if an address is a verified member.\n @param memberAddress The address to check.\n @return isVerified True if the address is a verified member."
									},
									"functionSelector": "a230c524",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMember",
									"nameLocation": "3148:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "3174:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3166:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:37:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "isVerified",
												"nameLocation": "3222:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3217:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3216:17:0"
									},
									"scope": 167,
									"src": "3139:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3240:192:0",
										"text": " @notice Check if an address is a registered lawyer.\n @param lawyerAddress The address to check.\n @return isRegistered True if the address is a registered lawyer."
									},
									"functionSelector": "5939a84e",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isLawyer",
									"nameLocation": "3446:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "3472:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3464:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:37:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "isRegistered",
												"nameLocation": "3520:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3515:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3514:19:0"
									},
									"scope": 167,
									"src": "3437:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3540:201:0",
										"text": " @notice Get the legal representative of a member.\n @param memberAddress The address of the member.\n @return representativeAddress The address of the legal representative."
									},
									"functionSelector": "edd501fa",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRepresentative",
									"nameLocation": "3755:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "3790:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3782:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3772:37:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "representativeAddress",
												"nameLocation": "3841:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3833:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:31:0"
									},
									"scope": 167,
									"src": "3746:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "3870:138:0",
										"text": " @notice Set the token contract address used for payments.\n @param tokenAddress The address of the token contract."
									},
									"functionSelector": "6a326ab1",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPaymentToken",
									"nameLocation": "4022:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4046:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "4038:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:22:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4068:0:0"
									},
									"scope": 167,
									"src": "4013:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "4077:180:0",
										"text": " @notice Event emitted when a membership NFT is minted.\n @param memberAddress The address of the new member.\n @param tokenId The ID of the minted NFT."
									},
									"eventSelector": "0ff8d95af74a8c072247e3c2b5e73ab929e2eb87e62682f83f5707bc5bc4a759",
									"id": 113,
									"name": "MembershipNFTMinted",
									"nameLocation": "4268:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "4313:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4297:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4352:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4336:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:78:0"
									},
									"src": "4262:104:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "4372:225:0",
										"text": " @notice Event emitted when a legal representative is assigned to a member.\n @param memberAddress The address of the member.\n @param representativeAddress The address of the legal representative."
									},
									"eventSelector": "f53ec35310a21208780fc7b462ee5d0a47d8ae1c3aa5e0ecdab144ff78dea3a8",
									"id": 120,
									"name": "RepresentativeAssigned",
									"nameLocation": "4608:22:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "4656:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4640:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "representativeAddress",
												"nameLocation": "4695:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4679:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:92:0"
									},
									"src": "4602:121:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "4729:308:0",
										"text": " @notice Event emitted when a lawyer is rewarded after confirming an emergency response.\n @param lawyerAddress The address of the lawyer receiving the reward.\n @param rewardAmount The amount of reward given to the lawyer.\n @param caseId The unique identifier for the case."
									},
									"eventSelector": "09bc545157f97ca1d7d6020a624c818e914739c4a4f4203f263439ed019ac270",
									"id": 129,
									"name": "LawyerRewarded",
									"nameLocation": "5048:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "5088:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5072:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "5119:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5111:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": false,
												"mutability": "mutable",
												"name": "caseId",
												"nameLocation": "5149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5062:99:0"
									},
									"src": "5042:120:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "5168:156:0",
										"text": " @notice Event emitted when a lawyer signs up as a legal representative.\n @param lawyerAddress The address of the lawyer signing up."
									},
									"eventSelector": "477258c324e1dc966c3e151d300b92686593e768b5c01e809c2c820eee02cffc",
									"id": 134,
									"name": "LawyerSignedUp",
									"nameLocation": "5335:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "5366:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "5350:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:31:0"
									},
									"src": "5329:52:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "5387:285:0",
										"text": " @notice Event emitted when a new case is added for a lawyer.\n @param lawyerAddress The address of the lawyer handling the case.\n @param caseId The unique identifier for the case.\n @param memberAddress The address of the member involved in the case."
									},
									"eventSelector": "7323be36e5a901dd950c79e0d3ded4871194f836ec185a0030b10c6c9f381964",
									"id": 143,
									"name": "CaseAdded",
									"nameLocation": "5683:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "5718:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5702:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "caseId",
												"nameLocation": "5757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5741:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "5789:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5773:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5692:116:0"
									},
									"src": "5677:132:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5815:208:0",
										"text": " @notice Event emitted when a case is resolved for a lawyer.\n @param lawyerAddress The address of the lawyer handling the case.\n @param caseId The unique identifier for the case."
									},
									"eventSelector": "8c367c1c13bf9b767a56a0b09a4a9372dd331ad43693c05b58e5f25f123340df",
									"id": 150,
									"name": "CaseResolved",
									"nameLocation": "6034:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "6063:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "6047:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "caseId",
												"nameLocation": "6094:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "6078:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:55:0"
									},
									"src": "6028:74:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "6108:134:0",
										"text": " @notice Event emitted when the payment token is updated.\n @param tokenAddress The new token contract address."
									},
									"eventSelector": "bd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913",
									"id": 155,
									"name": "PaymentTokenUpdated",
									"nameLocation": "6253:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "6289:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6273:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:30:0"
									},
									"src": "6247:56:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "6309:363:0",
										"text": " @notice Event emitted when an emergency response is confirmed by a lawyer.\n @param lawyerAddress The address of the lawyer responding to the emergency.\n @param caseId The unique identifier for the case.\n @param memberAddress The address of the member involved.\n @param timestamp The time when the response was confirmed."
									},
									"eventSelector": "41195084f354bc7da593812f4b0e44aec4e701ef0e7f6e15a5a574c33503437d",
									"id": 166,
									"name": "EmergencyResponseConfirmed",
									"nameLocation": "6683:26:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "lawyerAddress",
												"nameLocation": "6735:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "6719:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "caseId",
												"nameLocation": "6774:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "6758:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberAddress",
												"nameLocation": "6806:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "6790:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "6837:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "6829:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6709:143:0"
									},
									"src": "6677:176:0"
								}
							],
							"scope": 168,
							"src": "57:6798:0",
							"usedErrors": [],
							"usedEvents": [
								113,
								120,
								129,
								134,
								143,
								150,
								155,
								166
							]
						}
					],
					"src": "32:6824:0"
				},
				"id": 0
			}
		}
	}
}